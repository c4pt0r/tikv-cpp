// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coprocessor.proto

#include "coprocessor.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_coprocessor_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_coprocessor_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_KeyRange;
}  // namespace protobuf_coprocessor_2eproto
namespace protobuf_errorpb_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_errorpb_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_Error;
}  // namespace protobuf_errorpb_2eproto
namespace protobuf_kvrpcpb_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kvrpcpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LockInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kvrpcpb_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Context;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kvrpcpb_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ExecDetails;
}  // namespace protobuf_kvrpcpb_2eproto
namespace coprocessor {
class KeyRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyRange>
      _instance;
} _KeyRange_default_instance_;
class RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request>
      _instance;
} _Request_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response>
      _instance;
} _Response_default_instance_;
}  // namespace coprocessor
namespace protobuf_coprocessor_2eproto {
static void InitDefaultsKeyRange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::coprocessor::_KeyRange_default_instance_;
    new (ptr) ::coprocessor::KeyRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::coprocessor::KeyRange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KeyRange =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKeyRange}, {}};

static void InitDefaultsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::coprocessor::_Request_default_instance_;
    new (ptr) ::coprocessor::Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::coprocessor::Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,
      &protobuf_coprocessor_2eproto::scc_info_KeyRange.base,}};

static void InitDefaultsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::coprocessor::_Response_default_instance_;
    new (ptr) ::coprocessor::Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::coprocessor::Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,
      &protobuf_kvrpcpb_2eproto::scc_info_LockInfo.base,
      &protobuf_coprocessor_2eproto::scc_info_KeyRange.base,
      &protobuf_kvrpcpb_2eproto::scc_info_ExecDetails.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_KeyRange.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocessor::KeyRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocessor::KeyRange, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocessor::KeyRange, end_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocessor::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocessor::Request, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocessor::Request, tp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocessor::Request, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocessor::Request, ranges_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocessor::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocessor::Response, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocessor::Response, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocessor::Response, locked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocessor::Response, other_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocessor::Response, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocessor::Response, exec_details_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::coprocessor::KeyRange)},
  { 7, -1, sizeof(::coprocessor::Request)},
  { 16, -1, sizeof(::coprocessor::Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::coprocessor::_KeyRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::coprocessor::_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::coprocessor::_Response_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "coprocessor.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021coprocessor.proto\022\013coprocessor\032\rerrorp"
      "b.proto\032\rkvrpcpb.proto\032\024gogoproto/gogo.p"
      "roto\"&\n\010KeyRange\022\r\n\005start\030\001 \001(\014\022\013\n\003end\030\002"
      " \001(\014\"m\n\007Request\022!\n\007context\030\001 \001(\0132\020.kvrpc"
      "pb.Context\022\n\n\002tp\030\002 \001(\003\022\014\n\004data\030\003 \001(\014\022%\n\006"
      "ranges\030\004 \003(\0132\025.coprocessor.KeyRange\"\201\002\n\010"
      "Response\022E\n\004data\030\001 \001(\014B7\332\336\037/github.com/p"
      "ingcap/tipb/sharedbytes.SharedBytes\310\336\037\000\022"
      "$\n\014region_error\030\002 \001(\0132\016.errorpb.Error\022!\n"
      "\006locked\030\003 \001(\0132\021.kvrpcpb.LockInfo\022\023\n\013othe"
      "r_error\030\004 \001(\t\022$\n\005range\030\005 \001(\0132\025.coprocess"
      "or.KeyRange\022*\n\014exec_details\030\006 \001(\0132\024.kvrp"
      "cpb.ExecDetailsB&\n\030com.pingcap.tikv.kvpr"
      "oto\310\342\036\001\340\342\036\001\320\342\036\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 543);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "coprocessor.proto", &protobuf_RegisterTypes);
  ::protobuf_errorpb_2eproto::AddDescriptors();
  ::protobuf_kvrpcpb_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_coprocessor_2eproto
namespace coprocessor {

// ===================================================================

void KeyRange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyRange::kStartFieldNumber;
const int KeyRange::kEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyRange::KeyRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_coprocessor_2eproto::scc_info_KeyRange.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:coprocessor.KeyRange)
}
KeyRange::KeyRange(const KeyRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start().size() > 0) {
    start_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_);
  }
  end_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.end().size() > 0) {
    end_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_);
  }
  // @@protoc_insertion_point(copy_constructor:coprocessor.KeyRange)
}

void KeyRange::SharedCtor() {
  start_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

KeyRange::~KeyRange() {
  // @@protoc_insertion_point(destructor:coprocessor.KeyRange)
  SharedDtor();
}

void KeyRange::SharedDtor() {
  start_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyRange::descriptor() {
  ::protobuf_coprocessor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_coprocessor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyRange& KeyRange::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_coprocessor_2eproto::scc_info_KeyRange.base);
  return *internal_default_instance();
}


void KeyRange::Clear() {
// @@protoc_insertion_point(message_clear_start:coprocessor.KeyRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  start_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool KeyRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:coprocessor.KeyRange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:coprocessor.KeyRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:coprocessor.KeyRange)
  return false;
#undef DO_
}

void KeyRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:coprocessor.KeyRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes start = 1;
  if (this->start().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->start(), output);
  }

  // bytes end = 2;
  if (this->end().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->end(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:coprocessor.KeyRange)
}

::google::protobuf::uint8* KeyRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:coprocessor.KeyRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes start = 1;
  if (this->start().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->start(), target);
  }

  // bytes end = 2;
  if (this->end().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->end(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:coprocessor.KeyRange)
  return target;
}

size_t KeyRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:coprocessor.KeyRange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes start = 1;
  if (this->start().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->start());
  }

  // bytes end = 2;
  if (this->end().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->end());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:coprocessor.KeyRange)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:coprocessor.KeyRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:coprocessor.KeyRange)
    MergeFrom(*source);
  }
}

void KeyRange::MergeFrom(const KeyRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:coprocessor.KeyRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start().size() > 0) {

    start_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_);
  }
  if (from.end().size() > 0) {

    end_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_);
  }
}

void KeyRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:coprocessor.KeyRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyRange::CopyFrom(const KeyRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:coprocessor.KeyRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyRange::IsInitialized() const {
  return true;
}

void KeyRange::Swap(KeyRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyRange::InternalSwap(KeyRange* other) {
  using std::swap;
  start_.Swap(&other->start_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  end_.Swap(&other->end_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyRange::GetMetadata() const {
  protobuf_coprocessor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_coprocessor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request::InitAsDefaultInstance() {
  ::coprocessor::_Request_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
void Request::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kContextFieldNumber;
const int Request::kTpFieldNumber;
const int Request::kDataFieldNumber;
const int Request::kRangesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_coprocessor_2eproto::scc_info_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:coprocessor.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ranges_(from.ranges_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  tp_ = from.tp_;
  // @@protoc_insertion_point(copy_constructor:coprocessor.Request)
}

void Request::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tp_) -
      reinterpret_cast<char*>(&context_)) + sizeof(tp_));
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:coprocessor.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  ::protobuf_coprocessor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_coprocessor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request& Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_coprocessor_2eproto::scc_info_Request.base);
  return *internal_default_instance();
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:coprocessor.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ranges_.Clear();
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  tp_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:coprocessor.Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 tp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &tp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .coprocessor.KeyRange ranges = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ranges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:coprocessor.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:coprocessor.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:coprocessor.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // int64 tp = 2;
  if (this->tp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->tp(), output);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  // repeated .coprocessor.KeyRange ranges = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ranges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->ranges(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:coprocessor.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:coprocessor.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // int64 tp = 2;
  if (this->tp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->tp(), target);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  // repeated .coprocessor.KeyRange ranges = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ranges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->ranges(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:coprocessor.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:coprocessor.Request)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .coprocessor.KeyRange ranges = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->ranges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ranges(static_cast<int>(i)));
    }
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // int64 tp = 2;
  if (this->tp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->tp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:coprocessor.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:coprocessor.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:coprocessor.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:coprocessor.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ranges_.MergeFrom(from.ranges_);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
  if (from.tp() != 0) {
    set_tp(from.tp());
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:coprocessor.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:coprocessor.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  CastToBase(&ranges_)->InternalSwap(CastToBase(&other->ranges_));
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  swap(tp_, other->tp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_coprocessor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_coprocessor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response::InitAsDefaultInstance() {
  ::coprocessor::_Response_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
  ::coprocessor::_Response_default_instance_._instance.get_mutable()->locked_ = const_cast< ::kvrpcpb::LockInfo*>(
      ::kvrpcpb::LockInfo::internal_default_instance());
  ::coprocessor::_Response_default_instance_._instance.get_mutable()->range_ = const_cast< ::coprocessor::KeyRange*>(
      ::coprocessor::KeyRange::internal_default_instance());
  ::coprocessor::_Response_default_instance_._instance.get_mutable()->exec_details_ = const_cast< ::kvrpcpb::ExecDetails*>(
      ::kvrpcpb::ExecDetails::internal_default_instance());
}
void Response::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
void Response::clear_locked() {
  if (GetArenaNoVirtual() == NULL && locked_ != NULL) {
    delete locked_;
  }
  locked_ = NULL;
}
void Response::clear_exec_details() {
  if (GetArenaNoVirtual() == NULL && exec_details_ != NULL) {
    delete exec_details_;
  }
  exec_details_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kDataFieldNumber;
const int Response::kRegionErrorFieldNumber;
const int Response::kLockedFieldNumber;
const int Response::kOtherErrorFieldNumber;
const int Response::kRangeFieldNumber;
const int Response::kExecDetailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_coprocessor_2eproto::scc_info_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:coprocessor.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  other_error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.other_error().size() > 0) {
    other_error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_error_);
  }
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  if (from.has_locked()) {
    locked_ = new ::kvrpcpb::LockInfo(*from.locked_);
  } else {
    locked_ = NULL;
  }
  if (from.has_range()) {
    range_ = new ::coprocessor::KeyRange(*from.range_);
  } else {
    range_ = NULL;
  }
  if (from.has_exec_details()) {
    exec_details_ = new ::kvrpcpb::ExecDetails(*from.exec_details_);
  } else {
    exec_details_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:coprocessor.Response)
}

void Response::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&region_error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exec_details_) -
      reinterpret_cast<char*>(&region_error_)) + sizeof(exec_details_));
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:coprocessor.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete region_error_;
  if (this != internal_default_instance()) delete locked_;
  if (this != internal_default_instance()) delete range_;
  if (this != internal_default_instance()) delete exec_details_;
}

void Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  ::protobuf_coprocessor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_coprocessor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_coprocessor_2eproto::scc_info_Response.base);
  return *internal_default_instance();
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:coprocessor.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  other_error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  if (GetArenaNoVirtual() == NULL && locked_ != NULL) {
    delete locked_;
  }
  locked_ = NULL;
  if (GetArenaNoVirtual() == NULL && range_ != NULL) {
    delete range_;
  }
  range_ = NULL;
  if (GetArenaNoVirtual() == NULL && exec_details_ != NULL) {
    delete exec_details_;
  }
  exec_details_ = NULL;
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:coprocessor.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/pingcap/tipb/sharedbytes.SharedBytes"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .errorpb.Error region_error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvrpcpb.LockInfo locked = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_locked()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string other_error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_other_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->other_error().data(), static_cast<int>(this->other_error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "coprocessor.Response.other_error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .coprocessor.KeyRange range = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvrpcpb.ExecDetails exec_details = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exec_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:coprocessor.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:coprocessor.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:coprocessor.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/pingcap/tipb/sharedbytes.SharedBytes"];
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  // .errorpb.Error region_error = 2;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_region_error(), output);
  }

  // .kvrpcpb.LockInfo locked = 3;
  if (this->has_locked()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_locked(), output);
  }

  // string other_error = 4;
  if (this->other_error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->other_error().data(), static_cast<int>(this->other_error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "coprocessor.Response.other_error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->other_error(), output);
  }

  // .coprocessor.KeyRange range = 5;
  if (this->has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_range(), output);
  }

  // .kvrpcpb.ExecDetails exec_details = 6;
  if (this->has_exec_details()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_exec_details(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:coprocessor.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:coprocessor.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/pingcap/tipb/sharedbytes.SharedBytes"];
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  // .errorpb.Error region_error = 2;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_region_error(), deterministic, target);
  }

  // .kvrpcpb.LockInfo locked = 3;
  if (this->has_locked()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_locked(), deterministic, target);
  }

  // string other_error = 4;
  if (this->other_error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->other_error().data(), static_cast<int>(this->other_error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "coprocessor.Response.other_error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->other_error(), target);
  }

  // .coprocessor.KeyRange range = 5;
  if (this->has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_range(), deterministic, target);
  }

  // .kvrpcpb.ExecDetails exec_details = 6;
  if (this->has_exec_details()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_exec_details(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:coprocessor.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:coprocessor.Response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 1 [(.gogoproto.nullable) = false, (.gogoproto.customtype) = "github.com/pingcap/tipb/sharedbytes.SharedBytes"];
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // string other_error = 4;
  if (this->other_error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->other_error());
  }

  // .errorpb.Error region_error = 2;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  // .kvrpcpb.LockInfo locked = 3;
  if (this->has_locked()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *locked_);
  }

  // .coprocessor.KeyRange range = 5;
  if (this->has_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *range_);
  }

  // .kvrpcpb.ExecDetails exec_details = 6;
  if (this->has_exec_details()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *exec_details_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:coprocessor.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:coprocessor.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:coprocessor.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:coprocessor.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.other_error().size() > 0) {

    other_error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_error_);
  }
  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
  if (from.has_locked()) {
    mutable_locked()->::kvrpcpb::LockInfo::MergeFrom(from.locked());
  }
  if (from.has_range()) {
    mutable_range()->::coprocessor::KeyRange::MergeFrom(from.range());
  }
  if (from.has_exec_details()) {
    mutable_exec_details()->::kvrpcpb::ExecDetails::MergeFrom(from.exec_details());
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:coprocessor.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:coprocessor.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  other_error_.Swap(&other->other_error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(region_error_, other->region_error_);
  swap(locked_, other->locked_);
  swap(range_, other->range_);
  swap(exec_details_, other->exec_details_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_coprocessor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_coprocessor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace coprocessor
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::coprocessor::KeyRange* Arena::CreateMaybeMessage< ::coprocessor::KeyRange >(Arena* arena) {
  return Arena::CreateInternal< ::coprocessor::KeyRange >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::coprocessor::Request* Arena::CreateMaybeMessage< ::coprocessor::Request >(Arena* arena) {
  return Arena::CreateInternal< ::coprocessor::Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::coprocessor::Response* Arena::CreateMaybeMessage< ::coprocessor::Response >(Arena* arena) {
  return Arena::CreateInternal< ::coprocessor::Response >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
