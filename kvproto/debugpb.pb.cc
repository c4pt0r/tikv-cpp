// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: debugpb.proto

#include "debugpb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_debugpb_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_debugpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListFailPointsResponse_Entry;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_debugpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Property;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_debugpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RegionSizeResponse_Entry;
}  // namespace protobuf_debugpb_2eproto
namespace protobuf_eraftpb_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eraftpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Entry;
}  // namespace protobuf_eraftpb_2eproto
namespace protobuf_kvrpcpb_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kvrpcpb_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_MvccInfo;
}  // namespace protobuf_kvrpcpb_2eproto
namespace protobuf_raft_5fserverpb_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_raft_5fserverpb_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RaftApplyState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_raft_5fserverpb_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RaftLocalState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_raft_5fserverpb_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_RegionLocalState;
}  // namespace protobuf_raft_5fserverpb_2eproto
namespace debugpb {
class GetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetRequest>
      _instance;
} _GetRequest_default_instance_;
class GetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetResponse>
      _instance;
} _GetResponse_default_instance_;
class RaftLogRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RaftLogRequest>
      _instance;
} _RaftLogRequest_default_instance_;
class RaftLogResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RaftLogResponse>
      _instance;
} _RaftLogResponse_default_instance_;
class RegionInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegionInfoRequest>
      _instance;
} _RegionInfoRequest_default_instance_;
class RegionInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegionInfoResponse>
      _instance;
} _RegionInfoResponse_default_instance_;
class RegionSizeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegionSizeRequest>
      _instance;
} _RegionSizeRequest_default_instance_;
class RegionSizeResponse_EntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegionSizeResponse_Entry>
      _instance;
} _RegionSizeResponse_Entry_default_instance_;
class RegionSizeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegionSizeResponse>
      _instance;
} _RegionSizeResponse_default_instance_;
class ScanMvccRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScanMvccRequest>
      _instance;
} _ScanMvccRequest_default_instance_;
class ScanMvccResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScanMvccResponse>
      _instance;
} _ScanMvccResponse_default_instance_;
class CompactRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompactRequest>
      _instance;
} _CompactRequest_default_instance_;
class CompactResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompactResponse>
      _instance;
} _CompactResponse_default_instance_;
class InjectFailPointRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InjectFailPointRequest>
      _instance;
} _InjectFailPointRequest_default_instance_;
class InjectFailPointResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InjectFailPointResponse>
      _instance;
} _InjectFailPointResponse_default_instance_;
class RecoverFailPointRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecoverFailPointRequest>
      _instance;
} _RecoverFailPointRequest_default_instance_;
class RecoverFailPointResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecoverFailPointResponse>
      _instance;
} _RecoverFailPointResponse_default_instance_;
class ListFailPointsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFailPointsRequest>
      _instance;
} _ListFailPointsRequest_default_instance_;
class ListFailPointsResponse_EntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFailPointsResponse_Entry>
      _instance;
} _ListFailPointsResponse_Entry_default_instance_;
class ListFailPointsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListFailPointsResponse>
      _instance;
} _ListFailPointsResponse_default_instance_;
class GetMetricsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMetricsRequest>
      _instance;
} _GetMetricsRequest_default_instance_;
class GetMetricsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetMetricsResponse>
      _instance;
} _GetMetricsResponse_default_instance_;
class RegionConsistencyCheckRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegionConsistencyCheckRequest>
      _instance;
} _RegionConsistencyCheckRequest_default_instance_;
class RegionConsistencyCheckResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegionConsistencyCheckResponse>
      _instance;
} _RegionConsistencyCheckResponse_default_instance_;
class ModifyTikvConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModifyTikvConfigRequest>
      _instance;
} _ModifyTikvConfigRequest_default_instance_;
class ModifyTikvConfigResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModifyTikvConfigResponse>
      _instance;
} _ModifyTikvConfigResponse_default_instance_;
class PropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Property>
      _instance;
} _Property_default_instance_;
class GetRegionPropertiesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetRegionPropertiesRequest>
      _instance;
} _GetRegionPropertiesRequest_default_instance_;
class GetRegionPropertiesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetRegionPropertiesResponse>
      _instance;
} _GetRegionPropertiesResponse_default_instance_;
}  // namespace debugpb
namespace protobuf_debugpb_2eproto {
static void InitDefaultsGetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_GetRequest_default_instance_;
    new (ptr) ::debugpb::GetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::GetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetRequest}, {}};

static void InitDefaultsGetResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_GetResponse_default_instance_;
    new (ptr) ::debugpb::GetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::GetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetResponse}, {}};

static void InitDefaultsRaftLogRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_RaftLogRequest_default_instance_;
    new (ptr) ::debugpb::RaftLogRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::RaftLogRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RaftLogRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRaftLogRequest}, {}};

static void InitDefaultsRaftLogResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_RaftLogResponse_default_instance_;
    new (ptr) ::debugpb::RaftLogResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::RaftLogResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RaftLogResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRaftLogResponse}, {
      &protobuf_eraftpb_2eproto::scc_info_Entry.base,}};

static void InitDefaultsRegionInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_RegionInfoRequest_default_instance_;
    new (ptr) ::debugpb::RegionInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::RegionInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegionInfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegionInfoRequest}, {}};

static void InitDefaultsRegionInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_RegionInfoResponse_default_instance_;
    new (ptr) ::debugpb::RegionInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::RegionInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_RegionInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsRegionInfoResponse}, {
      &protobuf_raft_5fserverpb_2eproto::scc_info_RaftLocalState.base,
      &protobuf_raft_5fserverpb_2eproto::scc_info_RaftApplyState.base,
      &protobuf_raft_5fserverpb_2eproto::scc_info_RegionLocalState.base,}};

static void InitDefaultsRegionSizeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_RegionSizeRequest_default_instance_;
    new (ptr) ::debugpb::RegionSizeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::RegionSizeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegionSizeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegionSizeRequest}, {}};

static void InitDefaultsRegionSizeResponse_Entry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_RegionSizeResponse_Entry_default_instance_;
    new (ptr) ::debugpb::RegionSizeResponse_Entry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::RegionSizeResponse_Entry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegionSizeResponse_Entry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegionSizeResponse_Entry}, {}};

static void InitDefaultsRegionSizeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_RegionSizeResponse_default_instance_;
    new (ptr) ::debugpb::RegionSizeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::RegionSizeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RegionSizeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRegionSizeResponse}, {
      &protobuf_debugpb_2eproto::scc_info_RegionSizeResponse_Entry.base,}};

static void InitDefaultsScanMvccRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_ScanMvccRequest_default_instance_;
    new (ptr) ::debugpb::ScanMvccRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::ScanMvccRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScanMvccRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScanMvccRequest}, {}};

static void InitDefaultsScanMvccResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_ScanMvccResponse_default_instance_;
    new (ptr) ::debugpb::ScanMvccResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::ScanMvccResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ScanMvccResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsScanMvccResponse}, {
      &protobuf_kvrpcpb_2eproto::scc_info_MvccInfo.base,}};

static void InitDefaultsCompactRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_CompactRequest_default_instance_;
    new (ptr) ::debugpb::CompactRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::CompactRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CompactRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCompactRequest}, {}};

static void InitDefaultsCompactResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_CompactResponse_default_instance_;
    new (ptr) ::debugpb::CompactResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::CompactResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CompactResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCompactResponse}, {}};

static void InitDefaultsInjectFailPointRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_InjectFailPointRequest_default_instance_;
    new (ptr) ::debugpb::InjectFailPointRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::InjectFailPointRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InjectFailPointRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInjectFailPointRequest}, {}};

static void InitDefaultsInjectFailPointResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_InjectFailPointResponse_default_instance_;
    new (ptr) ::debugpb::InjectFailPointResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::InjectFailPointResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InjectFailPointResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInjectFailPointResponse}, {}};

static void InitDefaultsRecoverFailPointRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_RecoverFailPointRequest_default_instance_;
    new (ptr) ::debugpb::RecoverFailPointRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::RecoverFailPointRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RecoverFailPointRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRecoverFailPointRequest}, {}};

static void InitDefaultsRecoverFailPointResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_RecoverFailPointResponse_default_instance_;
    new (ptr) ::debugpb::RecoverFailPointResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::RecoverFailPointResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RecoverFailPointResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRecoverFailPointResponse}, {}};

static void InitDefaultsListFailPointsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_ListFailPointsRequest_default_instance_;
    new (ptr) ::debugpb::ListFailPointsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::ListFailPointsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFailPointsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFailPointsRequest}, {}};

static void InitDefaultsListFailPointsResponse_Entry() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_ListFailPointsResponse_Entry_default_instance_;
    new (ptr) ::debugpb::ListFailPointsResponse_Entry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::ListFailPointsResponse_Entry::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ListFailPointsResponse_Entry =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsListFailPointsResponse_Entry}, {}};

static void InitDefaultsListFailPointsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_ListFailPointsResponse_default_instance_;
    new (ptr) ::debugpb::ListFailPointsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::ListFailPointsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListFailPointsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListFailPointsResponse}, {
      &protobuf_debugpb_2eproto::scc_info_ListFailPointsResponse_Entry.base,}};

static void InitDefaultsGetMetricsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_GetMetricsRequest_default_instance_;
    new (ptr) ::debugpb::GetMetricsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::GetMetricsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMetricsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMetricsRequest}, {}};

static void InitDefaultsGetMetricsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_GetMetricsResponse_default_instance_;
    new (ptr) ::debugpb::GetMetricsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::GetMetricsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetMetricsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetMetricsResponse}, {}};

static void InitDefaultsRegionConsistencyCheckRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_RegionConsistencyCheckRequest_default_instance_;
    new (ptr) ::debugpb::RegionConsistencyCheckRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::RegionConsistencyCheckRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegionConsistencyCheckRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegionConsistencyCheckRequest}, {}};

static void InitDefaultsRegionConsistencyCheckResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_RegionConsistencyCheckResponse_default_instance_;
    new (ptr) ::debugpb::RegionConsistencyCheckResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::RegionConsistencyCheckResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegionConsistencyCheckResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegionConsistencyCheckResponse}, {}};

static void InitDefaultsModifyTikvConfigRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_ModifyTikvConfigRequest_default_instance_;
    new (ptr) ::debugpb::ModifyTikvConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::ModifyTikvConfigRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ModifyTikvConfigRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsModifyTikvConfigRequest}, {}};

static void InitDefaultsModifyTikvConfigResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_ModifyTikvConfigResponse_default_instance_;
    new (ptr) ::debugpb::ModifyTikvConfigResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::ModifyTikvConfigResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ModifyTikvConfigResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsModifyTikvConfigResponse}, {}};

static void InitDefaultsProperty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_Property_default_instance_;
    new (ptr) ::debugpb::Property();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::Property::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Property =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProperty}, {}};

static void InitDefaultsGetRegionPropertiesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_GetRegionPropertiesRequest_default_instance_;
    new (ptr) ::debugpb::GetRegionPropertiesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::GetRegionPropertiesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetRegionPropertiesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetRegionPropertiesRequest}, {}};

static void InitDefaultsGetRegionPropertiesResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::debugpb::_GetRegionPropertiesResponse_default_instance_;
    new (ptr) ::debugpb::GetRegionPropertiesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::debugpb::GetRegionPropertiesResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetRegionPropertiesResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetRegionPropertiesResponse}, {
      &protobuf_debugpb_2eproto::scc_info_Property.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GetRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RaftLogRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RaftLogResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegionInfoRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegionInfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegionSizeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegionSizeResponse_Entry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegionSizeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScanMvccRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScanMvccResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompactRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompactResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InjectFailPointRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InjectFailPointResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecoverFailPointRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecoverFailPointResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFailPointsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFailPointsResponse_Entry.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListFailPointsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMetricsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetMetricsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegionConsistencyCheckRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegionConsistencyCheckResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModifyTikvConfigRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModifyTikvConfigResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Property.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetRegionPropertiesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetRegionPropertiesResponse.base);
}

::google::protobuf::Metadata file_level_metadata[29];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::GetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::GetRequest, db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::GetRequest, cf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::GetRequest, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::GetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::GetResponse, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RaftLogRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RaftLogRequest, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RaftLogRequest, log_index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RaftLogResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RaftLogResponse, entry_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RegionInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RegionInfoRequest, region_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RegionInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RegionInfoResponse, raft_local_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RegionInfoResponse, raft_apply_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RegionInfoResponse, region_local_state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RegionSizeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RegionSizeRequest, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RegionSizeRequest, cfs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RegionSizeResponse_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RegionSizeResponse_Entry, cf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RegionSizeResponse_Entry, size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RegionSizeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RegionSizeResponse, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::ScanMvccRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::ScanMvccRequest, from_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::ScanMvccRequest, to_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::ScanMvccRequest, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::ScanMvccResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::ScanMvccResponse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::ScanMvccResponse, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::CompactRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::CompactRequest, db_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::CompactRequest, cf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::CompactRequest, from_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::CompactRequest, to_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::CompactRequest, threads_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::CompactRequest, bottommost_level_compaction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::CompactResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::InjectFailPointRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::InjectFailPointRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::InjectFailPointRequest, actions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::InjectFailPointResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RecoverFailPointRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RecoverFailPointRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RecoverFailPointResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::ListFailPointsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::ListFailPointsResponse_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::ListFailPointsResponse_Entry, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::ListFailPointsResponse_Entry, actions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::ListFailPointsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::ListFailPointsResponse, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::GetMetricsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::GetMetricsRequest, all_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::GetMetricsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::GetMetricsResponse, prometheus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::GetMetricsResponse, rocksdb_kv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::GetMetricsResponse, rocksdb_raft_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::GetMetricsResponse, jemalloc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::GetMetricsResponse, store_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RegionConsistencyCheckRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RegionConsistencyCheckRequest, region_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::RegionConsistencyCheckResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::ModifyTikvConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::ModifyTikvConfigRequest, module_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::ModifyTikvConfigRequest, config_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::ModifyTikvConfigRequest, config_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::ModifyTikvConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::Property, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::Property, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::Property, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::GetRegionPropertiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::GetRegionPropertiesRequest, region_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::GetRegionPropertiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::debugpb::GetRegionPropertiesResponse, props_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::debugpb::GetRequest)},
  { 8, -1, sizeof(::debugpb::GetResponse)},
  { 14, -1, sizeof(::debugpb::RaftLogRequest)},
  { 21, -1, sizeof(::debugpb::RaftLogResponse)},
  { 27, -1, sizeof(::debugpb::RegionInfoRequest)},
  { 33, -1, sizeof(::debugpb::RegionInfoResponse)},
  { 41, -1, sizeof(::debugpb::RegionSizeRequest)},
  { 48, -1, sizeof(::debugpb::RegionSizeResponse_Entry)},
  { 55, -1, sizeof(::debugpb::RegionSizeResponse)},
  { 61, -1, sizeof(::debugpb::ScanMvccRequest)},
  { 69, -1, sizeof(::debugpb::ScanMvccResponse)},
  { 76, -1, sizeof(::debugpb::CompactRequest)},
  { 87, -1, sizeof(::debugpb::CompactResponse)},
  { 92, -1, sizeof(::debugpb::InjectFailPointRequest)},
  { 99, -1, sizeof(::debugpb::InjectFailPointResponse)},
  { 104, -1, sizeof(::debugpb::RecoverFailPointRequest)},
  { 110, -1, sizeof(::debugpb::RecoverFailPointResponse)},
  { 115, -1, sizeof(::debugpb::ListFailPointsRequest)},
  { 120, -1, sizeof(::debugpb::ListFailPointsResponse_Entry)},
  { 127, -1, sizeof(::debugpb::ListFailPointsResponse)},
  { 133, -1, sizeof(::debugpb::GetMetricsRequest)},
  { 139, -1, sizeof(::debugpb::GetMetricsResponse)},
  { 149, -1, sizeof(::debugpb::RegionConsistencyCheckRequest)},
  { 155, -1, sizeof(::debugpb::RegionConsistencyCheckResponse)},
  { 160, -1, sizeof(::debugpb::ModifyTikvConfigRequest)},
  { 168, -1, sizeof(::debugpb::ModifyTikvConfigResponse)},
  { 173, -1, sizeof(::debugpb::Property)},
  { 180, -1, sizeof(::debugpb::GetRegionPropertiesRequest)},
  { 186, -1, sizeof(::debugpb::GetRegionPropertiesResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_GetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_GetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_RaftLogRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_RaftLogResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_RegionInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_RegionInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_RegionSizeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_RegionSizeResponse_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_RegionSizeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_ScanMvccRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_ScanMvccResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_CompactRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_CompactResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_InjectFailPointRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_InjectFailPointResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_RecoverFailPointRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_RecoverFailPointResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_ListFailPointsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_ListFailPointsResponse_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_ListFailPointsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_GetMetricsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_GetMetricsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_RegionConsistencyCheckRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_RegionConsistencyCheckResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_ModifyTikvConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_ModifyTikvConfigResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_Property_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_GetRegionPropertiesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::debugpb::_GetRegionPropertiesResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "debugpb.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 29);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rdebugpb.proto\022\007debugpb\032\reraftpb.proto\032"
      "\rkvrpcpb.proto\032\023raft_serverpb.proto\032\024gog"
      "oproto/gogo.proto\">\n\nGetRequest\022\027\n\002db\030\001 "
      "\001(\0162\013.debugpb.DB\022\n\n\002cf\030\002 \001(\t\022\013\n\003key\030\003 \001("
      "\014\"\034\n\013GetResponse\022\r\n\005value\030\001 \001(\014\"6\n\016RaftL"
      "ogRequest\022\021\n\tregion_id\030\001 \001(\004\022\021\n\tlog_inde"
      "x\030\002 \001(\004\"0\n\017RaftLogResponse\022\035\n\005entry\030\001 \001("
      "\0132\016.eraftpb.Entry\"&\n\021RegionInfoRequest\022\021"
      "\n\tregion_id\030\001 \001(\004\"\303\001\n\022RegionInfoResponse"
      "\0227\n\020raft_local_state\030\001 \001(\0132\035.raft_server"
      "pb.RaftLocalState\0227\n\020raft_apply_state\030\002 "
      "\001(\0132\035.raft_serverpb.RaftApplyState\022;\n\022re"
      "gion_local_state\030\003 \001(\0132\037.raft_serverpb.R"
      "egionLocalState\"3\n\021RegionSizeRequest\022\021\n\t"
      "region_id\030\001 \001(\004\022\013\n\003cfs\030\002 \003(\t\"k\n\022RegionSi"
      "zeResponse\0222\n\007entries\030\001 \003(\0132!.debugpb.Re"
      "gionSizeResponse.Entry\032!\n\005Entry\022\n\n\002cf\030\001 "
      "\001(\t\022\014\n\004size\030\002 \001(\004\"B\n\017ScanMvccRequest\022\020\n\010"
      "from_key\030\001 \001(\014\022\016\n\006to_key\030\002 \001(\014\022\r\n\005limit\030"
      "\003 \001(\004\"@\n\020ScanMvccResponse\022\013\n\003key\030\001 \001(\014\022\037"
      "\n\004info\030\002 \001(\0132\021.kvrpcpb.MvccInfo\"\261\001\n\016Comp"
      "actRequest\022\027\n\002db\030\001 \001(\0162\013.debugpb.DB\022\n\n\002c"
      "f\030\002 \001(\t\022\020\n\010from_key\030\003 \001(\014\022\016\n\006to_key\030\004 \001("
      "\014\022\017\n\007threads\030\005 \001(\r\022G\n\033bottommost_level_c"
      "ompaction\030\006 \001(\0162\".debugpb.BottommostLeve"
      "lCompaction\"\021\n\017CompactResponse\"7\n\026Inject"
      "FailPointRequest\022\014\n\004name\030\001 \001(\t\022\017\n\007action"
      "s\030\002 \001(\t\"\031\n\027InjectFailPointResponse\"\'\n\027Re"
      "coverFailPointRequest\022\014\n\004name\030\001 \001(\t\"\032\n\030R"
      "ecoverFailPointResponse\"\027\n\025ListFailPoint"
      "sRequest\"x\n\026ListFailPointsResponse\0226\n\007en"
      "tries\030\001 \003(\0132%.debugpb.ListFailPointsResp"
      "onse.Entry\032&\n\005Entry\022\014\n\004name\030\001 \001(\t\022\017\n\007act"
      "ions\030\002 \001(\t\" \n\021GetMetricsRequest\022\013\n\003all\030\001"
      " \001(\010\"v\n\022GetMetricsResponse\022\022\n\nprometheus"
      "\030\001 \001(\t\022\022\n\nrocksdb_kv\030\002 \001(\t\022\024\n\014rocksdb_ra"
      "ft\030\003 \001(\t\022\020\n\010jemalloc\030\004 \001(\t\022\020\n\010store_id\030\005"
      " \001(\004\"2\n\035RegionConsistencyCheckRequest\022\021\n"
      "\tregion_id\030\001 \001(\004\" \n\036RegionConsistencyChe"
      "ckResponse\"e\n\027ModifyTikvConfigRequest\022\037\n"
      "\006module\030\001 \001(\0162\017.debugpb.MODULE\022\023\n\013config"
      "_name\030\002 \001(\t\022\024\n\014config_value\030\003 \001(\t\"\032\n\030Mod"
      "ifyTikvConfigResponse\"\'\n\010Property\022\014\n\004nam"
      "e\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\"/\n\032GetRegionPrope"
      "rtiesRequest\022\021\n\tregion_id\030\001 \001(\004\"\?\n\033GetRe"
      "gionPropertiesResponse\022 \n\005props\030\001 \003(\0132\021."
      "debugpb.Property*#\n\002DB\022\013\n\007INVALID\020\000\022\006\n\002K"
      "V\020\001\022\010\n\004RAFT\020\002*\220\001\n\006MODULE\022\n\n\006UNUSED\020\000\022\010\n\004"
      "KVDB\020\001\022\n\n\006RAFTDB\020\002\022\014\n\010READPOOL\020\003\022\n\n\006SERV"
      "ER\020\004\022\013\n\007STORAGE\020\005\022\006\n\002PD\020\006\022\n\n\006METRIC\020\007\022\017\n"
      "\013COPROCESSOR\020\010\022\014\n\010SECURITY\020\t\022\n\n\006IMPORT\020\n"
      "*L\n\031BottommostLevelCompaction\022\010\n\004Skip\020\000\022"
      "\t\n\005Force\020\001\022\032\n\026IfHaveCompactionFilter\020\0022\217"
      "\010\n\005Debug\0222\n\003Get\022\023.debugpb.GetRequest\032\024.d"
      "ebugpb.GetResponse\"\000\022>\n\007RaftLog\022\027.debugp"
      "b.RaftLogRequest\032\030.debugpb.RaftLogRespon"
      "se\"\000\022G\n\nRegionInfo\022\032.debugpb.RegionInfoR"
      "equest\032\033.debugpb.RegionInfoResponse\"\000\022G\n"
      "\nRegionSize\022\032.debugpb.RegionSizeRequest\032"
      "\033.debugpb.RegionSizeResponse\"\000\022C\n\010ScanMv"
      "cc\022\030.debugpb.ScanMvccRequest\032\031.debugpb.S"
      "canMvccResponse\"\0000\001\022>\n\007Compact\022\027.debugpb"
      ".CompactRequest\032\030.debugpb.CompactRespons"
      "e\"\000\022V\n\017InjectFailPoint\022\037.debugpb.InjectF"
      "ailPointRequest\032 .debugpb.InjectFailPoin"
      "tResponse\"\000\022Y\n\020RecoverFailPoint\022 .debugp"
      "b.RecoverFailPointRequest\032!.debugpb.Reco"
      "verFailPointResponse\"\000\022S\n\016ListFailPoints"
      "\022\036.debugpb.ListFailPointsRequest\032\037.debug"
      "pb.ListFailPointsResponse\"\000\022G\n\nGetMetric"
      "s\022\032.debugpb.GetMetricsRequest\032\033.debugpb."
      "GetMetricsResponse\"\000\022k\n\026CheckRegionConsi"
      "stency\022&.debugpb.RegionConsistencyCheckR"
      "equest\032\'.debugpb.RegionConsistencyCheckR"
      "esponse\"\000\022Y\n\020ModifyTikvConfig\022 .debugpb."
      "ModifyTikvConfigRequest\032!.debugpb.Modify"
      "TikvConfigResponse\"\000\022b\n\023GetRegionPropert"
      "ies\022#.debugpb.GetRegionPropertiesRequest"
      "\032$.debugpb.GetRegionPropertiesResponse\"\000"
      "B&\n\030com.pingcap.tikv.kvproto\340\342\036\001\310\342\036\001\320\342\036\001"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3208);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "debugpb.proto", &protobuf_RegisterTypes);
  ::protobuf_eraftpb_2eproto::AddDescriptors();
  ::protobuf_kvrpcpb_2eproto::AddDescriptors();
  ::protobuf_raft_5fserverpb_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_debugpb_2eproto
namespace debugpb {
const ::google::protobuf::EnumDescriptor* DB_descriptor() {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_debugpb_2eproto::file_level_enum_descriptors[0];
}
bool DB_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MODULE_descriptor() {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_debugpb_2eproto::file_level_enum_descriptors[1];
}
bool MODULE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BottommostLevelCompaction_descriptor() {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_debugpb_2eproto::file_level_enum_descriptors[2];
}
bool BottommostLevelCompaction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void GetRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRequest::kDbFieldNumber;
const int GetRequest::kCfFieldNumber;
const int GetRequest::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRequest::GetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_GetRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.GetRequest)
}
GetRequest::GetRequest(const GetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cf().size() > 0) {
    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  db_ = from.db_;
  // @@protoc_insertion_point(copy_constructor:debugpb.GetRequest)
}

void GetRequest::SharedCtor() {
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_ = 0;
}

GetRequest::~GetRequest() {
  // @@protoc_insertion_point(destructor:debugpb.GetRequest)
  SharedDtor();
}

void GetRequest::SharedDtor() {
  cf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetRequest::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRequest& GetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_GetRequest.base);
  return *internal_default_instance();
}


void GetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  db_ = 0;
  _internal_metadata_.Clear();
}

bool GetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.GetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .debugpb.DB db = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_db(static_cast< ::debugpb::DB >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cf = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cf()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cf().data(), static_cast<int>(this->cf().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.GetRequest.cf"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.GetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.GetRequest)
  return false;
#undef DO_
}

void GetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .debugpb.DB db = 1;
  if (this->db() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->db(), output);
  }

  // string cf = 2;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.GetRequest.cf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cf(), output);
  }

  // bytes key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.GetRequest)
}

::google::protobuf::uint8* GetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .debugpb.DB db = 1;
  if (this->db() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->db(), target);
  }

  // string cf = 2;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.GetRequest.cf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cf(), target);
  }

  // bytes key = 3;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.GetRequest)
  return target;
}

size_t GetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.GetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cf = 2;
  if (this->cf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cf());
  }

  // bytes key = 3;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // .debugpb.DB db = 1;
  if (this->db() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->db());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.GetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.GetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.GetRequest)
    MergeFrom(*source);
  }
}

void GetRequest::MergeFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.GetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cf().size() > 0) {

    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.db() != 0) {
    set_db(from.db());
  }
}

void GetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRequest::CopyFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRequest::IsInitialized() const {
  return true;
}

void GetRequest::Swap(GetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRequest::InternalSwap(GetRequest* other) {
  using std::swap;
  cf_.Swap(&other->cf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(db_, other->db_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetRequest::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetResponse::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetResponse::GetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_GetResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.GetResponse)
}
GetResponse::GetResponse(const GetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:debugpb.GetResponse)
}

void GetResponse::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetResponse::~GetResponse() {
  // @@protoc_insertion_point(destructor:debugpb.GetResponse)
  SharedDtor();
}

void GetResponse::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetResponse::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetResponse& GetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_GetResponse.base);
  return *internal_default_instance();
}


void GetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.GetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.GetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.GetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.GetResponse)
  return false;
#undef DO_
}

void GetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.GetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.GetResponse)
}

::google::protobuf::uint8* GetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.GetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.GetResponse)
  return target;
}

size_t GetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.GetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.GetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.GetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.GetResponse)
    MergeFrom(*source);
  }
}

void GetResponse::MergeFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.GetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void GetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResponse::CopyFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponse::IsInitialized() const {
  return true;
}

void GetResponse::Swap(GetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetResponse::InternalSwap(GetResponse* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetResponse::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RaftLogRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RaftLogRequest::kRegionIdFieldNumber;
const int RaftLogRequest::kLogIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RaftLogRequest::RaftLogRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_RaftLogRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RaftLogRequest)
}
RaftLogRequest::RaftLogRequest(const RaftLogRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&region_id_, &from.region_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&log_index_) -
    reinterpret_cast<char*>(&region_id_)) + sizeof(log_index_));
  // @@protoc_insertion_point(copy_constructor:debugpb.RaftLogRequest)
}

void RaftLogRequest::SharedCtor() {
  ::memset(&region_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&log_index_) -
      reinterpret_cast<char*>(&region_id_)) + sizeof(log_index_));
}

RaftLogRequest::~RaftLogRequest() {
  // @@protoc_insertion_point(destructor:debugpb.RaftLogRequest)
  SharedDtor();
}

void RaftLogRequest::SharedDtor() {
}

void RaftLogRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RaftLogRequest::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RaftLogRequest& RaftLogRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_RaftLogRequest.base);
  return *internal_default_instance();
}


void RaftLogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RaftLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&region_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&log_index_) -
      reinterpret_cast<char*>(&region_id_)) + sizeof(log_index_));
  _internal_metadata_.Clear();
}

bool RaftLogRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RaftLogRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 region_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 log_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &log_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RaftLogRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RaftLogRequest)
  return false;
#undef DO_
}

void RaftLogRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RaftLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 region_id = 1;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->region_id(), output);
  }

  // uint64 log_index = 2;
  if (this->log_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->log_index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.RaftLogRequest)
}

::google::protobuf::uint8* RaftLogRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RaftLogRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 region_id = 1;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->region_id(), target);
  }

  // uint64 log_index = 2;
  if (this->log_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->log_index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RaftLogRequest)
  return target;
}

size_t RaftLogRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RaftLogRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 region_id = 1;
  if (this->region_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->region_id());
  }

  // uint64 log_index = 2;
  if (this->log_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->log_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RaftLogRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RaftLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RaftLogRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RaftLogRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RaftLogRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RaftLogRequest)
    MergeFrom(*source);
  }
}

void RaftLogRequest::MergeFrom(const RaftLogRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RaftLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
  if (from.log_index() != 0) {
    set_log_index(from.log_index());
  }
}

void RaftLogRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RaftLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RaftLogRequest::CopyFrom(const RaftLogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RaftLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RaftLogRequest::IsInitialized() const {
  return true;
}

void RaftLogRequest::Swap(RaftLogRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RaftLogRequest::InternalSwap(RaftLogRequest* other) {
  using std::swap;
  swap(region_id_, other->region_id_);
  swap(log_index_, other->log_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RaftLogRequest::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RaftLogResponse::InitAsDefaultInstance() {
  ::debugpb::_RaftLogResponse_default_instance_._instance.get_mutable()->entry_ = const_cast< ::eraftpb::Entry*>(
      ::eraftpb::Entry::internal_default_instance());
}
void RaftLogResponse::clear_entry() {
  if (GetArenaNoVirtual() == NULL && entry_ != NULL) {
    delete entry_;
  }
  entry_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RaftLogResponse::kEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RaftLogResponse::RaftLogResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_RaftLogResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RaftLogResponse)
}
RaftLogResponse::RaftLogResponse(const RaftLogResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_entry()) {
    entry_ = new ::eraftpb::Entry(*from.entry_);
  } else {
    entry_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:debugpb.RaftLogResponse)
}

void RaftLogResponse::SharedCtor() {
  entry_ = NULL;
}

RaftLogResponse::~RaftLogResponse() {
  // @@protoc_insertion_point(destructor:debugpb.RaftLogResponse)
  SharedDtor();
}

void RaftLogResponse::SharedDtor() {
  if (this != internal_default_instance()) delete entry_;
}

void RaftLogResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RaftLogResponse::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RaftLogResponse& RaftLogResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_RaftLogResponse.base);
  return *internal_default_instance();
}


void RaftLogResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RaftLogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && entry_ != NULL) {
    delete entry_;
  }
  entry_ = NULL;
  _internal_metadata_.Clear();
}

bool RaftLogResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RaftLogResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .eraftpb.Entry entry = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RaftLogResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RaftLogResponse)
  return false;
#undef DO_
}

void RaftLogResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RaftLogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eraftpb.Entry entry = 1;
  if (this->has_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_entry(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.RaftLogResponse)
}

::google::protobuf::uint8* RaftLogResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RaftLogResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eraftpb.Entry entry = 1;
  if (this->has_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_entry(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RaftLogResponse)
  return target;
}

size_t RaftLogResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RaftLogResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .eraftpb.Entry entry = 1;
  if (this->has_entry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *entry_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RaftLogResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RaftLogResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RaftLogResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RaftLogResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RaftLogResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RaftLogResponse)
    MergeFrom(*source);
  }
}

void RaftLogResponse::MergeFrom(const RaftLogResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RaftLogResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_entry()) {
    mutable_entry()->::eraftpb::Entry::MergeFrom(from.entry());
  }
}

void RaftLogResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RaftLogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RaftLogResponse::CopyFrom(const RaftLogResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RaftLogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RaftLogResponse::IsInitialized() const {
  return true;
}

void RaftLogResponse::Swap(RaftLogResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RaftLogResponse::InternalSwap(RaftLogResponse* other) {
  using std::swap;
  swap(entry_, other->entry_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RaftLogResponse::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegionInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionInfoRequest::kRegionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionInfoRequest::RegionInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_RegionInfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RegionInfoRequest)
}
RegionInfoRequest::RegionInfoRequest(const RegionInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  region_id_ = from.region_id_;
  // @@protoc_insertion_point(copy_constructor:debugpb.RegionInfoRequest)
}

void RegionInfoRequest::SharedCtor() {
  region_id_ = GOOGLE_ULONGLONG(0);
}

RegionInfoRequest::~RegionInfoRequest() {
  // @@protoc_insertion_point(destructor:debugpb.RegionInfoRequest)
  SharedDtor();
}

void RegionInfoRequest::SharedDtor() {
}

void RegionInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegionInfoRequest::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionInfoRequest& RegionInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_RegionInfoRequest.base);
  return *internal_default_instance();
}


void RegionInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RegionInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  region_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool RegionInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RegionInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 region_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RegionInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RegionInfoRequest)
  return false;
#undef DO_
}

void RegionInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RegionInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 region_id = 1;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->region_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.RegionInfoRequest)
}

::google::protobuf::uint8* RegionInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RegionInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 region_id = 1;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->region_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RegionInfoRequest)
  return target;
}

size_t RegionInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RegionInfoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 region_id = 1;
  if (this->region_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->region_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegionInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RegionInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RegionInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RegionInfoRequest)
    MergeFrom(*source);
  }
}

void RegionInfoRequest::MergeFrom(const RegionInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RegionInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
}

void RegionInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RegionInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionInfoRequest::CopyFrom(const RegionInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RegionInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionInfoRequest::IsInitialized() const {
  return true;
}

void RegionInfoRequest::Swap(RegionInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionInfoRequest::InternalSwap(RegionInfoRequest* other) {
  using std::swap;
  swap(region_id_, other->region_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegionInfoRequest::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegionInfoResponse::InitAsDefaultInstance() {
  ::debugpb::_RegionInfoResponse_default_instance_._instance.get_mutable()->raft_local_state_ = const_cast< ::raft_serverpb::RaftLocalState*>(
      ::raft_serverpb::RaftLocalState::internal_default_instance());
  ::debugpb::_RegionInfoResponse_default_instance_._instance.get_mutable()->raft_apply_state_ = const_cast< ::raft_serverpb::RaftApplyState*>(
      ::raft_serverpb::RaftApplyState::internal_default_instance());
  ::debugpb::_RegionInfoResponse_default_instance_._instance.get_mutable()->region_local_state_ = const_cast< ::raft_serverpb::RegionLocalState*>(
      ::raft_serverpb::RegionLocalState::internal_default_instance());
}
void RegionInfoResponse::clear_raft_local_state() {
  if (GetArenaNoVirtual() == NULL && raft_local_state_ != NULL) {
    delete raft_local_state_;
  }
  raft_local_state_ = NULL;
}
void RegionInfoResponse::clear_raft_apply_state() {
  if (GetArenaNoVirtual() == NULL && raft_apply_state_ != NULL) {
    delete raft_apply_state_;
  }
  raft_apply_state_ = NULL;
}
void RegionInfoResponse::clear_region_local_state() {
  if (GetArenaNoVirtual() == NULL && region_local_state_ != NULL) {
    delete region_local_state_;
  }
  region_local_state_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionInfoResponse::kRaftLocalStateFieldNumber;
const int RegionInfoResponse::kRaftApplyStateFieldNumber;
const int RegionInfoResponse::kRegionLocalStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionInfoResponse::RegionInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_RegionInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RegionInfoResponse)
}
RegionInfoResponse::RegionInfoResponse(const RegionInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_raft_local_state()) {
    raft_local_state_ = new ::raft_serverpb::RaftLocalState(*from.raft_local_state_);
  } else {
    raft_local_state_ = NULL;
  }
  if (from.has_raft_apply_state()) {
    raft_apply_state_ = new ::raft_serverpb::RaftApplyState(*from.raft_apply_state_);
  } else {
    raft_apply_state_ = NULL;
  }
  if (from.has_region_local_state()) {
    region_local_state_ = new ::raft_serverpb::RegionLocalState(*from.region_local_state_);
  } else {
    region_local_state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:debugpb.RegionInfoResponse)
}

void RegionInfoResponse::SharedCtor() {
  ::memset(&raft_local_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&region_local_state_) -
      reinterpret_cast<char*>(&raft_local_state_)) + sizeof(region_local_state_));
}

RegionInfoResponse::~RegionInfoResponse() {
  // @@protoc_insertion_point(destructor:debugpb.RegionInfoResponse)
  SharedDtor();
}

void RegionInfoResponse::SharedDtor() {
  if (this != internal_default_instance()) delete raft_local_state_;
  if (this != internal_default_instance()) delete raft_apply_state_;
  if (this != internal_default_instance()) delete region_local_state_;
}

void RegionInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegionInfoResponse::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionInfoResponse& RegionInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_RegionInfoResponse.base);
  return *internal_default_instance();
}


void RegionInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RegionInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && raft_local_state_ != NULL) {
    delete raft_local_state_;
  }
  raft_local_state_ = NULL;
  if (GetArenaNoVirtual() == NULL && raft_apply_state_ != NULL) {
    delete raft_apply_state_;
  }
  raft_apply_state_ = NULL;
  if (GetArenaNoVirtual() == NULL && region_local_state_ != NULL) {
    delete region_local_state_;
  }
  region_local_state_ = NULL;
  _internal_metadata_.Clear();
}

bool RegionInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RegionInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .raft_serverpb.RaftLocalState raft_local_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_raft_local_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .raft_serverpb.RaftApplyState raft_apply_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_raft_apply_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .raft_serverpb.RegionLocalState region_local_state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_local_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RegionInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RegionInfoResponse)
  return false;
#undef DO_
}

void RegionInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RegionInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .raft_serverpb.RaftLocalState raft_local_state = 1;
  if (this->has_raft_local_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_raft_local_state(), output);
  }

  // .raft_serverpb.RaftApplyState raft_apply_state = 2;
  if (this->has_raft_apply_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_raft_apply_state(), output);
  }

  // .raft_serverpb.RegionLocalState region_local_state = 3;
  if (this->has_region_local_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_region_local_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.RegionInfoResponse)
}

::google::protobuf::uint8* RegionInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RegionInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .raft_serverpb.RaftLocalState raft_local_state = 1;
  if (this->has_raft_local_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_raft_local_state(), deterministic, target);
  }

  // .raft_serverpb.RaftApplyState raft_apply_state = 2;
  if (this->has_raft_apply_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_raft_apply_state(), deterministic, target);
  }

  // .raft_serverpb.RegionLocalState region_local_state = 3;
  if (this->has_region_local_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_region_local_state(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RegionInfoResponse)
  return target;
}

size_t RegionInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RegionInfoResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .raft_serverpb.RaftLocalState raft_local_state = 1;
  if (this->has_raft_local_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *raft_local_state_);
  }

  // .raft_serverpb.RaftApplyState raft_apply_state = 2;
  if (this->has_raft_apply_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *raft_apply_state_);
  }

  // .raft_serverpb.RegionLocalState region_local_state = 3;
  if (this->has_region_local_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_local_state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegionInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RegionInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RegionInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RegionInfoResponse)
    MergeFrom(*source);
  }
}

void RegionInfoResponse::MergeFrom(const RegionInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RegionInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_raft_local_state()) {
    mutable_raft_local_state()->::raft_serverpb::RaftLocalState::MergeFrom(from.raft_local_state());
  }
  if (from.has_raft_apply_state()) {
    mutable_raft_apply_state()->::raft_serverpb::RaftApplyState::MergeFrom(from.raft_apply_state());
  }
  if (from.has_region_local_state()) {
    mutable_region_local_state()->::raft_serverpb::RegionLocalState::MergeFrom(from.region_local_state());
  }
}

void RegionInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RegionInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionInfoResponse::CopyFrom(const RegionInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RegionInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionInfoResponse::IsInitialized() const {
  return true;
}

void RegionInfoResponse::Swap(RegionInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionInfoResponse::InternalSwap(RegionInfoResponse* other) {
  using std::swap;
  swap(raft_local_state_, other->raft_local_state_);
  swap(raft_apply_state_, other->raft_apply_state_);
  swap(region_local_state_, other->region_local_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegionInfoResponse::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegionSizeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionSizeRequest::kRegionIdFieldNumber;
const int RegionSizeRequest::kCfsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionSizeRequest::RegionSizeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_RegionSizeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RegionSizeRequest)
}
RegionSizeRequest::RegionSizeRequest(const RegionSizeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cfs_(from.cfs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  region_id_ = from.region_id_;
  // @@protoc_insertion_point(copy_constructor:debugpb.RegionSizeRequest)
}

void RegionSizeRequest::SharedCtor() {
  region_id_ = GOOGLE_ULONGLONG(0);
}

RegionSizeRequest::~RegionSizeRequest() {
  // @@protoc_insertion_point(destructor:debugpb.RegionSizeRequest)
  SharedDtor();
}

void RegionSizeRequest::SharedDtor() {
}

void RegionSizeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegionSizeRequest::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionSizeRequest& RegionSizeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_RegionSizeRequest.base);
  return *internal_default_instance();
}


void RegionSizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RegionSizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cfs_.Clear();
  region_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool RegionSizeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RegionSizeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 region_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string cfs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cfs()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cfs(this->cfs_size() - 1).data(),
            static_cast<int>(this->cfs(this->cfs_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.RegionSizeRequest.cfs"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RegionSizeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RegionSizeRequest)
  return false;
#undef DO_
}

void RegionSizeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RegionSizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 region_id = 1;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->region_id(), output);
  }

  // repeated string cfs = 2;
  for (int i = 0, n = this->cfs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cfs(i).data(), static_cast<int>(this->cfs(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.RegionSizeRequest.cfs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->cfs(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.RegionSizeRequest)
}

::google::protobuf::uint8* RegionSizeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RegionSizeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 region_id = 1;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->region_id(), target);
  }

  // repeated string cfs = 2;
  for (int i = 0, n = this->cfs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cfs(i).data(), static_cast<int>(this->cfs(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.RegionSizeRequest.cfs");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->cfs(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RegionSizeRequest)
  return target;
}

size_t RegionSizeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RegionSizeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string cfs = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cfs_size());
  for (int i = 0, n = this->cfs_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cfs(i));
  }

  // uint64 region_id = 1;
  if (this->region_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->region_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegionSizeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RegionSizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionSizeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionSizeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RegionSizeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RegionSizeRequest)
    MergeFrom(*source);
  }
}

void RegionSizeRequest::MergeFrom(const RegionSizeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RegionSizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cfs_.MergeFrom(from.cfs_);
  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
}

void RegionSizeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RegionSizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionSizeRequest::CopyFrom(const RegionSizeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RegionSizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionSizeRequest::IsInitialized() const {
  return true;
}

void RegionSizeRequest::Swap(RegionSizeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionSizeRequest::InternalSwap(RegionSizeRequest* other) {
  using std::swap;
  cfs_.InternalSwap(CastToBase(&other->cfs_));
  swap(region_id_, other->region_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegionSizeRequest::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegionSizeResponse_Entry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionSizeResponse_Entry::kCfFieldNumber;
const int RegionSizeResponse_Entry::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionSizeResponse_Entry::RegionSizeResponse_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_RegionSizeResponse_Entry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RegionSizeResponse.Entry)
}
RegionSizeResponse_Entry::RegionSizeResponse_Entry(const RegionSizeResponse_Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cf().size() > 0) {
    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:debugpb.RegionSizeResponse.Entry)
}

void RegionSizeResponse_Entry::SharedCtor() {
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = GOOGLE_ULONGLONG(0);
}

RegionSizeResponse_Entry::~RegionSizeResponse_Entry() {
  // @@protoc_insertion_point(destructor:debugpb.RegionSizeResponse.Entry)
  SharedDtor();
}

void RegionSizeResponse_Entry::SharedDtor() {
  cf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegionSizeResponse_Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegionSizeResponse_Entry::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionSizeResponse_Entry& RegionSizeResponse_Entry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_RegionSizeResponse_Entry.base);
  return *internal_default_instance();
}


void RegionSizeResponse_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RegionSizeResponse.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool RegionSizeResponse_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RegionSizeResponse.Entry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cf()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cf().data(), static_cast<int>(this->cf().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.RegionSizeResponse.Entry.cf"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RegionSizeResponse.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RegionSizeResponse.Entry)
  return false;
#undef DO_
}

void RegionSizeResponse_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RegionSizeResponse.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cf = 1;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.RegionSizeResponse.Entry.cf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cf(), output);
  }

  // uint64 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.RegionSizeResponse.Entry)
}

::google::protobuf::uint8* RegionSizeResponse_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RegionSizeResponse.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cf = 1;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.RegionSizeResponse.Entry.cf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cf(), target);
  }

  // uint64 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RegionSizeResponse.Entry)
  return target;
}

size_t RegionSizeResponse_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RegionSizeResponse.Entry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cf = 1;
  if (this->cf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cf());
  }

  // uint64 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegionSizeResponse_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RegionSizeResponse.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionSizeResponse_Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionSizeResponse_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RegionSizeResponse.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RegionSizeResponse.Entry)
    MergeFrom(*source);
  }
}

void RegionSizeResponse_Entry::MergeFrom(const RegionSizeResponse_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RegionSizeResponse.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cf().size() > 0) {

    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void RegionSizeResponse_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RegionSizeResponse.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionSizeResponse_Entry::CopyFrom(const RegionSizeResponse_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RegionSizeResponse.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionSizeResponse_Entry::IsInitialized() const {
  return true;
}

void RegionSizeResponse_Entry::Swap(RegionSizeResponse_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionSizeResponse_Entry::InternalSwap(RegionSizeResponse_Entry* other) {
  using std::swap;
  cf_.Swap(&other->cf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegionSizeResponse_Entry::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegionSizeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionSizeResponse::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionSizeResponse::RegionSizeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_RegionSizeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RegionSizeResponse)
}
RegionSizeResponse::RegionSizeResponse(const RegionSizeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:debugpb.RegionSizeResponse)
}

void RegionSizeResponse::SharedCtor() {
}

RegionSizeResponse::~RegionSizeResponse() {
  // @@protoc_insertion_point(destructor:debugpb.RegionSizeResponse)
  SharedDtor();
}

void RegionSizeResponse::SharedDtor() {
}

void RegionSizeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegionSizeResponse::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionSizeResponse& RegionSizeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_RegionSizeResponse.base);
  return *internal_default_instance();
}


void RegionSizeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RegionSizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _internal_metadata_.Clear();
}

bool RegionSizeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RegionSizeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .debugpb.RegionSizeResponse.Entry entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RegionSizeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RegionSizeResponse)
  return false;
#undef DO_
}

void RegionSizeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RegionSizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .debugpb.RegionSizeResponse.Entry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->entries(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.RegionSizeResponse)
}

::google::protobuf::uint8* RegionSizeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RegionSizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .debugpb.RegionSizeResponse.Entry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RegionSizeResponse)
  return target;
}

size_t RegionSizeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RegionSizeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .debugpb.RegionSizeResponse.Entry entries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegionSizeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RegionSizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionSizeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionSizeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RegionSizeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RegionSizeResponse)
    MergeFrom(*source);
  }
}

void RegionSizeResponse::MergeFrom(const RegionSizeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RegionSizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void RegionSizeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RegionSizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionSizeResponse::CopyFrom(const RegionSizeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RegionSizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionSizeResponse::IsInitialized() const {
  return true;
}

void RegionSizeResponse::Swap(RegionSizeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionSizeResponse::InternalSwap(RegionSizeResponse* other) {
  using std::swap;
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegionSizeResponse::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScanMvccRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScanMvccRequest::kFromKeyFieldNumber;
const int ScanMvccRequest::kToKeyFieldNumber;
const int ScanMvccRequest::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScanMvccRequest::ScanMvccRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_ScanMvccRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.ScanMvccRequest)
}
ScanMvccRequest::ScanMvccRequest(const ScanMvccRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_key().size() > 0) {
    from_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_key_);
  }
  to_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_key().size() > 0) {
    to_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_key_);
  }
  limit_ = from.limit_;
  // @@protoc_insertion_point(copy_constructor:debugpb.ScanMvccRequest)
}

void ScanMvccRequest::SharedCtor() {
  from_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  limit_ = GOOGLE_ULONGLONG(0);
}

ScanMvccRequest::~ScanMvccRequest() {
  // @@protoc_insertion_point(destructor:debugpb.ScanMvccRequest)
  SharedDtor();
}

void ScanMvccRequest::SharedDtor() {
  from_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ScanMvccRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScanMvccRequest::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScanMvccRequest& ScanMvccRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_ScanMvccRequest.base);
  return *internal_default_instance();
}


void ScanMvccRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.ScanMvccRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  limit_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ScanMvccRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.ScanMvccRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes from_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_from_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes to_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_to_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.ScanMvccRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.ScanMvccRequest)
  return false;
#undef DO_
}

void ScanMvccRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.ScanMvccRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes from_key = 1;
  if (this->from_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->from_key(), output);
  }

  // bytes to_key = 2;
  if (this->to_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->to_key(), output);
  }

  // uint64 limit = 3;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->limit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.ScanMvccRequest)
}

::google::protobuf::uint8* ScanMvccRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.ScanMvccRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes from_key = 1;
  if (this->from_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->from_key(), target);
  }

  // bytes to_key = 2;
  if (this->to_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->to_key(), target);
  }

  // uint64 limit = 3;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->limit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.ScanMvccRequest)
  return target;
}

size_t ScanMvccRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.ScanMvccRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes from_key = 1;
  if (this->from_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->from_key());
  }

  // bytes to_key = 2;
  if (this->to_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->to_key());
  }

  // uint64 limit = 3;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScanMvccRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.ScanMvccRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ScanMvccRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScanMvccRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.ScanMvccRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.ScanMvccRequest)
    MergeFrom(*source);
  }
}

void ScanMvccRequest::MergeFrom(const ScanMvccRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.ScanMvccRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_key().size() > 0) {

    from_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_key_);
  }
  if (from.to_key().size() > 0) {

    to_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_key_);
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
}

void ScanMvccRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.ScanMvccRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanMvccRequest::CopyFrom(const ScanMvccRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.ScanMvccRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanMvccRequest::IsInitialized() const {
  return true;
}

void ScanMvccRequest::Swap(ScanMvccRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScanMvccRequest::InternalSwap(ScanMvccRequest* other) {
  using std::swap;
  from_key_.Swap(&other->from_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_key_.Swap(&other->to_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(limit_, other->limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScanMvccRequest::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScanMvccResponse::InitAsDefaultInstance() {
  ::debugpb::_ScanMvccResponse_default_instance_._instance.get_mutable()->info_ = const_cast< ::kvrpcpb::MvccInfo*>(
      ::kvrpcpb::MvccInfo::internal_default_instance());
}
void ScanMvccResponse::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScanMvccResponse::kKeyFieldNumber;
const int ScanMvccResponse::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScanMvccResponse::ScanMvccResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_ScanMvccResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.ScanMvccResponse)
}
ScanMvccResponse::ScanMvccResponse(const ScanMvccResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_info()) {
    info_ = new ::kvrpcpb::MvccInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:debugpb.ScanMvccResponse)
}

void ScanMvccResponse::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_ = NULL;
}

ScanMvccResponse::~ScanMvccResponse() {
  // @@protoc_insertion_point(destructor:debugpb.ScanMvccResponse)
  SharedDtor();
}

void ScanMvccResponse::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete info_;
}

void ScanMvccResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScanMvccResponse::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScanMvccResponse& ScanMvccResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_ScanMvccResponse.base);
  return *internal_default_instance();
}


void ScanMvccResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.ScanMvccResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  _internal_metadata_.Clear();
}

bool ScanMvccResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.ScanMvccResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvrpcpb.MvccInfo info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.ScanMvccResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.ScanMvccResponse)
  return false;
#undef DO_
}

void ScanMvccResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.ScanMvccResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key(), output);
  }

  // .kvrpcpb.MvccInfo info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.ScanMvccResponse)
}

::google::protobuf::uint8* ScanMvccResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.ScanMvccResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes key = 1;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key(), target);
  }

  // .kvrpcpb.MvccInfo info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.ScanMvccResponse)
  return target;
}

size_t ScanMvccResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.ScanMvccResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // .kvrpcpb.MvccInfo info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScanMvccResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.ScanMvccResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ScanMvccResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScanMvccResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.ScanMvccResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.ScanMvccResponse)
    MergeFrom(*source);
  }
}

void ScanMvccResponse::MergeFrom(const ScanMvccResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.ScanMvccResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_info()) {
    mutable_info()->::kvrpcpb::MvccInfo::MergeFrom(from.info());
  }
}

void ScanMvccResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.ScanMvccResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanMvccResponse::CopyFrom(const ScanMvccResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.ScanMvccResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanMvccResponse::IsInitialized() const {
  return true;
}

void ScanMvccResponse::Swap(ScanMvccResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScanMvccResponse::InternalSwap(ScanMvccResponse* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScanMvccResponse::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompactRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompactRequest::kDbFieldNumber;
const int CompactRequest::kCfFieldNumber;
const int CompactRequest::kFromKeyFieldNumber;
const int CompactRequest::kToKeyFieldNumber;
const int CompactRequest::kThreadsFieldNumber;
const int CompactRequest::kBottommostLevelCompactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompactRequest::CompactRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_CompactRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.CompactRequest)
}
CompactRequest::CompactRequest(const CompactRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cf().size() > 0) {
    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  from_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_key().size() > 0) {
    from_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_key_);
  }
  to_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to_key().size() > 0) {
    to_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_key_);
  }
  ::memcpy(&db_, &from.db_,
    static_cast<size_t>(reinterpret_cast<char*>(&bottommost_level_compaction_) -
    reinterpret_cast<char*>(&db_)) + sizeof(bottommost_level_compaction_));
  // @@protoc_insertion_point(copy_constructor:debugpb.CompactRequest)
}

void CompactRequest::SharedCtor() {
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&db_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bottommost_level_compaction_) -
      reinterpret_cast<char*>(&db_)) + sizeof(bottommost_level_compaction_));
}

CompactRequest::~CompactRequest() {
  // @@protoc_insertion_point(destructor:debugpb.CompactRequest)
  SharedDtor();
}

void CompactRequest::SharedDtor() {
  cf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CompactRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CompactRequest::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompactRequest& CompactRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_CompactRequest.base);
  return *internal_default_instance();
}


void CompactRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.CompactRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&db_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bottommost_level_compaction_) -
      reinterpret_cast<char*>(&db_)) + sizeof(bottommost_level_compaction_));
  _internal_metadata_.Clear();
}

bool CompactRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.CompactRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .debugpb.DB db = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_db(static_cast< ::debugpb::DB >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cf = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cf()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cf().data(), static_cast<int>(this->cf().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.CompactRequest.cf"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes from_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_from_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes to_key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_to_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 threads = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &threads_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .debugpb.BottommostLevelCompaction bottommost_level_compaction = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bottommost_level_compaction(static_cast< ::debugpb::BottommostLevelCompaction >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.CompactRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.CompactRequest)
  return false;
#undef DO_
}

void CompactRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.CompactRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .debugpb.DB db = 1;
  if (this->db() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->db(), output);
  }

  // string cf = 2;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.CompactRequest.cf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cf(), output);
  }

  // bytes from_key = 3;
  if (this->from_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->from_key(), output);
  }

  // bytes to_key = 4;
  if (this->to_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->to_key(), output);
  }

  // uint32 threads = 5;
  if (this->threads() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->threads(), output);
  }

  // .debugpb.BottommostLevelCompaction bottommost_level_compaction = 6;
  if (this->bottommost_level_compaction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->bottommost_level_compaction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.CompactRequest)
}

::google::protobuf::uint8* CompactRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.CompactRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .debugpb.DB db = 1;
  if (this->db() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->db(), target);
  }

  // string cf = 2;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.CompactRequest.cf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cf(), target);
  }

  // bytes from_key = 3;
  if (this->from_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->from_key(), target);
  }

  // bytes to_key = 4;
  if (this->to_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->to_key(), target);
  }

  // uint32 threads = 5;
  if (this->threads() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->threads(), target);
  }

  // .debugpb.BottommostLevelCompaction bottommost_level_compaction = 6;
  if (this->bottommost_level_compaction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->bottommost_level_compaction(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.CompactRequest)
  return target;
}

size_t CompactRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.CompactRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cf = 2;
  if (this->cf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cf());
  }

  // bytes from_key = 3;
  if (this->from_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->from_key());
  }

  // bytes to_key = 4;
  if (this->to_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->to_key());
  }

  // .debugpb.DB db = 1;
  if (this->db() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->db());
  }

  // uint32 threads = 5;
  if (this->threads() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->threads());
  }

  // .debugpb.BottommostLevelCompaction bottommost_level_compaction = 6;
  if (this->bottommost_level_compaction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bottommost_level_compaction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompactRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.CompactRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CompactRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompactRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.CompactRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.CompactRequest)
    MergeFrom(*source);
  }
}

void CompactRequest::MergeFrom(const CompactRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.CompactRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cf().size() > 0) {

    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.from_key().size() > 0) {

    from_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_key_);
  }
  if (from.to_key().size() > 0) {

    to_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_key_);
  }
  if (from.db() != 0) {
    set_db(from.db());
  }
  if (from.threads() != 0) {
    set_threads(from.threads());
  }
  if (from.bottommost_level_compaction() != 0) {
    set_bottommost_level_compaction(from.bottommost_level_compaction());
  }
}

void CompactRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.CompactRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompactRequest::CopyFrom(const CompactRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.CompactRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompactRequest::IsInitialized() const {
  return true;
}

void CompactRequest::Swap(CompactRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompactRequest::InternalSwap(CompactRequest* other) {
  using std::swap;
  cf_.Swap(&other->cf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  from_key_.Swap(&other->from_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_key_.Swap(&other->to_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(db_, other->db_);
  swap(threads_, other->threads_);
  swap(bottommost_level_compaction_, other->bottommost_level_compaction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CompactRequest::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompactResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompactResponse::CompactResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_CompactResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.CompactResponse)
}
CompactResponse::CompactResponse(const CompactResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:debugpb.CompactResponse)
}

void CompactResponse::SharedCtor() {
}

CompactResponse::~CompactResponse() {
  // @@protoc_insertion_point(destructor:debugpb.CompactResponse)
  SharedDtor();
}

void CompactResponse::SharedDtor() {
}

void CompactResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CompactResponse::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompactResponse& CompactResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_CompactResponse.base);
  return *internal_default_instance();
}


void CompactResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.CompactResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CompactResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.CompactResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.CompactResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.CompactResponse)
  return false;
#undef DO_
}

void CompactResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.CompactResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.CompactResponse)
}

::google::protobuf::uint8* CompactResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.CompactResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.CompactResponse)
  return target;
}

size_t CompactResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.CompactResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompactResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.CompactResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CompactResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompactResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.CompactResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.CompactResponse)
    MergeFrom(*source);
  }
}

void CompactResponse::MergeFrom(const CompactResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.CompactResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CompactResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.CompactResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompactResponse::CopyFrom(const CompactResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.CompactResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompactResponse::IsInitialized() const {
  return true;
}

void CompactResponse::Swap(CompactResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompactResponse::InternalSwap(CompactResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CompactResponse::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InjectFailPointRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InjectFailPointRequest::kNameFieldNumber;
const int InjectFailPointRequest::kActionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InjectFailPointRequest::InjectFailPointRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_InjectFailPointRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.InjectFailPointRequest)
}
InjectFailPointRequest::InjectFailPointRequest(const InjectFailPointRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  actions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.actions().size() > 0) {
    actions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actions_);
  }
  // @@protoc_insertion_point(copy_constructor:debugpb.InjectFailPointRequest)
}

void InjectFailPointRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InjectFailPointRequest::~InjectFailPointRequest() {
  // @@protoc_insertion_point(destructor:debugpb.InjectFailPointRequest)
  SharedDtor();
}

void InjectFailPointRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actions_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InjectFailPointRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InjectFailPointRequest::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InjectFailPointRequest& InjectFailPointRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_InjectFailPointRequest.base);
  return *internal_default_instance();
}


void InjectFailPointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.InjectFailPointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actions_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool InjectFailPointRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.InjectFailPointRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.InjectFailPointRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string actions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->actions().data(), static_cast<int>(this->actions().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.InjectFailPointRequest.actions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.InjectFailPointRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.InjectFailPointRequest)
  return false;
#undef DO_
}

void InjectFailPointRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.InjectFailPointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.InjectFailPointRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string actions = 2;
  if (this->actions().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actions().data(), static_cast<int>(this->actions().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.InjectFailPointRequest.actions");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->actions(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.InjectFailPointRequest)
}

::google::protobuf::uint8* InjectFailPointRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.InjectFailPointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.InjectFailPointRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string actions = 2;
  if (this->actions().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actions().data(), static_cast<int>(this->actions().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.InjectFailPointRequest.actions");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->actions(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.InjectFailPointRequest)
  return target;
}

size_t InjectFailPointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.InjectFailPointRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string actions = 2;
  if (this->actions().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->actions());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InjectFailPointRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.InjectFailPointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InjectFailPointRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InjectFailPointRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.InjectFailPointRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.InjectFailPointRequest)
    MergeFrom(*source);
  }
}

void InjectFailPointRequest::MergeFrom(const InjectFailPointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.InjectFailPointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.actions().size() > 0) {

    actions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actions_);
  }
}

void InjectFailPointRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.InjectFailPointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InjectFailPointRequest::CopyFrom(const InjectFailPointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.InjectFailPointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InjectFailPointRequest::IsInitialized() const {
  return true;
}

void InjectFailPointRequest::Swap(InjectFailPointRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InjectFailPointRequest::InternalSwap(InjectFailPointRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  actions_.Swap(&other->actions_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InjectFailPointRequest::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InjectFailPointResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InjectFailPointResponse::InjectFailPointResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_InjectFailPointResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.InjectFailPointResponse)
}
InjectFailPointResponse::InjectFailPointResponse(const InjectFailPointResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:debugpb.InjectFailPointResponse)
}

void InjectFailPointResponse::SharedCtor() {
}

InjectFailPointResponse::~InjectFailPointResponse() {
  // @@protoc_insertion_point(destructor:debugpb.InjectFailPointResponse)
  SharedDtor();
}

void InjectFailPointResponse::SharedDtor() {
}

void InjectFailPointResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InjectFailPointResponse::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InjectFailPointResponse& InjectFailPointResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_InjectFailPointResponse.base);
  return *internal_default_instance();
}


void InjectFailPointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.InjectFailPointResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool InjectFailPointResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.InjectFailPointResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.InjectFailPointResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.InjectFailPointResponse)
  return false;
#undef DO_
}

void InjectFailPointResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.InjectFailPointResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.InjectFailPointResponse)
}

::google::protobuf::uint8* InjectFailPointResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.InjectFailPointResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.InjectFailPointResponse)
  return target;
}

size_t InjectFailPointResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.InjectFailPointResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InjectFailPointResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.InjectFailPointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InjectFailPointResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InjectFailPointResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.InjectFailPointResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.InjectFailPointResponse)
    MergeFrom(*source);
  }
}

void InjectFailPointResponse::MergeFrom(const InjectFailPointResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.InjectFailPointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void InjectFailPointResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.InjectFailPointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InjectFailPointResponse::CopyFrom(const InjectFailPointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.InjectFailPointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InjectFailPointResponse::IsInitialized() const {
  return true;
}

void InjectFailPointResponse::Swap(InjectFailPointResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InjectFailPointResponse::InternalSwap(InjectFailPointResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InjectFailPointResponse::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecoverFailPointRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecoverFailPointRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecoverFailPointRequest::RecoverFailPointRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_RecoverFailPointRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RecoverFailPointRequest)
}
RecoverFailPointRequest::RecoverFailPointRequest(const RecoverFailPointRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:debugpb.RecoverFailPointRequest)
}

void RecoverFailPointRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RecoverFailPointRequest::~RecoverFailPointRequest() {
  // @@protoc_insertion_point(destructor:debugpb.RecoverFailPointRequest)
  SharedDtor();
}

void RecoverFailPointRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RecoverFailPointRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RecoverFailPointRequest::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecoverFailPointRequest& RecoverFailPointRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_RecoverFailPointRequest.base);
  return *internal_default_instance();
}


void RecoverFailPointRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RecoverFailPointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RecoverFailPointRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RecoverFailPointRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.RecoverFailPointRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RecoverFailPointRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RecoverFailPointRequest)
  return false;
#undef DO_
}

void RecoverFailPointRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RecoverFailPointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.RecoverFailPointRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.RecoverFailPointRequest)
}

::google::protobuf::uint8* RecoverFailPointRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RecoverFailPointRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.RecoverFailPointRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RecoverFailPointRequest)
  return target;
}

size_t RecoverFailPointRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RecoverFailPointRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecoverFailPointRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RecoverFailPointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RecoverFailPointRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecoverFailPointRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RecoverFailPointRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RecoverFailPointRequest)
    MergeFrom(*source);
  }
}

void RecoverFailPointRequest::MergeFrom(const RecoverFailPointRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RecoverFailPointRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void RecoverFailPointRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RecoverFailPointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecoverFailPointRequest::CopyFrom(const RecoverFailPointRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RecoverFailPointRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecoverFailPointRequest::IsInitialized() const {
  return true;
}

void RecoverFailPointRequest::Swap(RecoverFailPointRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecoverFailPointRequest::InternalSwap(RecoverFailPointRequest* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RecoverFailPointRequest::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecoverFailPointResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecoverFailPointResponse::RecoverFailPointResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_RecoverFailPointResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RecoverFailPointResponse)
}
RecoverFailPointResponse::RecoverFailPointResponse(const RecoverFailPointResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:debugpb.RecoverFailPointResponse)
}

void RecoverFailPointResponse::SharedCtor() {
}

RecoverFailPointResponse::~RecoverFailPointResponse() {
  // @@protoc_insertion_point(destructor:debugpb.RecoverFailPointResponse)
  SharedDtor();
}

void RecoverFailPointResponse::SharedDtor() {
}

void RecoverFailPointResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RecoverFailPointResponse::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecoverFailPointResponse& RecoverFailPointResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_RecoverFailPointResponse.base);
  return *internal_default_instance();
}


void RecoverFailPointResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RecoverFailPointResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RecoverFailPointResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RecoverFailPointResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RecoverFailPointResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RecoverFailPointResponse)
  return false;
#undef DO_
}

void RecoverFailPointResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RecoverFailPointResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.RecoverFailPointResponse)
}

::google::protobuf::uint8* RecoverFailPointResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RecoverFailPointResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RecoverFailPointResponse)
  return target;
}

size_t RecoverFailPointResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RecoverFailPointResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecoverFailPointResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RecoverFailPointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RecoverFailPointResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecoverFailPointResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RecoverFailPointResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RecoverFailPointResponse)
    MergeFrom(*source);
  }
}

void RecoverFailPointResponse::MergeFrom(const RecoverFailPointResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RecoverFailPointResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RecoverFailPointResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RecoverFailPointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecoverFailPointResponse::CopyFrom(const RecoverFailPointResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RecoverFailPointResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecoverFailPointResponse::IsInitialized() const {
  return true;
}

void RecoverFailPointResponse::Swap(RecoverFailPointResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecoverFailPointResponse::InternalSwap(RecoverFailPointResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RecoverFailPointResponse::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFailPointsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFailPointsRequest::ListFailPointsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_ListFailPointsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.ListFailPointsRequest)
}
ListFailPointsRequest::ListFailPointsRequest(const ListFailPointsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:debugpb.ListFailPointsRequest)
}

void ListFailPointsRequest::SharedCtor() {
}

ListFailPointsRequest::~ListFailPointsRequest() {
  // @@protoc_insertion_point(destructor:debugpb.ListFailPointsRequest)
  SharedDtor();
}

void ListFailPointsRequest::SharedDtor() {
}

void ListFailPointsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFailPointsRequest::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFailPointsRequest& ListFailPointsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_ListFailPointsRequest.base);
  return *internal_default_instance();
}


void ListFailPointsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.ListFailPointsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ListFailPointsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.ListFailPointsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.ListFailPointsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.ListFailPointsRequest)
  return false;
#undef DO_
}

void ListFailPointsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.ListFailPointsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.ListFailPointsRequest)
}

::google::protobuf::uint8* ListFailPointsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.ListFailPointsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.ListFailPointsRequest)
  return target;
}

size_t ListFailPointsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.ListFailPointsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFailPointsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.ListFailPointsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFailPointsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFailPointsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.ListFailPointsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.ListFailPointsRequest)
    MergeFrom(*source);
  }
}

void ListFailPointsRequest::MergeFrom(const ListFailPointsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.ListFailPointsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ListFailPointsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.ListFailPointsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFailPointsRequest::CopyFrom(const ListFailPointsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.ListFailPointsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFailPointsRequest::IsInitialized() const {
  return true;
}

void ListFailPointsRequest::Swap(ListFailPointsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFailPointsRequest::InternalSwap(ListFailPointsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFailPointsRequest::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFailPointsResponse_Entry::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFailPointsResponse_Entry::kNameFieldNumber;
const int ListFailPointsResponse_Entry::kActionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFailPointsResponse_Entry::ListFailPointsResponse_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_ListFailPointsResponse_Entry.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.ListFailPointsResponse.Entry)
}
ListFailPointsResponse_Entry::ListFailPointsResponse_Entry(const ListFailPointsResponse_Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  actions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.actions().size() > 0) {
    actions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actions_);
  }
  // @@protoc_insertion_point(copy_constructor:debugpb.ListFailPointsResponse.Entry)
}

void ListFailPointsResponse_Entry::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListFailPointsResponse_Entry::~ListFailPointsResponse_Entry() {
  // @@protoc_insertion_point(destructor:debugpb.ListFailPointsResponse.Entry)
  SharedDtor();
}

void ListFailPointsResponse_Entry::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actions_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListFailPointsResponse_Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFailPointsResponse_Entry::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFailPointsResponse_Entry& ListFailPointsResponse_Entry::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_ListFailPointsResponse_Entry.base);
  return *internal_default_instance();
}


void ListFailPointsResponse_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.ListFailPointsResponse.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actions_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListFailPointsResponse_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.ListFailPointsResponse.Entry)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.ListFailPointsResponse.Entry.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string actions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->actions().data(), static_cast<int>(this->actions().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.ListFailPointsResponse.Entry.actions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.ListFailPointsResponse.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.ListFailPointsResponse.Entry)
  return false;
#undef DO_
}

void ListFailPointsResponse_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.ListFailPointsResponse.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.ListFailPointsResponse.Entry.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string actions = 2;
  if (this->actions().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actions().data(), static_cast<int>(this->actions().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.ListFailPointsResponse.Entry.actions");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->actions(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.ListFailPointsResponse.Entry)
}

::google::protobuf::uint8* ListFailPointsResponse_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.ListFailPointsResponse.Entry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.ListFailPointsResponse.Entry.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string actions = 2;
  if (this->actions().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->actions().data(), static_cast<int>(this->actions().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.ListFailPointsResponse.Entry.actions");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->actions(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.ListFailPointsResponse.Entry)
  return target;
}

size_t ListFailPointsResponse_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.ListFailPointsResponse.Entry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string actions = 2;
  if (this->actions().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->actions());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFailPointsResponse_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.ListFailPointsResponse.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFailPointsResponse_Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFailPointsResponse_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.ListFailPointsResponse.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.ListFailPointsResponse.Entry)
    MergeFrom(*source);
  }
}

void ListFailPointsResponse_Entry::MergeFrom(const ListFailPointsResponse_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.ListFailPointsResponse.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.actions().size() > 0) {

    actions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actions_);
  }
}

void ListFailPointsResponse_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.ListFailPointsResponse.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFailPointsResponse_Entry::CopyFrom(const ListFailPointsResponse_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.ListFailPointsResponse.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFailPointsResponse_Entry::IsInitialized() const {
  return true;
}

void ListFailPointsResponse_Entry::Swap(ListFailPointsResponse_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFailPointsResponse_Entry::InternalSwap(ListFailPointsResponse_Entry* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  actions_.Swap(&other->actions_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFailPointsResponse_Entry::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListFailPointsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListFailPointsResponse::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListFailPointsResponse::ListFailPointsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_ListFailPointsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.ListFailPointsResponse)
}
ListFailPointsResponse::ListFailPointsResponse(const ListFailPointsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:debugpb.ListFailPointsResponse)
}

void ListFailPointsResponse::SharedCtor() {
}

ListFailPointsResponse::~ListFailPointsResponse() {
  // @@protoc_insertion_point(destructor:debugpb.ListFailPointsResponse)
  SharedDtor();
}

void ListFailPointsResponse::SharedDtor() {
}

void ListFailPointsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListFailPointsResponse::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListFailPointsResponse& ListFailPointsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_ListFailPointsResponse.base);
  return *internal_default_instance();
}


void ListFailPointsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.ListFailPointsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _internal_metadata_.Clear();
}

bool ListFailPointsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.ListFailPointsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .debugpb.ListFailPointsResponse.Entry entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.ListFailPointsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.ListFailPointsResponse)
  return false;
#undef DO_
}

void ListFailPointsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.ListFailPointsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .debugpb.ListFailPointsResponse.Entry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->entries(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.ListFailPointsResponse)
}

::google::protobuf::uint8* ListFailPointsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.ListFailPointsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .debugpb.ListFailPointsResponse.Entry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.ListFailPointsResponse)
  return target;
}

size_t ListFailPointsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.ListFailPointsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .debugpb.ListFailPointsResponse.Entry entries = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListFailPointsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.ListFailPointsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListFailPointsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListFailPointsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.ListFailPointsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.ListFailPointsResponse)
    MergeFrom(*source);
  }
}

void ListFailPointsResponse::MergeFrom(const ListFailPointsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.ListFailPointsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void ListFailPointsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.ListFailPointsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListFailPointsResponse::CopyFrom(const ListFailPointsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.ListFailPointsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListFailPointsResponse::IsInitialized() const {
  return true;
}

void ListFailPointsResponse::Swap(ListFailPointsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListFailPointsResponse::InternalSwap(ListFailPointsResponse* other) {
  using std::swap;
  CastToBase(&entries_)->InternalSwap(CastToBase(&other->entries_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListFailPointsResponse::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMetricsRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMetricsRequest::kAllFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMetricsRequest::GetMetricsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_GetMetricsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.GetMetricsRequest)
}
GetMetricsRequest::GetMetricsRequest(const GetMetricsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  all_ = from.all_;
  // @@protoc_insertion_point(copy_constructor:debugpb.GetMetricsRequest)
}

void GetMetricsRequest::SharedCtor() {
  all_ = false;
}

GetMetricsRequest::~GetMetricsRequest() {
  // @@protoc_insertion_point(destructor:debugpb.GetMetricsRequest)
  SharedDtor();
}

void GetMetricsRequest::SharedDtor() {
}

void GetMetricsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetMetricsRequest::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMetricsRequest& GetMetricsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_GetMetricsRequest.base);
  return *internal_default_instance();
}


void GetMetricsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.GetMetricsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  all_ = false;
  _internal_metadata_.Clear();
}

bool GetMetricsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.GetMetricsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool all = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &all_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.GetMetricsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.GetMetricsRequest)
  return false;
#undef DO_
}

void GetMetricsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.GetMetricsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool all = 1;
  if (this->all() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->all(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.GetMetricsRequest)
}

::google::protobuf::uint8* GetMetricsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.GetMetricsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool all = 1;
  if (this->all() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->all(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.GetMetricsRequest)
  return target;
}

size_t GetMetricsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.GetMetricsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool all = 1;
  if (this->all() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMetricsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.GetMetricsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMetricsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMetricsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.GetMetricsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.GetMetricsRequest)
    MergeFrom(*source);
  }
}

void GetMetricsRequest::MergeFrom(const GetMetricsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.GetMetricsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.all() != 0) {
    set_all(from.all());
  }
}

void GetMetricsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.GetMetricsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMetricsRequest::CopyFrom(const GetMetricsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.GetMetricsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMetricsRequest::IsInitialized() const {
  return true;
}

void GetMetricsRequest::Swap(GetMetricsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMetricsRequest::InternalSwap(GetMetricsRequest* other) {
  using std::swap;
  swap(all_, other->all_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMetricsRequest::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetMetricsResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMetricsResponse::kPrometheusFieldNumber;
const int GetMetricsResponse::kRocksdbKvFieldNumber;
const int GetMetricsResponse::kRocksdbRaftFieldNumber;
const int GetMetricsResponse::kJemallocFieldNumber;
const int GetMetricsResponse::kStoreIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMetricsResponse::GetMetricsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_GetMetricsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.GetMetricsResponse)
}
GetMetricsResponse::GetMetricsResponse(const GetMetricsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prometheus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.prometheus().size() > 0) {
    prometheus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prometheus_);
  }
  rocksdb_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rocksdb_kv().size() > 0) {
    rocksdb_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rocksdb_kv_);
  }
  rocksdb_raft_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rocksdb_raft().size() > 0) {
    rocksdb_raft_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rocksdb_raft_);
  }
  jemalloc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.jemalloc().size() > 0) {
    jemalloc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jemalloc_);
  }
  store_id_ = from.store_id_;
  // @@protoc_insertion_point(copy_constructor:debugpb.GetMetricsResponse)
}

void GetMetricsResponse::SharedCtor() {
  prometheus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rocksdb_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rocksdb_raft_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jemalloc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  store_id_ = GOOGLE_ULONGLONG(0);
}

GetMetricsResponse::~GetMetricsResponse() {
  // @@protoc_insertion_point(destructor:debugpb.GetMetricsResponse)
  SharedDtor();
}

void GetMetricsResponse::SharedDtor() {
  prometheus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rocksdb_kv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rocksdb_raft_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jemalloc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetMetricsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetMetricsResponse::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetMetricsResponse& GetMetricsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_GetMetricsResponse.base);
  return *internal_default_instance();
}


void GetMetricsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.GetMetricsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prometheus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rocksdb_kv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rocksdb_raft_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jemalloc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  store_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool GetMetricsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.GetMetricsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string prometheus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prometheus()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prometheus().data(), static_cast<int>(this->prometheus().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.GetMetricsResponse.prometheus"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rocksdb_kv = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rocksdb_kv()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rocksdb_kv().data(), static_cast<int>(this->rocksdb_kv().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.GetMetricsResponse.rocksdb_kv"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string rocksdb_raft = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rocksdb_raft()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rocksdb_raft().data(), static_cast<int>(this->rocksdb_raft().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.GetMetricsResponse.rocksdb_raft"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string jemalloc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jemalloc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jemalloc().data(), static_cast<int>(this->jemalloc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.GetMetricsResponse.jemalloc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 store_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &store_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.GetMetricsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.GetMetricsResponse)
  return false;
#undef DO_
}

void GetMetricsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.GetMetricsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string prometheus = 1;
  if (this->prometheus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prometheus().data(), static_cast<int>(this->prometheus().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.GetMetricsResponse.prometheus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->prometheus(), output);
  }

  // string rocksdb_kv = 2;
  if (this->rocksdb_kv().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rocksdb_kv().data(), static_cast<int>(this->rocksdb_kv().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.GetMetricsResponse.rocksdb_kv");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->rocksdb_kv(), output);
  }

  // string rocksdb_raft = 3;
  if (this->rocksdb_raft().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rocksdb_raft().data(), static_cast<int>(this->rocksdb_raft().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.GetMetricsResponse.rocksdb_raft");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->rocksdb_raft(), output);
  }

  // string jemalloc = 4;
  if (this->jemalloc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jemalloc().data(), static_cast<int>(this->jemalloc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.GetMetricsResponse.jemalloc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->jemalloc(), output);
  }

  // uint64 store_id = 5;
  if (this->store_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->store_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.GetMetricsResponse)
}

::google::protobuf::uint8* GetMetricsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.GetMetricsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string prometheus = 1;
  if (this->prometheus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prometheus().data(), static_cast<int>(this->prometheus().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.GetMetricsResponse.prometheus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->prometheus(), target);
  }

  // string rocksdb_kv = 2;
  if (this->rocksdb_kv().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rocksdb_kv().data(), static_cast<int>(this->rocksdb_kv().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.GetMetricsResponse.rocksdb_kv");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rocksdb_kv(), target);
  }

  // string rocksdb_raft = 3;
  if (this->rocksdb_raft().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rocksdb_raft().data(), static_cast<int>(this->rocksdb_raft().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.GetMetricsResponse.rocksdb_raft");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rocksdb_raft(), target);
  }

  // string jemalloc = 4;
  if (this->jemalloc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jemalloc().data(), static_cast<int>(this->jemalloc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.GetMetricsResponse.jemalloc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->jemalloc(), target);
  }

  // uint64 store_id = 5;
  if (this->store_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->store_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.GetMetricsResponse)
  return target;
}

size_t GetMetricsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.GetMetricsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string prometheus = 1;
  if (this->prometheus().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->prometheus());
  }

  // string rocksdb_kv = 2;
  if (this->rocksdb_kv().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rocksdb_kv());
  }

  // string rocksdb_raft = 3;
  if (this->rocksdb_raft().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rocksdb_raft());
  }

  // string jemalloc = 4;
  if (this->jemalloc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->jemalloc());
  }

  // uint64 store_id = 5;
  if (this->store_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->store_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetMetricsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.GetMetricsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetMetricsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetMetricsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.GetMetricsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.GetMetricsResponse)
    MergeFrom(*source);
  }
}

void GetMetricsResponse::MergeFrom(const GetMetricsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.GetMetricsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.prometheus().size() > 0) {

    prometheus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prometheus_);
  }
  if (from.rocksdb_kv().size() > 0) {

    rocksdb_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rocksdb_kv_);
  }
  if (from.rocksdb_raft().size() > 0) {

    rocksdb_raft_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rocksdb_raft_);
  }
  if (from.jemalloc().size() > 0) {

    jemalloc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jemalloc_);
  }
  if (from.store_id() != 0) {
    set_store_id(from.store_id());
  }
}

void GetMetricsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.GetMetricsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMetricsResponse::CopyFrom(const GetMetricsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.GetMetricsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMetricsResponse::IsInitialized() const {
  return true;
}

void GetMetricsResponse::Swap(GetMetricsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMetricsResponse::InternalSwap(GetMetricsResponse* other) {
  using std::swap;
  prometheus_.Swap(&other->prometheus_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rocksdb_kv_.Swap(&other->rocksdb_kv_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rocksdb_raft_.Swap(&other->rocksdb_raft_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  jemalloc_.Swap(&other->jemalloc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(store_id_, other->store_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetMetricsResponse::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegionConsistencyCheckRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionConsistencyCheckRequest::kRegionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionConsistencyCheckRequest::RegionConsistencyCheckRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_RegionConsistencyCheckRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RegionConsistencyCheckRequest)
}
RegionConsistencyCheckRequest::RegionConsistencyCheckRequest(const RegionConsistencyCheckRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  region_id_ = from.region_id_;
  // @@protoc_insertion_point(copy_constructor:debugpb.RegionConsistencyCheckRequest)
}

void RegionConsistencyCheckRequest::SharedCtor() {
  region_id_ = GOOGLE_ULONGLONG(0);
}

RegionConsistencyCheckRequest::~RegionConsistencyCheckRequest() {
  // @@protoc_insertion_point(destructor:debugpb.RegionConsistencyCheckRequest)
  SharedDtor();
}

void RegionConsistencyCheckRequest::SharedDtor() {
}

void RegionConsistencyCheckRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegionConsistencyCheckRequest::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionConsistencyCheckRequest& RegionConsistencyCheckRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_RegionConsistencyCheckRequest.base);
  return *internal_default_instance();
}


void RegionConsistencyCheckRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RegionConsistencyCheckRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  region_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool RegionConsistencyCheckRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RegionConsistencyCheckRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 region_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RegionConsistencyCheckRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RegionConsistencyCheckRequest)
  return false;
#undef DO_
}

void RegionConsistencyCheckRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RegionConsistencyCheckRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 region_id = 1;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->region_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.RegionConsistencyCheckRequest)
}

::google::protobuf::uint8* RegionConsistencyCheckRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RegionConsistencyCheckRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 region_id = 1;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->region_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RegionConsistencyCheckRequest)
  return target;
}

size_t RegionConsistencyCheckRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RegionConsistencyCheckRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 region_id = 1;
  if (this->region_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->region_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegionConsistencyCheckRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RegionConsistencyCheckRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionConsistencyCheckRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionConsistencyCheckRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RegionConsistencyCheckRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RegionConsistencyCheckRequest)
    MergeFrom(*source);
  }
}

void RegionConsistencyCheckRequest::MergeFrom(const RegionConsistencyCheckRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RegionConsistencyCheckRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
}

void RegionConsistencyCheckRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RegionConsistencyCheckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionConsistencyCheckRequest::CopyFrom(const RegionConsistencyCheckRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RegionConsistencyCheckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionConsistencyCheckRequest::IsInitialized() const {
  return true;
}

void RegionConsistencyCheckRequest::Swap(RegionConsistencyCheckRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionConsistencyCheckRequest::InternalSwap(RegionConsistencyCheckRequest* other) {
  using std::swap;
  swap(region_id_, other->region_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegionConsistencyCheckRequest::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegionConsistencyCheckResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionConsistencyCheckResponse::RegionConsistencyCheckResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_RegionConsistencyCheckResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.RegionConsistencyCheckResponse)
}
RegionConsistencyCheckResponse::RegionConsistencyCheckResponse(const RegionConsistencyCheckResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:debugpb.RegionConsistencyCheckResponse)
}

void RegionConsistencyCheckResponse::SharedCtor() {
}

RegionConsistencyCheckResponse::~RegionConsistencyCheckResponse() {
  // @@protoc_insertion_point(destructor:debugpb.RegionConsistencyCheckResponse)
  SharedDtor();
}

void RegionConsistencyCheckResponse::SharedDtor() {
}

void RegionConsistencyCheckResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegionConsistencyCheckResponse::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionConsistencyCheckResponse& RegionConsistencyCheckResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_RegionConsistencyCheckResponse.base);
  return *internal_default_instance();
}


void RegionConsistencyCheckResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.RegionConsistencyCheckResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RegionConsistencyCheckResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.RegionConsistencyCheckResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.RegionConsistencyCheckResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.RegionConsistencyCheckResponse)
  return false;
#undef DO_
}

void RegionConsistencyCheckResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.RegionConsistencyCheckResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.RegionConsistencyCheckResponse)
}

::google::protobuf::uint8* RegionConsistencyCheckResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.RegionConsistencyCheckResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.RegionConsistencyCheckResponse)
  return target;
}

size_t RegionConsistencyCheckResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.RegionConsistencyCheckResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegionConsistencyCheckResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.RegionConsistencyCheckResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionConsistencyCheckResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionConsistencyCheckResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.RegionConsistencyCheckResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.RegionConsistencyCheckResponse)
    MergeFrom(*source);
  }
}

void RegionConsistencyCheckResponse::MergeFrom(const RegionConsistencyCheckResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.RegionConsistencyCheckResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RegionConsistencyCheckResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.RegionConsistencyCheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionConsistencyCheckResponse::CopyFrom(const RegionConsistencyCheckResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.RegionConsistencyCheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionConsistencyCheckResponse::IsInitialized() const {
  return true;
}

void RegionConsistencyCheckResponse::Swap(RegionConsistencyCheckResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionConsistencyCheckResponse::InternalSwap(RegionConsistencyCheckResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegionConsistencyCheckResponse::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModifyTikvConfigRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifyTikvConfigRequest::kModuleFieldNumber;
const int ModifyTikvConfigRequest::kConfigNameFieldNumber;
const int ModifyTikvConfigRequest::kConfigValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyTikvConfigRequest::ModifyTikvConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_ModifyTikvConfigRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.ModifyTikvConfigRequest)
}
ModifyTikvConfigRequest::ModifyTikvConfigRequest(const ModifyTikvConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  config_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.config_name().size() > 0) {
    config_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_name_);
  }
  config_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.config_value().size() > 0) {
    config_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_value_);
  }
  module_ = from.module_;
  // @@protoc_insertion_point(copy_constructor:debugpb.ModifyTikvConfigRequest)
}

void ModifyTikvConfigRequest::SharedCtor() {
  config_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_ = 0;
}

ModifyTikvConfigRequest::~ModifyTikvConfigRequest() {
  // @@protoc_insertion_point(destructor:debugpb.ModifyTikvConfigRequest)
  SharedDtor();
}

void ModifyTikvConfigRequest::SharedDtor() {
  config_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModifyTikvConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModifyTikvConfigRequest::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModifyTikvConfigRequest& ModifyTikvConfigRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_ModifyTikvConfigRequest.base);
  return *internal_default_instance();
}


void ModifyTikvConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.ModifyTikvConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  config_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_ = 0;
  _internal_metadata_.Clear();
}

bool ModifyTikvConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.ModifyTikvConfigRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .debugpb.MODULE module = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_module(static_cast< ::debugpb::MODULE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string config_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_config_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->config_name().data(), static_cast<int>(this->config_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.ModifyTikvConfigRequest.config_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string config_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_config_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->config_value().data(), static_cast<int>(this->config_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.ModifyTikvConfigRequest.config_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.ModifyTikvConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.ModifyTikvConfigRequest)
  return false;
#undef DO_
}

void ModifyTikvConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.ModifyTikvConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .debugpb.MODULE module = 1;
  if (this->module() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->module(), output);
  }

  // string config_name = 2;
  if (this->config_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config_name().data(), static_cast<int>(this->config_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.ModifyTikvConfigRequest.config_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->config_name(), output);
  }

  // string config_value = 3;
  if (this->config_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config_value().data(), static_cast<int>(this->config_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.ModifyTikvConfigRequest.config_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->config_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.ModifyTikvConfigRequest)
}

::google::protobuf::uint8* ModifyTikvConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.ModifyTikvConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .debugpb.MODULE module = 1;
  if (this->module() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->module(), target);
  }

  // string config_name = 2;
  if (this->config_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config_name().data(), static_cast<int>(this->config_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.ModifyTikvConfigRequest.config_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->config_name(), target);
  }

  // string config_value = 3;
  if (this->config_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config_value().data(), static_cast<int>(this->config_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.ModifyTikvConfigRequest.config_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->config_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.ModifyTikvConfigRequest)
  return target;
}

size_t ModifyTikvConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.ModifyTikvConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string config_name = 2;
  if (this->config_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->config_name());
  }

  // string config_value = 3;
  if (this->config_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->config_value());
  }

  // .debugpb.MODULE module = 1;
  if (this->module() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->module());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModifyTikvConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.ModifyTikvConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyTikvConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyTikvConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.ModifyTikvConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.ModifyTikvConfigRequest)
    MergeFrom(*source);
  }
}

void ModifyTikvConfigRequest::MergeFrom(const ModifyTikvConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.ModifyTikvConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.config_name().size() > 0) {

    config_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_name_);
  }
  if (from.config_value().size() > 0) {

    config_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_value_);
  }
  if (from.module() != 0) {
    set_module(from.module());
  }
}

void ModifyTikvConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.ModifyTikvConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyTikvConfigRequest::CopyFrom(const ModifyTikvConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.ModifyTikvConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyTikvConfigRequest::IsInitialized() const {
  return true;
}

void ModifyTikvConfigRequest::Swap(ModifyTikvConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyTikvConfigRequest::InternalSwap(ModifyTikvConfigRequest* other) {
  using std::swap;
  config_name_.Swap(&other->config_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  config_value_.Swap(&other->config_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(module_, other->module_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModifyTikvConfigRequest::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModifyTikvConfigResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifyTikvConfigResponse::ModifyTikvConfigResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_ModifyTikvConfigResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.ModifyTikvConfigResponse)
}
ModifyTikvConfigResponse::ModifyTikvConfigResponse(const ModifyTikvConfigResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:debugpb.ModifyTikvConfigResponse)
}

void ModifyTikvConfigResponse::SharedCtor() {
}

ModifyTikvConfigResponse::~ModifyTikvConfigResponse() {
  // @@protoc_insertion_point(destructor:debugpb.ModifyTikvConfigResponse)
  SharedDtor();
}

void ModifyTikvConfigResponse::SharedDtor() {
}

void ModifyTikvConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModifyTikvConfigResponse::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModifyTikvConfigResponse& ModifyTikvConfigResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_ModifyTikvConfigResponse.base);
  return *internal_default_instance();
}


void ModifyTikvConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.ModifyTikvConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ModifyTikvConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.ModifyTikvConfigResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.ModifyTikvConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.ModifyTikvConfigResponse)
  return false;
#undef DO_
}

void ModifyTikvConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.ModifyTikvConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.ModifyTikvConfigResponse)
}

::google::protobuf::uint8* ModifyTikvConfigResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.ModifyTikvConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.ModifyTikvConfigResponse)
  return target;
}

size_t ModifyTikvConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.ModifyTikvConfigResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModifyTikvConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.ModifyTikvConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifyTikvConfigResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifyTikvConfigResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.ModifyTikvConfigResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.ModifyTikvConfigResponse)
    MergeFrom(*source);
  }
}

void ModifyTikvConfigResponse::MergeFrom(const ModifyTikvConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.ModifyTikvConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ModifyTikvConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.ModifyTikvConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifyTikvConfigResponse::CopyFrom(const ModifyTikvConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.ModifyTikvConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifyTikvConfigResponse::IsInitialized() const {
  return true;
}

void ModifyTikvConfigResponse::Swap(ModifyTikvConfigResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifyTikvConfigResponse::InternalSwap(ModifyTikvConfigResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModifyTikvConfigResponse::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Property::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Property::kNameFieldNumber;
const int Property::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Property::Property()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_Property.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.Property)
}
Property::Property(const Property& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:debugpb.Property)
}

void Property::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Property::~Property() {
  // @@protoc_insertion_point(destructor:debugpb.Property)
  SharedDtor();
}

void Property::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Property::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Property::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Property& Property::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_Property.base);
  return *internal_default_instance();
}


void Property::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.Property)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Property::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.Property)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.Property.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "debugpb.Property.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.Property)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.Property)
  return false;
#undef DO_
}

void Property::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.Property)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.Property.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.Property.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.Property)
}

::google::protobuf::uint8* Property::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.Property)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.Property.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "debugpb.Property.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.Property)
  return target;
}

size_t Property::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.Property)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Property::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.Property)
  GOOGLE_DCHECK_NE(&from, this);
  const Property* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Property>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.Property)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.Property)
    MergeFrom(*source);
  }
}

void Property::MergeFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.Property)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Property::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Property::CopyFrom(const Property& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Property::IsInitialized() const {
  return true;
}

void Property::Swap(Property* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Property::InternalSwap(Property* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Property::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetRegionPropertiesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRegionPropertiesRequest::kRegionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRegionPropertiesRequest::GetRegionPropertiesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_GetRegionPropertiesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.GetRegionPropertiesRequest)
}
GetRegionPropertiesRequest::GetRegionPropertiesRequest(const GetRegionPropertiesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  region_id_ = from.region_id_;
  // @@protoc_insertion_point(copy_constructor:debugpb.GetRegionPropertiesRequest)
}

void GetRegionPropertiesRequest::SharedCtor() {
  region_id_ = GOOGLE_ULONGLONG(0);
}

GetRegionPropertiesRequest::~GetRegionPropertiesRequest() {
  // @@protoc_insertion_point(destructor:debugpb.GetRegionPropertiesRequest)
  SharedDtor();
}

void GetRegionPropertiesRequest::SharedDtor() {
}

void GetRegionPropertiesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetRegionPropertiesRequest::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRegionPropertiesRequest& GetRegionPropertiesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_GetRegionPropertiesRequest.base);
  return *internal_default_instance();
}


void GetRegionPropertiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.GetRegionPropertiesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  region_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool GetRegionPropertiesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.GetRegionPropertiesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 region_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.GetRegionPropertiesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.GetRegionPropertiesRequest)
  return false;
#undef DO_
}

void GetRegionPropertiesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.GetRegionPropertiesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 region_id = 1;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->region_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.GetRegionPropertiesRequest)
}

::google::protobuf::uint8* GetRegionPropertiesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.GetRegionPropertiesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 region_id = 1;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->region_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.GetRegionPropertiesRequest)
  return target;
}

size_t GetRegionPropertiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.GetRegionPropertiesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 region_id = 1;
  if (this->region_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->region_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRegionPropertiesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.GetRegionPropertiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRegionPropertiesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRegionPropertiesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.GetRegionPropertiesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.GetRegionPropertiesRequest)
    MergeFrom(*source);
  }
}

void GetRegionPropertiesRequest::MergeFrom(const GetRegionPropertiesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.GetRegionPropertiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
}

void GetRegionPropertiesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.GetRegionPropertiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRegionPropertiesRequest::CopyFrom(const GetRegionPropertiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.GetRegionPropertiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRegionPropertiesRequest::IsInitialized() const {
  return true;
}

void GetRegionPropertiesRequest::Swap(GetRegionPropertiesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRegionPropertiesRequest::InternalSwap(GetRegionPropertiesRequest* other) {
  using std::swap;
  swap(region_id_, other->region_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetRegionPropertiesRequest::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetRegionPropertiesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRegionPropertiesResponse::kPropsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRegionPropertiesResponse::GetRegionPropertiesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_debugpb_2eproto::scc_info_GetRegionPropertiesResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:debugpb.GetRegionPropertiesResponse)
}
GetRegionPropertiesResponse::GetRegionPropertiesResponse(const GetRegionPropertiesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      props_(from.props_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:debugpb.GetRegionPropertiesResponse)
}

void GetRegionPropertiesResponse::SharedCtor() {
}

GetRegionPropertiesResponse::~GetRegionPropertiesResponse() {
  // @@protoc_insertion_point(destructor:debugpb.GetRegionPropertiesResponse)
  SharedDtor();
}

void GetRegionPropertiesResponse::SharedDtor() {
}

void GetRegionPropertiesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetRegionPropertiesResponse::descriptor() {
  ::protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRegionPropertiesResponse& GetRegionPropertiesResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_debugpb_2eproto::scc_info_GetRegionPropertiesResponse.base);
  return *internal_default_instance();
}


void GetRegionPropertiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:debugpb.GetRegionPropertiesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  props_.Clear();
  _internal_metadata_.Clear();
}

bool GetRegionPropertiesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:debugpb.GetRegionPropertiesResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .debugpb.Property props = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_props()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:debugpb.GetRegionPropertiesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:debugpb.GetRegionPropertiesResponse)
  return false;
#undef DO_
}

void GetRegionPropertiesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:debugpb.GetRegionPropertiesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .debugpb.Property props = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->props_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->props(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:debugpb.GetRegionPropertiesResponse)
}

::google::protobuf::uint8* GetRegionPropertiesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:debugpb.GetRegionPropertiesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .debugpb.Property props = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->props_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->props(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:debugpb.GetRegionPropertiesResponse)
  return target;
}

size_t GetRegionPropertiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:debugpb.GetRegionPropertiesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .debugpb.Property props = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->props_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->props(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRegionPropertiesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:debugpb.GetRegionPropertiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRegionPropertiesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRegionPropertiesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:debugpb.GetRegionPropertiesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:debugpb.GetRegionPropertiesResponse)
    MergeFrom(*source);
  }
}

void GetRegionPropertiesResponse::MergeFrom(const GetRegionPropertiesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:debugpb.GetRegionPropertiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  props_.MergeFrom(from.props_);
}

void GetRegionPropertiesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:debugpb.GetRegionPropertiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRegionPropertiesResponse::CopyFrom(const GetRegionPropertiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:debugpb.GetRegionPropertiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRegionPropertiesResponse::IsInitialized() const {
  return true;
}

void GetRegionPropertiesResponse::Swap(GetRegionPropertiesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRegionPropertiesResponse::InternalSwap(GetRegionPropertiesResponse* other) {
  using std::swap;
  CastToBase(&props_)->InternalSwap(CastToBase(&other->props_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetRegionPropertiesResponse::GetMetadata() const {
  protobuf_debugpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_debugpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace debugpb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::GetRequest* Arena::CreateMaybeMessage< ::debugpb::GetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::GetRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::GetResponse* Arena::CreateMaybeMessage< ::debugpb::GetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::GetResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::RaftLogRequest* Arena::CreateMaybeMessage< ::debugpb::RaftLogRequest >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::RaftLogRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::RaftLogResponse* Arena::CreateMaybeMessage< ::debugpb::RaftLogResponse >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::RaftLogResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::RegionInfoRequest* Arena::CreateMaybeMessage< ::debugpb::RegionInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::RegionInfoRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::RegionInfoResponse* Arena::CreateMaybeMessage< ::debugpb::RegionInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::RegionInfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::RegionSizeRequest* Arena::CreateMaybeMessage< ::debugpb::RegionSizeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::RegionSizeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::RegionSizeResponse_Entry* Arena::CreateMaybeMessage< ::debugpb::RegionSizeResponse_Entry >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::RegionSizeResponse_Entry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::RegionSizeResponse* Arena::CreateMaybeMessage< ::debugpb::RegionSizeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::RegionSizeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::ScanMvccRequest* Arena::CreateMaybeMessage< ::debugpb::ScanMvccRequest >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::ScanMvccRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::ScanMvccResponse* Arena::CreateMaybeMessage< ::debugpb::ScanMvccResponse >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::ScanMvccResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::CompactRequest* Arena::CreateMaybeMessage< ::debugpb::CompactRequest >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::CompactRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::CompactResponse* Arena::CreateMaybeMessage< ::debugpb::CompactResponse >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::CompactResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::InjectFailPointRequest* Arena::CreateMaybeMessage< ::debugpb::InjectFailPointRequest >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::InjectFailPointRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::InjectFailPointResponse* Arena::CreateMaybeMessage< ::debugpb::InjectFailPointResponse >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::InjectFailPointResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::RecoverFailPointRequest* Arena::CreateMaybeMessage< ::debugpb::RecoverFailPointRequest >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::RecoverFailPointRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::RecoverFailPointResponse* Arena::CreateMaybeMessage< ::debugpb::RecoverFailPointResponse >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::RecoverFailPointResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::ListFailPointsRequest* Arena::CreateMaybeMessage< ::debugpb::ListFailPointsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::ListFailPointsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::ListFailPointsResponse_Entry* Arena::CreateMaybeMessage< ::debugpb::ListFailPointsResponse_Entry >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::ListFailPointsResponse_Entry >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::ListFailPointsResponse* Arena::CreateMaybeMessage< ::debugpb::ListFailPointsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::ListFailPointsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::GetMetricsRequest* Arena::CreateMaybeMessage< ::debugpb::GetMetricsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::GetMetricsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::GetMetricsResponse* Arena::CreateMaybeMessage< ::debugpb::GetMetricsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::GetMetricsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::RegionConsistencyCheckRequest* Arena::CreateMaybeMessage< ::debugpb::RegionConsistencyCheckRequest >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::RegionConsistencyCheckRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::RegionConsistencyCheckResponse* Arena::CreateMaybeMessage< ::debugpb::RegionConsistencyCheckResponse >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::RegionConsistencyCheckResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::ModifyTikvConfigRequest* Arena::CreateMaybeMessage< ::debugpb::ModifyTikvConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::ModifyTikvConfigRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::ModifyTikvConfigResponse* Arena::CreateMaybeMessage< ::debugpb::ModifyTikvConfigResponse >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::ModifyTikvConfigResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::Property* Arena::CreateMaybeMessage< ::debugpb::Property >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::Property >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::GetRegionPropertiesRequest* Arena::CreateMaybeMessage< ::debugpb::GetRegionPropertiesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::GetRegionPropertiesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::debugpb::GetRegionPropertiesResponse* Arena::CreateMaybeMessage< ::debugpb::GetRegionPropertiesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::debugpb::GetRegionPropertiesResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
