// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: import_kvpb.proto

#include "import_kvpb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_import_5fkvpb_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_import_5fkvpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Error_EngineNotFound;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_import_5fkvpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Mutation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_import_5fkvpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WriteHead;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_import_5fkvpb_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Error;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_import_5fkvpb_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_WriteBatch;
}  // namespace protobuf_import_5fkvpb_2eproto
namespace protobuf_import_5fsstpb_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_import_5fsstpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SwitchModeRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_import_5fsstpb_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CompactRequest;
}  // namespace protobuf_import_5fsstpb_2eproto
namespace import_kvpb {
class SwitchModeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SwitchModeRequest>
      _instance;
} _SwitchModeRequest_default_instance_;
class SwitchModeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SwitchModeResponse>
      _instance;
} _SwitchModeResponse_default_instance_;
class OpenEngineRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpenEngineRequest>
      _instance;
} _OpenEngineRequest_default_instance_;
class OpenEngineResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpenEngineResponse>
      _instance;
} _OpenEngineResponse_default_instance_;
class WriteHeadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteHead>
      _instance;
} _WriteHead_default_instance_;
class MutationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mutation>
      _instance;
} _Mutation_default_instance_;
class WriteBatchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteBatch>
      _instance;
} _WriteBatch_default_instance_;
class WriteEngineRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteEngineRequest>
      _instance;
  const ::import_kvpb::WriteHead* head_;
  const ::import_kvpb::WriteBatch* batch_;
} _WriteEngineRequest_default_instance_;
class WriteEngineResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteEngineResponse>
      _instance;
} _WriteEngineResponse_default_instance_;
class CloseEngineRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseEngineRequest>
      _instance;
} _CloseEngineRequest_default_instance_;
class CloseEngineResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseEngineResponse>
      _instance;
} _CloseEngineResponse_default_instance_;
class ImportEngineRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImportEngineRequest>
      _instance;
} _ImportEngineRequest_default_instance_;
class ImportEngineResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImportEngineResponse>
      _instance;
} _ImportEngineResponse_default_instance_;
class CleanupEngineRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CleanupEngineRequest>
      _instance;
} _CleanupEngineRequest_default_instance_;
class CleanupEngineResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CleanupEngineResponse>
      _instance;
} _CleanupEngineResponse_default_instance_;
class CompactClusterRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompactClusterRequest>
      _instance;
} _CompactClusterRequest_default_instance_;
class CompactClusterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompactClusterResponse>
      _instance;
} _CompactClusterResponse_default_instance_;
class Error_EngineNotFoundDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Error_EngineNotFound>
      _instance;
} _Error_EngineNotFound_default_instance_;
class ErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Error>
      _instance;
} _Error_default_instance_;
}  // namespace import_kvpb
namespace protobuf_import_5fkvpb_2eproto {
static void InitDefaultsSwitchModeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::import_kvpb::_SwitchModeRequest_default_instance_;
    new (ptr) ::import_kvpb::SwitchModeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::SwitchModeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SwitchModeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSwitchModeRequest}, {
      &protobuf_import_5fsstpb_2eproto::scc_info_SwitchModeRequest.base,}};

static void InitDefaultsSwitchModeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::import_kvpb::_SwitchModeResponse_default_instance_;
    new (ptr) ::import_kvpb::SwitchModeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::SwitchModeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SwitchModeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSwitchModeResponse}, {}};

static void InitDefaultsOpenEngineRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::import_kvpb::_OpenEngineRequest_default_instance_;
    new (ptr) ::import_kvpb::OpenEngineRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::OpenEngineRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OpenEngineRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOpenEngineRequest}, {}};

static void InitDefaultsOpenEngineResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::import_kvpb::_OpenEngineResponse_default_instance_;
    new (ptr) ::import_kvpb::OpenEngineResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::OpenEngineResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OpenEngineResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOpenEngineResponse}, {}};

static void InitDefaultsWriteHead() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::import_kvpb::_WriteHead_default_instance_;
    new (ptr) ::import_kvpb::WriteHead();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::WriteHead::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WriteHead =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWriteHead}, {}};

static void InitDefaultsMutation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::import_kvpb::_Mutation_default_instance_;
    new (ptr) ::import_kvpb::Mutation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::Mutation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Mutation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMutation}, {}};

static void InitDefaultsWriteBatch() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::import_kvpb::_WriteBatch_default_instance_;
    new (ptr) ::import_kvpb::WriteBatch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::WriteBatch::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WriteBatch =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWriteBatch}, {
      &protobuf_import_5fkvpb_2eproto::scc_info_Mutation.base,}};

static void InitDefaultsWriteEngineRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::import_kvpb::_WriteEngineRequest_default_instance_;
    new (ptr) ::import_kvpb::WriteEngineRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::WriteEngineRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_WriteEngineRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsWriteEngineRequest}, {
      &protobuf_import_5fkvpb_2eproto::scc_info_WriteHead.base,
      &protobuf_import_5fkvpb_2eproto::scc_info_WriteBatch.base,}};

static void InitDefaultsWriteEngineResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::import_kvpb::_WriteEngineResponse_default_instance_;
    new (ptr) ::import_kvpb::WriteEngineResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::WriteEngineResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_WriteEngineResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsWriteEngineResponse}, {
      &protobuf_import_5fkvpb_2eproto::scc_info_Error.base,}};

static void InitDefaultsCloseEngineRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::import_kvpb::_CloseEngineRequest_default_instance_;
    new (ptr) ::import_kvpb::CloseEngineRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::CloseEngineRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CloseEngineRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCloseEngineRequest}, {}};

static void InitDefaultsCloseEngineResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::import_kvpb::_CloseEngineResponse_default_instance_;
    new (ptr) ::import_kvpb::CloseEngineResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::CloseEngineResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CloseEngineResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCloseEngineResponse}, {
      &protobuf_import_5fkvpb_2eproto::scc_info_Error.base,}};

static void InitDefaultsImportEngineRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::import_kvpb::_ImportEngineRequest_default_instance_;
    new (ptr) ::import_kvpb::ImportEngineRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::ImportEngineRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ImportEngineRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImportEngineRequest}, {}};

static void InitDefaultsImportEngineResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::import_kvpb::_ImportEngineResponse_default_instance_;
    new (ptr) ::import_kvpb::ImportEngineResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::ImportEngineResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ImportEngineResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImportEngineResponse}, {}};

static void InitDefaultsCleanupEngineRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::import_kvpb::_CleanupEngineRequest_default_instance_;
    new (ptr) ::import_kvpb::CleanupEngineRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::CleanupEngineRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CleanupEngineRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCleanupEngineRequest}, {}};

static void InitDefaultsCleanupEngineResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::import_kvpb::_CleanupEngineResponse_default_instance_;
    new (ptr) ::import_kvpb::CleanupEngineResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::CleanupEngineResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CleanupEngineResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCleanupEngineResponse}, {}};

static void InitDefaultsCompactClusterRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::import_kvpb::_CompactClusterRequest_default_instance_;
    new (ptr) ::import_kvpb::CompactClusterRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::CompactClusterRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CompactClusterRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCompactClusterRequest}, {
      &protobuf_import_5fsstpb_2eproto::scc_info_CompactRequest.base,}};

static void InitDefaultsCompactClusterResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::import_kvpb::_CompactClusterResponse_default_instance_;
    new (ptr) ::import_kvpb::CompactClusterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::CompactClusterResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CompactClusterResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCompactClusterResponse}, {}};

static void InitDefaultsError_EngineNotFound() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::import_kvpb::_Error_EngineNotFound_default_instance_;
    new (ptr) ::import_kvpb::Error_EngineNotFound();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::Error_EngineNotFound::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Error_EngineNotFound =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsError_EngineNotFound}, {}};

static void InitDefaultsError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::import_kvpb::_Error_default_instance_;
    new (ptr) ::import_kvpb::Error();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::import_kvpb::Error::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Error =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsError}, {
      &protobuf_import_5fkvpb_2eproto::scc_info_Error_EngineNotFound.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SwitchModeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SwitchModeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpenEngineRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OpenEngineResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteHead.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Mutation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteBatch.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteEngineRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteEngineResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CloseEngineRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CloseEngineResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImportEngineRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImportEngineResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CleanupEngineRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CleanupEngineResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompactClusterRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompactClusterResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Error_EngineNotFound.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Error.base);
}

::google::protobuf::Metadata file_level_metadata[19];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::SwitchModeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::SwitchModeRequest, pd_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::SwitchModeRequest, request_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::SwitchModeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::OpenEngineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::OpenEngineRequest, uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::OpenEngineResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::WriteHead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::WriteHead, uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::Mutation, op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::Mutation, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::Mutation, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::WriteBatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::WriteBatch, commit_ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::WriteBatch, mutations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::WriteEngineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::WriteEngineRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::import_kvpb::WriteEngineRequestDefaultTypeInternal, head_),
  offsetof(::import_kvpb::WriteEngineRequestDefaultTypeInternal, batch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::WriteEngineRequest, chunk_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::WriteEngineResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::WriteEngineResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::CloseEngineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::CloseEngineRequest, uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::CloseEngineResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::CloseEngineResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::ImportEngineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::ImportEngineRequest, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::ImportEngineRequest, pd_addr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::ImportEngineResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::CleanupEngineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::CleanupEngineRequest, uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::CleanupEngineResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::CompactClusterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::CompactClusterRequest, pd_addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::CompactClusterRequest, request_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::CompactClusterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::Error_EngineNotFound, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::Error_EngineNotFound, uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::Error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::import_kvpb::Error, engine_not_found_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::import_kvpb::SwitchModeRequest)},
  { 7, -1, sizeof(::import_kvpb::SwitchModeResponse)},
  { 12, -1, sizeof(::import_kvpb::OpenEngineRequest)},
  { 18, -1, sizeof(::import_kvpb::OpenEngineResponse)},
  { 23, -1, sizeof(::import_kvpb::WriteHead)},
  { 29, -1, sizeof(::import_kvpb::Mutation)},
  { 37, -1, sizeof(::import_kvpb::WriteBatch)},
  { 44, -1, sizeof(::import_kvpb::WriteEngineRequest)},
  { 52, -1, sizeof(::import_kvpb::WriteEngineResponse)},
  { 58, -1, sizeof(::import_kvpb::CloseEngineRequest)},
  { 64, -1, sizeof(::import_kvpb::CloseEngineResponse)},
  { 70, -1, sizeof(::import_kvpb::ImportEngineRequest)},
  { 77, -1, sizeof(::import_kvpb::ImportEngineResponse)},
  { 82, -1, sizeof(::import_kvpb::CleanupEngineRequest)},
  { 88, -1, sizeof(::import_kvpb::CleanupEngineResponse)},
  { 93, -1, sizeof(::import_kvpb::CompactClusterRequest)},
  { 100, -1, sizeof(::import_kvpb::CompactClusterResponse)},
  { 105, -1, sizeof(::import_kvpb::Error_EngineNotFound)},
  { 111, -1, sizeof(::import_kvpb::Error)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_SwitchModeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_SwitchModeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_OpenEngineRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_OpenEngineResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_WriteHead_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_Mutation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_WriteBatch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_WriteEngineRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_WriteEngineResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_CloseEngineRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_CloseEngineResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_ImportEngineRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_ImportEngineResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_CleanupEngineRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_CleanupEngineResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_CompactClusterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_CompactClusterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_Error_EngineNotFound_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::import_kvpb::_Error_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "import_kvpb.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 19);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021import_kvpb.proto\022\013import_kvpb\032\022import"
      "_sstpb.proto\032\024gogoproto/gogo.proto\"V\n\021Sw"
      "itchModeRequest\022\017\n\007pd_addr\030\001 \001(\t\0220\n\007requ"
      "est\030\002 \001(\0132\037.import_sstpb.SwitchModeReque"
      "st\"\024\n\022SwitchModeResponse\"!\n\021OpenEngineRe"
      "quest\022\014\n\004uuid\030\001 \001(\014\"\024\n\022OpenEngineRespons"
      "e\"\031\n\tWriteHead\022\014\n\004uuid\030\001 \001(\014\"[\n\010Mutation"
      "\022$\n\002op\030\001 \001(\0162\030.import_kvpb.Mutation.OP\022\013"
      "\n\003key\030\002 \001(\014\022\r\n\005value\030\003 \001(\014\"\r\n\002OP\022\007\n\003Put\020"
      "\000\"I\n\nWriteBatch\022\021\n\tcommit_ts\030\001 \001(\004\022(\n\tmu"
      "tations\030\002 \003(\0132\025.import_kvpb.Mutation\"o\n\022"
      "WriteEngineRequest\022&\n\004head\030\001 \001(\0132\026.impor"
      "t_kvpb.WriteHeadH\000\022(\n\005batch\030\002 \001(\0132\027.impo"
      "rt_kvpb.WriteBatchH\000B\007\n\005chunk\"8\n\023WriteEn"
      "gineResponse\022!\n\005error\030\001 \001(\0132\022.import_kvp"
      "b.Error\"\"\n\022CloseEngineRequest\022\014\n\004uuid\030\001 "
      "\001(\014\"8\n\023CloseEngineResponse\022!\n\005error\030\001 \001("
      "\0132\022.import_kvpb.Error\"4\n\023ImportEngineReq"
      "uest\022\014\n\004uuid\030\001 \001(\014\022\017\n\007pd_addr\030\002 \001(\t\"\026\n\024I"
      "mportEngineResponse\"$\n\024CleanupEngineRequ"
      "est\022\014\n\004uuid\030\001 \001(\014\"\027\n\025CleanupEngineRespon"
      "se\"W\n\025CompactClusterRequest\022\017\n\007pd_addr\030\001"
      " \001(\t\022-\n\007request\030\002 \001(\0132\034.import_sstpb.Com"
      "pactRequest\"\030\n\026CompactClusterResponse\"d\n"
      "\005Error\022;\n\020engine_not_found\030\001 \001(\0132!.impor"
      "t_kvpb.Error.EngineNotFound\032\036\n\016EngineNot"
      "Found\022\014\n\004uuid\030\001 \001(\0142\344\004\n\010ImportKV\022O\n\nSwit"
      "chMode\022\036.import_kvpb.SwitchModeRequest\032\037"
      ".import_kvpb.SwitchModeResponse\"\000\022O\n\nOpe"
      "nEngine\022\036.import_kvpb.OpenEngineRequest\032"
      "\037.import_kvpb.OpenEngineResponse\"\000\022T\n\013Wr"
      "iteEngine\022\037.import_kvpb.WriteEngineReque"
      "st\032 .import_kvpb.WriteEngineResponse\"\000(\001"
      "\022R\n\013CloseEngine\022\037.import_kvpb.CloseEngin"
      "eRequest\032 .import_kvpb.CloseEngineRespon"
      "se\"\000\022U\n\014ImportEngine\022 .import_kvpb.Impor"
      "tEngineRequest\032!.import_kvpb.ImportEngin"
      "eResponse\"\000\022X\n\rCleanupEngine\022!.import_kv"
      "pb.CleanupEngineRequest\032\".import_kvpb.Cl"
      "eanupEngineResponse\"\000\022[\n\016CompactCluster\022"
      "\".import_kvpb.CompactClusterRequest\032#.im"
      "port_kvpb.CompactClusterResponse\"\000B&\n\030co"
      "m.pingcap.tikv.kvproto\340\342\036\001\310\342\036\001\320\342\036\001b\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1722);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "import_kvpb.proto", &protobuf_RegisterTypes);
  ::protobuf_import_5fsstpb_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_import_5fkvpb_2eproto
namespace import_kvpb {
const ::google::protobuf::EnumDescriptor* Mutation_OP_descriptor() {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_import_5fkvpb_2eproto::file_level_enum_descriptors[0];
}
bool Mutation_OP_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Mutation_OP Mutation::Put;
const Mutation_OP Mutation::OP_MIN;
const Mutation_OP Mutation::OP_MAX;
const int Mutation::OP_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void SwitchModeRequest::InitAsDefaultInstance() {
  ::import_kvpb::_SwitchModeRequest_default_instance_._instance.get_mutable()->request_ = const_cast< ::import_sstpb::SwitchModeRequest*>(
      ::import_sstpb::SwitchModeRequest::internal_default_instance());
}
void SwitchModeRequest::clear_request() {
  if (GetArenaNoVirtual() == NULL && request_ != NULL) {
    delete request_;
  }
  request_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SwitchModeRequest::kPdAddrFieldNumber;
const int SwitchModeRequest::kRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwitchModeRequest::SwitchModeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fkvpb_2eproto::scc_info_SwitchModeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.SwitchModeRequest)
}
SwitchModeRequest::SwitchModeRequest(const SwitchModeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pd_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pd_addr().size() > 0) {
    pd_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pd_addr_);
  }
  if (from.has_request()) {
    request_ = new ::import_sstpb::SwitchModeRequest(*from.request_);
  } else {
    request_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:import_kvpb.SwitchModeRequest)
}

void SwitchModeRequest::SharedCtor() {
  pd_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_ = NULL;
}

SwitchModeRequest::~SwitchModeRequest() {
  // @@protoc_insertion_point(destructor:import_kvpb.SwitchModeRequest)
  SharedDtor();
}

void SwitchModeRequest::SharedDtor() {
  pd_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete request_;
}

void SwitchModeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SwitchModeRequest::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SwitchModeRequest& SwitchModeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fkvpb_2eproto::scc_info_SwitchModeRequest.base);
  return *internal_default_instance();
}


void SwitchModeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.SwitchModeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pd_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && request_ != NULL) {
    delete request_;
  }
  request_ = NULL;
  _internal_metadata_.Clear();
}

bool SwitchModeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.SwitchModeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pd_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pd_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pd_addr().data(), static_cast<int>(this->pd_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "import_kvpb.SwitchModeRequest.pd_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .import_sstpb.SwitchModeRequest request = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.SwitchModeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.SwitchModeRequest)
  return false;
#undef DO_
}

void SwitchModeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.SwitchModeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pd_addr = 1;
  if (this->pd_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pd_addr().data(), static_cast<int>(this->pd_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "import_kvpb.SwitchModeRequest.pd_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pd_addr(), output);
  }

  // .import_sstpb.SwitchModeRequest request = 2;
  if (this->has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_request(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.SwitchModeRequest)
}

::google::protobuf::uint8* SwitchModeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.SwitchModeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pd_addr = 1;
  if (this->pd_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pd_addr().data(), static_cast<int>(this->pd_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "import_kvpb.SwitchModeRequest.pd_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pd_addr(), target);
  }

  // .import_sstpb.SwitchModeRequest request = 2;
  if (this->has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_request(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.SwitchModeRequest)
  return target;
}

size_t SwitchModeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.SwitchModeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pd_addr = 1;
  if (this->pd_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pd_addr());
  }

  // .import_sstpb.SwitchModeRequest request = 2;
  if (this->has_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *request_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SwitchModeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.SwitchModeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SwitchModeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SwitchModeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.SwitchModeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.SwitchModeRequest)
    MergeFrom(*source);
  }
}

void SwitchModeRequest::MergeFrom(const SwitchModeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.SwitchModeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pd_addr().size() > 0) {

    pd_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pd_addr_);
  }
  if (from.has_request()) {
    mutable_request()->::import_sstpb::SwitchModeRequest::MergeFrom(from.request());
  }
}

void SwitchModeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.SwitchModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchModeRequest::CopyFrom(const SwitchModeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.SwitchModeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwitchModeRequest::IsInitialized() const {
  return true;
}

void SwitchModeRequest::Swap(SwitchModeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwitchModeRequest::InternalSwap(SwitchModeRequest* other) {
  using std::swap;
  pd_addr_.Swap(&other->pd_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(request_, other->request_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SwitchModeRequest::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SwitchModeResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SwitchModeResponse::SwitchModeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fkvpb_2eproto::scc_info_SwitchModeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.SwitchModeResponse)
}
SwitchModeResponse::SwitchModeResponse(const SwitchModeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.SwitchModeResponse)
}

void SwitchModeResponse::SharedCtor() {
}

SwitchModeResponse::~SwitchModeResponse() {
  // @@protoc_insertion_point(destructor:import_kvpb.SwitchModeResponse)
  SharedDtor();
}

void SwitchModeResponse::SharedDtor() {
}

void SwitchModeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SwitchModeResponse::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SwitchModeResponse& SwitchModeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fkvpb_2eproto::scc_info_SwitchModeResponse.base);
  return *internal_default_instance();
}


void SwitchModeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.SwitchModeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SwitchModeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.SwitchModeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.SwitchModeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.SwitchModeResponse)
  return false;
#undef DO_
}

void SwitchModeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.SwitchModeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.SwitchModeResponse)
}

::google::protobuf::uint8* SwitchModeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.SwitchModeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.SwitchModeResponse)
  return target;
}

size_t SwitchModeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.SwitchModeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SwitchModeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.SwitchModeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SwitchModeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SwitchModeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.SwitchModeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.SwitchModeResponse)
    MergeFrom(*source);
  }
}

void SwitchModeResponse::MergeFrom(const SwitchModeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.SwitchModeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SwitchModeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.SwitchModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SwitchModeResponse::CopyFrom(const SwitchModeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.SwitchModeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwitchModeResponse::IsInitialized() const {
  return true;
}

void SwitchModeResponse::Swap(SwitchModeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SwitchModeResponse::InternalSwap(SwitchModeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SwitchModeResponse::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpenEngineRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenEngineRequest::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenEngineRequest::OpenEngineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fkvpb_2eproto::scc_info_OpenEngineRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.OpenEngineRequest)
}
OpenEngineRequest::OpenEngineRequest(const OpenEngineRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:import_kvpb.OpenEngineRequest)
}

void OpenEngineRequest::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OpenEngineRequest::~OpenEngineRequest() {
  // @@protoc_insertion_point(destructor:import_kvpb.OpenEngineRequest)
  SharedDtor();
}

void OpenEngineRequest::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpenEngineRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OpenEngineRequest::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpenEngineRequest& OpenEngineRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fkvpb_2eproto::scc_info_OpenEngineRequest.base);
  return *internal_default_instance();
}


void OpenEngineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.OpenEngineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool OpenEngineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.OpenEngineRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.OpenEngineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.OpenEngineRequest)
  return false;
#undef DO_
}

void OpenEngineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.OpenEngineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.OpenEngineRequest)
}

::google::protobuf::uint8* OpenEngineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.OpenEngineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.OpenEngineRequest)
  return target;
}

size_t OpenEngineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.OpenEngineRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpenEngineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.OpenEngineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenEngineRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenEngineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.OpenEngineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.OpenEngineRequest)
    MergeFrom(*source);
  }
}

void OpenEngineRequest::MergeFrom(const OpenEngineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.OpenEngineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void OpenEngineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.OpenEngineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenEngineRequest::CopyFrom(const OpenEngineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.OpenEngineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenEngineRequest::IsInitialized() const {
  return true;
}

void OpenEngineRequest::Swap(OpenEngineRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenEngineRequest::InternalSwap(OpenEngineRequest* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OpenEngineRequest::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpenEngineResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenEngineResponse::OpenEngineResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fkvpb_2eproto::scc_info_OpenEngineResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.OpenEngineResponse)
}
OpenEngineResponse::OpenEngineResponse(const OpenEngineResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.OpenEngineResponse)
}

void OpenEngineResponse::SharedCtor() {
}

OpenEngineResponse::~OpenEngineResponse() {
  // @@protoc_insertion_point(destructor:import_kvpb.OpenEngineResponse)
  SharedDtor();
}

void OpenEngineResponse::SharedDtor() {
}

void OpenEngineResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OpenEngineResponse::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpenEngineResponse& OpenEngineResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fkvpb_2eproto::scc_info_OpenEngineResponse.base);
  return *internal_default_instance();
}


void OpenEngineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.OpenEngineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool OpenEngineResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.OpenEngineResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.OpenEngineResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.OpenEngineResponse)
  return false;
#undef DO_
}

void OpenEngineResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.OpenEngineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.OpenEngineResponse)
}

::google::protobuf::uint8* OpenEngineResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.OpenEngineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.OpenEngineResponse)
  return target;
}

size_t OpenEngineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.OpenEngineResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpenEngineResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.OpenEngineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenEngineResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenEngineResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.OpenEngineResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.OpenEngineResponse)
    MergeFrom(*source);
  }
}

void OpenEngineResponse::MergeFrom(const OpenEngineResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.OpenEngineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void OpenEngineResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.OpenEngineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenEngineResponse::CopyFrom(const OpenEngineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.OpenEngineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenEngineResponse::IsInitialized() const {
  return true;
}

void OpenEngineResponse::Swap(OpenEngineResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenEngineResponse::InternalSwap(OpenEngineResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OpenEngineResponse::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WriteHead::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteHead::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteHead::WriteHead()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fkvpb_2eproto::scc_info_WriteHead.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.WriteHead)
}
WriteHead::WriteHead(const WriteHead& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:import_kvpb.WriteHead)
}

void WriteHead::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WriteHead::~WriteHead() {
  // @@protoc_insertion_point(destructor:import_kvpb.WriteHead)
  SharedDtor();
}

void WriteHead::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WriteHead::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WriteHead::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteHead& WriteHead::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fkvpb_2eproto::scc_info_WriteHead.base);
  return *internal_default_instance();
}


void WriteHead::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.WriteHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool WriteHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.WriteHead)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.WriteHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.WriteHead)
  return false;
#undef DO_
}

void WriteHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.WriteHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.WriteHead)
}

::google::protobuf::uint8* WriteHead::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.WriteHead)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.WriteHead)
  return target;
}

size_t WriteHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.WriteHead)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteHead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.WriteHead)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteHead* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteHead>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.WriteHead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.WriteHead)
    MergeFrom(*source);
  }
}

void WriteHead::MergeFrom(const WriteHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.WriteHead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void WriteHead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.WriteHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteHead::CopyFrom(const WriteHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.WriteHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteHead::IsInitialized() const {
  return true;
}

void WriteHead::Swap(WriteHead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteHead::InternalSwap(WriteHead* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WriteHead::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Mutation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mutation::kOpFieldNumber;
const int Mutation::kKeyFieldNumber;
const int Mutation::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mutation::Mutation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fkvpb_2eproto::scc_info_Mutation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.Mutation)
}
Mutation::Mutation(const Mutation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  op_ = from.op_;
  // @@protoc_insertion_point(copy_constructor:import_kvpb.Mutation)
}

void Mutation::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_ = 0;
}

Mutation::~Mutation() {
  // @@protoc_insertion_point(destructor:import_kvpb.Mutation)
  SharedDtor();
}

void Mutation::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Mutation::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Mutation& Mutation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fkvpb_2eproto::scc_info_Mutation.base);
  return *internal_default_instance();
}


void Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.Mutation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_ = 0;
  _internal_metadata_.Clear();
}

bool Mutation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.Mutation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .import_kvpb.Mutation.OP op = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::import_kvpb::Mutation_OP >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.Mutation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.Mutation)
  return false;
#undef DO_
}

void Mutation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.Mutation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_kvpb.Mutation.OP op = 1;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->op(), output);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->key(), output);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.Mutation)
}

::google::protobuf::uint8* Mutation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.Mutation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_kvpb.Mutation.OP op = 1;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->op(), target);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->key(), target);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.Mutation)
  return target;
}

size_t Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.Mutation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .import_kvpb.Mutation.OP op = 1;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Mutation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const Mutation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Mutation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.Mutation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.Mutation)
    MergeFrom(*source);
  }
}

void Mutation::MergeFrom(const Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
}

void Mutation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mutation::CopyFrom(const Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mutation::IsInitialized() const {
  return true;
}

void Mutation::Swap(Mutation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mutation::InternalSwap(Mutation* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(op_, other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Mutation::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WriteBatch::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteBatch::kCommitTsFieldNumber;
const int WriteBatch::kMutationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteBatch::WriteBatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fkvpb_2eproto::scc_info_WriteBatch.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.WriteBatch)
}
WriteBatch::WriteBatch(const WriteBatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mutations_(from.mutations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  commit_ts_ = from.commit_ts_;
  // @@protoc_insertion_point(copy_constructor:import_kvpb.WriteBatch)
}

void WriteBatch::SharedCtor() {
  commit_ts_ = GOOGLE_ULONGLONG(0);
}

WriteBatch::~WriteBatch() {
  // @@protoc_insertion_point(destructor:import_kvpb.WriteBatch)
  SharedDtor();
}

void WriteBatch::SharedDtor() {
}

void WriteBatch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WriteBatch::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteBatch& WriteBatch::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fkvpb_2eproto::scc_info_WriteBatch.base);
  return *internal_default_instance();
}


void WriteBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.WriteBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mutations_.Clear();
  commit_ts_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool WriteBatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.WriteBatch)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 commit_ts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &commit_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .import_kvpb.Mutation mutations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_mutations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.WriteBatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.WriteBatch)
  return false;
#undef DO_
}

void WriteBatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.WriteBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 commit_ts = 1;
  if (this->commit_ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->commit_ts(), output);
  }

  // repeated .import_kvpb.Mutation mutations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->mutations(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.WriteBatch)
}

::google::protobuf::uint8* WriteBatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.WriteBatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 commit_ts = 1;
  if (this->commit_ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->commit_ts(), target);
  }

  // repeated .import_kvpb.Mutation mutations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->mutations(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.WriteBatch)
  return target;
}

size_t WriteBatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.WriteBatch)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .import_kvpb.Mutation mutations = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->mutations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mutations(static_cast<int>(i)));
    }
  }

  // uint64 commit_ts = 1;
  if (this->commit_ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->commit_ts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteBatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.WriteBatch)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteBatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteBatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.WriteBatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.WriteBatch)
    MergeFrom(*source);
  }
}

void WriteBatch::MergeFrom(const WriteBatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.WriteBatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mutations_.MergeFrom(from.mutations_);
  if (from.commit_ts() != 0) {
    set_commit_ts(from.commit_ts());
  }
}

void WriteBatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.WriteBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteBatch::CopyFrom(const WriteBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.WriteBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteBatch::IsInitialized() const {
  return true;
}

void WriteBatch::Swap(WriteBatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteBatch::InternalSwap(WriteBatch* other) {
  using std::swap;
  CastToBase(&mutations_)->InternalSwap(CastToBase(&other->mutations_));
  swap(commit_ts_, other->commit_ts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WriteBatch::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WriteEngineRequest::InitAsDefaultInstance() {
  ::import_kvpb::_WriteEngineRequest_default_instance_.head_ = const_cast< ::import_kvpb::WriteHead*>(
      ::import_kvpb::WriteHead::internal_default_instance());
  ::import_kvpb::_WriteEngineRequest_default_instance_.batch_ = const_cast< ::import_kvpb::WriteBatch*>(
      ::import_kvpb::WriteBatch::internal_default_instance());
}
void WriteEngineRequest::set_allocated_head(::import_kvpb::WriteHead* head) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_chunk();
  if (head) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      head = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, head, submessage_arena);
    }
    set_has_head();
    chunk_.head_ = head;
  }
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.WriteEngineRequest.head)
}
void WriteEngineRequest::set_allocated_batch(::import_kvpb::WriteBatch* batch) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_chunk();
  if (batch) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      batch = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, batch, submessage_arena);
    }
    set_has_batch();
    chunk_.batch_ = batch;
  }
  // @@protoc_insertion_point(field_set_allocated:import_kvpb.WriteEngineRequest.batch)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteEngineRequest::kHeadFieldNumber;
const int WriteEngineRequest::kBatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteEngineRequest::WriteEngineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fkvpb_2eproto::scc_info_WriteEngineRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.WriteEngineRequest)
}
WriteEngineRequest::WriteEngineRequest(const WriteEngineRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_chunk();
  switch (from.chunk_case()) {
    case kHead: {
      mutable_head()->::import_kvpb::WriteHead::MergeFrom(from.head());
      break;
    }
    case kBatch: {
      mutable_batch()->::import_kvpb::WriteBatch::MergeFrom(from.batch());
      break;
    }
    case CHUNK_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:import_kvpb.WriteEngineRequest)
}

void WriteEngineRequest::SharedCtor() {
  clear_has_chunk();
}

WriteEngineRequest::~WriteEngineRequest() {
  // @@protoc_insertion_point(destructor:import_kvpb.WriteEngineRequest)
  SharedDtor();
}

void WriteEngineRequest::SharedDtor() {
  if (has_chunk()) {
    clear_chunk();
  }
}

void WriteEngineRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WriteEngineRequest::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteEngineRequest& WriteEngineRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fkvpb_2eproto::scc_info_WriteEngineRequest.base);
  return *internal_default_instance();
}


void WriteEngineRequest::clear_chunk() {
// @@protoc_insertion_point(one_of_clear_start:import_kvpb.WriteEngineRequest)
  switch (chunk_case()) {
    case kHead: {
      delete chunk_.head_;
      break;
    }
    case kBatch: {
      delete chunk_.batch_;
      break;
    }
    case CHUNK_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CHUNK_NOT_SET;
}


void WriteEngineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.WriteEngineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_chunk();
  _internal_metadata_.Clear();
}

bool WriteEngineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.WriteEngineRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .import_kvpb.WriteHead head = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_head()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .import_kvpb.WriteBatch batch = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_batch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.WriteEngineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.WriteEngineRequest)
  return false;
#undef DO_
}

void WriteEngineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.WriteEngineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_kvpb.WriteHead head = 1;
  if (has_head()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_head(), output);
  }

  // .import_kvpb.WriteBatch batch = 2;
  if (has_batch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_batch(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.WriteEngineRequest)
}

::google::protobuf::uint8* WriteEngineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.WriteEngineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_kvpb.WriteHead head = 1;
  if (has_head()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_head(), deterministic, target);
  }

  // .import_kvpb.WriteBatch batch = 2;
  if (has_batch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_batch(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.WriteEngineRequest)
  return target;
}

size_t WriteEngineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.WriteEngineRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (chunk_case()) {
    // .import_kvpb.WriteHead head = 1;
    case kHead: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *chunk_.head_);
      break;
    }
    // .import_kvpb.WriteBatch batch = 2;
    case kBatch: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *chunk_.batch_);
      break;
    }
    case CHUNK_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteEngineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.WriteEngineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteEngineRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteEngineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.WriteEngineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.WriteEngineRequest)
    MergeFrom(*source);
  }
}

void WriteEngineRequest::MergeFrom(const WriteEngineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.WriteEngineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.chunk_case()) {
    case kHead: {
      mutable_head()->::import_kvpb::WriteHead::MergeFrom(from.head());
      break;
    }
    case kBatch: {
      mutable_batch()->::import_kvpb::WriteBatch::MergeFrom(from.batch());
      break;
    }
    case CHUNK_NOT_SET: {
      break;
    }
  }
}

void WriteEngineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.WriteEngineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteEngineRequest::CopyFrom(const WriteEngineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.WriteEngineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteEngineRequest::IsInitialized() const {
  return true;
}

void WriteEngineRequest::Swap(WriteEngineRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteEngineRequest::InternalSwap(WriteEngineRequest* other) {
  using std::swap;
  swap(chunk_, other->chunk_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WriteEngineRequest::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WriteEngineResponse::InitAsDefaultInstance() {
  ::import_kvpb::_WriteEngineResponse_default_instance_._instance.get_mutable()->error_ = const_cast< ::import_kvpb::Error*>(
      ::import_kvpb::Error::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteEngineResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteEngineResponse::WriteEngineResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fkvpb_2eproto::scc_info_WriteEngineResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.WriteEngineResponse)
}
WriteEngineResponse::WriteEngineResponse(const WriteEngineResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::import_kvpb::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:import_kvpb.WriteEngineResponse)
}

void WriteEngineResponse::SharedCtor() {
  error_ = NULL;
}

WriteEngineResponse::~WriteEngineResponse() {
  // @@protoc_insertion_point(destructor:import_kvpb.WriteEngineResponse)
  SharedDtor();
}

void WriteEngineResponse::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
}

void WriteEngineResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WriteEngineResponse::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteEngineResponse& WriteEngineResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fkvpb_2eproto::scc_info_WriteEngineResponse.base);
  return *internal_default_instance();
}


void WriteEngineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.WriteEngineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool WriteEngineResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.WriteEngineResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .import_kvpb.Error error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.WriteEngineResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.WriteEngineResponse)
  return false;
#undef DO_
}

void WriteEngineResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.WriteEngineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_kvpb.Error error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.WriteEngineResponse)
}

::google::protobuf::uint8* WriteEngineResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.WriteEngineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_kvpb.Error error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_error(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.WriteEngineResponse)
  return target;
}

size_t WriteEngineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.WriteEngineResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .import_kvpb.Error error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteEngineResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.WriteEngineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteEngineResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteEngineResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.WriteEngineResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.WriteEngineResponse)
    MergeFrom(*source);
  }
}

void WriteEngineResponse::MergeFrom(const WriteEngineResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.WriteEngineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    mutable_error()->::import_kvpb::Error::MergeFrom(from.error());
  }
}

void WriteEngineResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.WriteEngineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteEngineResponse::CopyFrom(const WriteEngineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.WriteEngineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteEngineResponse::IsInitialized() const {
  return true;
}

void WriteEngineResponse::Swap(WriteEngineResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteEngineResponse::InternalSwap(WriteEngineResponse* other) {
  using std::swap;
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WriteEngineResponse::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloseEngineRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseEngineRequest::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseEngineRequest::CloseEngineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fkvpb_2eproto::scc_info_CloseEngineRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.CloseEngineRequest)
}
CloseEngineRequest::CloseEngineRequest(const CloseEngineRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:import_kvpb.CloseEngineRequest)
}

void CloseEngineRequest::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CloseEngineRequest::~CloseEngineRequest() {
  // @@protoc_insertion_point(destructor:import_kvpb.CloseEngineRequest)
  SharedDtor();
}

void CloseEngineRequest::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CloseEngineRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CloseEngineRequest::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseEngineRequest& CloseEngineRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fkvpb_2eproto::scc_info_CloseEngineRequest.base);
  return *internal_default_instance();
}


void CloseEngineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.CloseEngineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CloseEngineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.CloseEngineRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.CloseEngineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.CloseEngineRequest)
  return false;
#undef DO_
}

void CloseEngineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.CloseEngineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.CloseEngineRequest)
}

::google::protobuf::uint8* CloseEngineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.CloseEngineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.CloseEngineRequest)
  return target;
}

size_t CloseEngineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.CloseEngineRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloseEngineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.CloseEngineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseEngineRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseEngineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.CloseEngineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.CloseEngineRequest)
    MergeFrom(*source);
  }
}

void CloseEngineRequest::MergeFrom(const CloseEngineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.CloseEngineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void CloseEngineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.CloseEngineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseEngineRequest::CopyFrom(const CloseEngineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.CloseEngineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseEngineRequest::IsInitialized() const {
  return true;
}

void CloseEngineRequest::Swap(CloseEngineRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseEngineRequest::InternalSwap(CloseEngineRequest* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CloseEngineRequest::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloseEngineResponse::InitAsDefaultInstance() {
  ::import_kvpb::_CloseEngineResponse_default_instance_._instance.get_mutable()->error_ = const_cast< ::import_kvpb::Error*>(
      ::import_kvpb::Error::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseEngineResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseEngineResponse::CloseEngineResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fkvpb_2eproto::scc_info_CloseEngineResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.CloseEngineResponse)
}
CloseEngineResponse::CloseEngineResponse(const CloseEngineResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::import_kvpb::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:import_kvpb.CloseEngineResponse)
}

void CloseEngineResponse::SharedCtor() {
  error_ = NULL;
}

CloseEngineResponse::~CloseEngineResponse() {
  // @@protoc_insertion_point(destructor:import_kvpb.CloseEngineResponse)
  SharedDtor();
}

void CloseEngineResponse::SharedDtor() {
  if (this != internal_default_instance()) delete error_;
}

void CloseEngineResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CloseEngineResponse::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseEngineResponse& CloseEngineResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fkvpb_2eproto::scc_info_CloseEngineResponse.base);
  return *internal_default_instance();
}


void CloseEngineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.CloseEngineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool CloseEngineResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.CloseEngineResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .import_kvpb.Error error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.CloseEngineResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.CloseEngineResponse)
  return false;
#undef DO_
}

void CloseEngineResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.CloseEngineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_kvpb.Error error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.CloseEngineResponse)
}

::google::protobuf::uint8* CloseEngineResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.CloseEngineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_kvpb.Error error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_error(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.CloseEngineResponse)
  return target;
}

size_t CloseEngineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.CloseEngineResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .import_kvpb.Error error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloseEngineResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.CloseEngineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseEngineResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseEngineResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.CloseEngineResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.CloseEngineResponse)
    MergeFrom(*source);
  }
}

void CloseEngineResponse::MergeFrom(const CloseEngineResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.CloseEngineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_error()) {
    mutable_error()->::import_kvpb::Error::MergeFrom(from.error());
  }
}

void CloseEngineResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.CloseEngineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseEngineResponse::CopyFrom(const CloseEngineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.CloseEngineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseEngineResponse::IsInitialized() const {
  return true;
}

void CloseEngineResponse::Swap(CloseEngineResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseEngineResponse::InternalSwap(CloseEngineResponse* other) {
  using std::swap;
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CloseEngineResponse::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImportEngineRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImportEngineRequest::kUuidFieldNumber;
const int ImportEngineRequest::kPdAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImportEngineRequest::ImportEngineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fkvpb_2eproto::scc_info_ImportEngineRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.ImportEngineRequest)
}
ImportEngineRequest::ImportEngineRequest(const ImportEngineRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  pd_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pd_addr().size() > 0) {
    pd_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pd_addr_);
  }
  // @@protoc_insertion_point(copy_constructor:import_kvpb.ImportEngineRequest)
}

void ImportEngineRequest::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pd_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ImportEngineRequest::~ImportEngineRequest() {
  // @@protoc_insertion_point(destructor:import_kvpb.ImportEngineRequest)
  SharedDtor();
}

void ImportEngineRequest::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pd_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImportEngineRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImportEngineRequest::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImportEngineRequest& ImportEngineRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fkvpb_2eproto::scc_info_ImportEngineRequest.base);
  return *internal_default_instance();
}


void ImportEngineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.ImportEngineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pd_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ImportEngineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.ImportEngineRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pd_addr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pd_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pd_addr().data(), static_cast<int>(this->pd_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "import_kvpb.ImportEngineRequest.pd_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.ImportEngineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.ImportEngineRequest)
  return false;
#undef DO_
}

void ImportEngineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.ImportEngineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uuid(), output);
  }

  // string pd_addr = 2;
  if (this->pd_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pd_addr().data(), static_cast<int>(this->pd_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "import_kvpb.ImportEngineRequest.pd_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pd_addr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.ImportEngineRequest)
}

::google::protobuf::uint8* ImportEngineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.ImportEngineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uuid(), target);
  }

  // string pd_addr = 2;
  if (this->pd_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pd_addr().data(), static_cast<int>(this->pd_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "import_kvpb.ImportEngineRequest.pd_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pd_addr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.ImportEngineRequest)
  return target;
}

size_t ImportEngineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.ImportEngineRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  // string pd_addr = 2;
  if (this->pd_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pd_addr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImportEngineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.ImportEngineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImportEngineRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImportEngineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.ImportEngineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.ImportEngineRequest)
    MergeFrom(*source);
  }
}

void ImportEngineRequest::MergeFrom(const ImportEngineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.ImportEngineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.pd_addr().size() > 0) {

    pd_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pd_addr_);
  }
}

void ImportEngineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.ImportEngineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImportEngineRequest::CopyFrom(const ImportEngineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.ImportEngineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImportEngineRequest::IsInitialized() const {
  return true;
}

void ImportEngineRequest::Swap(ImportEngineRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImportEngineRequest::InternalSwap(ImportEngineRequest* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pd_addr_.Swap(&other->pd_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImportEngineRequest::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImportEngineResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImportEngineResponse::ImportEngineResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fkvpb_2eproto::scc_info_ImportEngineResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.ImportEngineResponse)
}
ImportEngineResponse::ImportEngineResponse(const ImportEngineResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.ImportEngineResponse)
}

void ImportEngineResponse::SharedCtor() {
}

ImportEngineResponse::~ImportEngineResponse() {
  // @@protoc_insertion_point(destructor:import_kvpb.ImportEngineResponse)
  SharedDtor();
}

void ImportEngineResponse::SharedDtor() {
}

void ImportEngineResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImportEngineResponse::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImportEngineResponse& ImportEngineResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fkvpb_2eproto::scc_info_ImportEngineResponse.base);
  return *internal_default_instance();
}


void ImportEngineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.ImportEngineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ImportEngineResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.ImportEngineResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.ImportEngineResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.ImportEngineResponse)
  return false;
#undef DO_
}

void ImportEngineResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.ImportEngineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.ImportEngineResponse)
}

::google::protobuf::uint8* ImportEngineResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.ImportEngineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.ImportEngineResponse)
  return target;
}

size_t ImportEngineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.ImportEngineResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImportEngineResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.ImportEngineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImportEngineResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImportEngineResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.ImportEngineResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.ImportEngineResponse)
    MergeFrom(*source);
  }
}

void ImportEngineResponse::MergeFrom(const ImportEngineResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.ImportEngineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ImportEngineResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.ImportEngineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImportEngineResponse::CopyFrom(const ImportEngineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.ImportEngineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImportEngineResponse::IsInitialized() const {
  return true;
}

void ImportEngineResponse::Swap(ImportEngineResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImportEngineResponse::InternalSwap(ImportEngineResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImportEngineResponse::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CleanupEngineRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CleanupEngineRequest::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CleanupEngineRequest::CleanupEngineRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fkvpb_2eproto::scc_info_CleanupEngineRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.CleanupEngineRequest)
}
CleanupEngineRequest::CleanupEngineRequest(const CleanupEngineRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:import_kvpb.CleanupEngineRequest)
}

void CleanupEngineRequest::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CleanupEngineRequest::~CleanupEngineRequest() {
  // @@protoc_insertion_point(destructor:import_kvpb.CleanupEngineRequest)
  SharedDtor();
}

void CleanupEngineRequest::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CleanupEngineRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CleanupEngineRequest::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CleanupEngineRequest& CleanupEngineRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fkvpb_2eproto::scc_info_CleanupEngineRequest.base);
  return *internal_default_instance();
}


void CleanupEngineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.CleanupEngineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CleanupEngineRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.CleanupEngineRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.CleanupEngineRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.CleanupEngineRequest)
  return false;
#undef DO_
}

void CleanupEngineRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.CleanupEngineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.CleanupEngineRequest)
}

::google::protobuf::uint8* CleanupEngineRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.CleanupEngineRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.CleanupEngineRequest)
  return target;
}

size_t CleanupEngineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.CleanupEngineRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CleanupEngineRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.CleanupEngineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CleanupEngineRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CleanupEngineRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.CleanupEngineRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.CleanupEngineRequest)
    MergeFrom(*source);
  }
}

void CleanupEngineRequest::MergeFrom(const CleanupEngineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.CleanupEngineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void CleanupEngineRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.CleanupEngineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CleanupEngineRequest::CopyFrom(const CleanupEngineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.CleanupEngineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CleanupEngineRequest::IsInitialized() const {
  return true;
}

void CleanupEngineRequest::Swap(CleanupEngineRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CleanupEngineRequest::InternalSwap(CleanupEngineRequest* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CleanupEngineRequest::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CleanupEngineResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CleanupEngineResponse::CleanupEngineResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fkvpb_2eproto::scc_info_CleanupEngineResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.CleanupEngineResponse)
}
CleanupEngineResponse::CleanupEngineResponse(const CleanupEngineResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.CleanupEngineResponse)
}

void CleanupEngineResponse::SharedCtor() {
}

CleanupEngineResponse::~CleanupEngineResponse() {
  // @@protoc_insertion_point(destructor:import_kvpb.CleanupEngineResponse)
  SharedDtor();
}

void CleanupEngineResponse::SharedDtor() {
}

void CleanupEngineResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CleanupEngineResponse::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CleanupEngineResponse& CleanupEngineResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fkvpb_2eproto::scc_info_CleanupEngineResponse.base);
  return *internal_default_instance();
}


void CleanupEngineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.CleanupEngineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CleanupEngineResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.CleanupEngineResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.CleanupEngineResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.CleanupEngineResponse)
  return false;
#undef DO_
}

void CleanupEngineResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.CleanupEngineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.CleanupEngineResponse)
}

::google::protobuf::uint8* CleanupEngineResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.CleanupEngineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.CleanupEngineResponse)
  return target;
}

size_t CleanupEngineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.CleanupEngineResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CleanupEngineResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.CleanupEngineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CleanupEngineResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CleanupEngineResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.CleanupEngineResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.CleanupEngineResponse)
    MergeFrom(*source);
  }
}

void CleanupEngineResponse::MergeFrom(const CleanupEngineResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.CleanupEngineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CleanupEngineResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.CleanupEngineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CleanupEngineResponse::CopyFrom(const CleanupEngineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.CleanupEngineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CleanupEngineResponse::IsInitialized() const {
  return true;
}

void CleanupEngineResponse::Swap(CleanupEngineResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CleanupEngineResponse::InternalSwap(CleanupEngineResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CleanupEngineResponse::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompactClusterRequest::InitAsDefaultInstance() {
  ::import_kvpb::_CompactClusterRequest_default_instance_._instance.get_mutable()->request_ = const_cast< ::import_sstpb::CompactRequest*>(
      ::import_sstpb::CompactRequest::internal_default_instance());
}
void CompactClusterRequest::clear_request() {
  if (GetArenaNoVirtual() == NULL && request_ != NULL) {
    delete request_;
  }
  request_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompactClusterRequest::kPdAddrFieldNumber;
const int CompactClusterRequest::kRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompactClusterRequest::CompactClusterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fkvpb_2eproto::scc_info_CompactClusterRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.CompactClusterRequest)
}
CompactClusterRequest::CompactClusterRequest(const CompactClusterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pd_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pd_addr().size() > 0) {
    pd_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pd_addr_);
  }
  if (from.has_request()) {
    request_ = new ::import_sstpb::CompactRequest(*from.request_);
  } else {
    request_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:import_kvpb.CompactClusterRequest)
}

void CompactClusterRequest::SharedCtor() {
  pd_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_ = NULL;
}

CompactClusterRequest::~CompactClusterRequest() {
  // @@protoc_insertion_point(destructor:import_kvpb.CompactClusterRequest)
  SharedDtor();
}

void CompactClusterRequest::SharedDtor() {
  pd_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete request_;
}

void CompactClusterRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CompactClusterRequest::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompactClusterRequest& CompactClusterRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fkvpb_2eproto::scc_info_CompactClusterRequest.base);
  return *internal_default_instance();
}


void CompactClusterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.CompactClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pd_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && request_ != NULL) {
    delete request_;
  }
  request_ = NULL;
  _internal_metadata_.Clear();
}

bool CompactClusterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.CompactClusterRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string pd_addr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pd_addr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pd_addr().data(), static_cast<int>(this->pd_addr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "import_kvpb.CompactClusterRequest.pd_addr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .import_sstpb.CompactRequest request = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.CompactClusterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.CompactClusterRequest)
  return false;
#undef DO_
}

void CompactClusterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.CompactClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pd_addr = 1;
  if (this->pd_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pd_addr().data(), static_cast<int>(this->pd_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "import_kvpb.CompactClusterRequest.pd_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pd_addr(), output);
  }

  // .import_sstpb.CompactRequest request = 2;
  if (this->has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_request(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.CompactClusterRequest)
}

::google::protobuf::uint8* CompactClusterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.CompactClusterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string pd_addr = 1;
  if (this->pd_addr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pd_addr().data(), static_cast<int>(this->pd_addr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "import_kvpb.CompactClusterRequest.pd_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pd_addr(), target);
  }

  // .import_sstpb.CompactRequest request = 2;
  if (this->has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_request(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.CompactClusterRequest)
  return target;
}

size_t CompactClusterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.CompactClusterRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string pd_addr = 1;
  if (this->pd_addr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pd_addr());
  }

  // .import_sstpb.CompactRequest request = 2;
  if (this->has_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *request_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompactClusterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.CompactClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CompactClusterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompactClusterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.CompactClusterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.CompactClusterRequest)
    MergeFrom(*source);
  }
}

void CompactClusterRequest::MergeFrom(const CompactClusterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.CompactClusterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pd_addr().size() > 0) {

    pd_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pd_addr_);
  }
  if (from.has_request()) {
    mutable_request()->::import_sstpb::CompactRequest::MergeFrom(from.request());
  }
}

void CompactClusterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.CompactClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompactClusterRequest::CopyFrom(const CompactClusterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.CompactClusterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompactClusterRequest::IsInitialized() const {
  return true;
}

void CompactClusterRequest::Swap(CompactClusterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompactClusterRequest::InternalSwap(CompactClusterRequest* other) {
  using std::swap;
  pd_addr_.Swap(&other->pd_addr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(request_, other->request_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CompactClusterRequest::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompactClusterResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompactClusterResponse::CompactClusterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fkvpb_2eproto::scc_info_CompactClusterResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.CompactClusterResponse)
}
CompactClusterResponse::CompactClusterResponse(const CompactClusterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:import_kvpb.CompactClusterResponse)
}

void CompactClusterResponse::SharedCtor() {
}

CompactClusterResponse::~CompactClusterResponse() {
  // @@protoc_insertion_point(destructor:import_kvpb.CompactClusterResponse)
  SharedDtor();
}

void CompactClusterResponse::SharedDtor() {
}

void CompactClusterResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CompactClusterResponse::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompactClusterResponse& CompactClusterResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fkvpb_2eproto::scc_info_CompactClusterResponse.base);
  return *internal_default_instance();
}


void CompactClusterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.CompactClusterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CompactClusterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.CompactClusterResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.CompactClusterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.CompactClusterResponse)
  return false;
#undef DO_
}

void CompactClusterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.CompactClusterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.CompactClusterResponse)
}

::google::protobuf::uint8* CompactClusterResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.CompactClusterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.CompactClusterResponse)
  return target;
}

size_t CompactClusterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.CompactClusterResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompactClusterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.CompactClusterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CompactClusterResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompactClusterResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.CompactClusterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.CompactClusterResponse)
    MergeFrom(*source);
  }
}

void CompactClusterResponse::MergeFrom(const CompactClusterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.CompactClusterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CompactClusterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.CompactClusterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompactClusterResponse::CopyFrom(const CompactClusterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.CompactClusterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompactClusterResponse::IsInitialized() const {
  return true;
}

void CompactClusterResponse::Swap(CompactClusterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompactClusterResponse::InternalSwap(CompactClusterResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CompactClusterResponse::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Error_EngineNotFound::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error_EngineNotFound::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error_EngineNotFound::Error_EngineNotFound()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fkvpb_2eproto::scc_info_Error_EngineNotFound.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.Error.EngineNotFound)
}
Error_EngineNotFound::Error_EngineNotFound(const Error_EngineNotFound& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:import_kvpb.Error.EngineNotFound)
}

void Error_EngineNotFound::SharedCtor() {
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Error_EngineNotFound::~Error_EngineNotFound() {
  // @@protoc_insertion_point(destructor:import_kvpb.Error.EngineNotFound)
  SharedDtor();
}

void Error_EngineNotFound::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Error_EngineNotFound::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Error_EngineNotFound::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Error_EngineNotFound& Error_EngineNotFound::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fkvpb_2eproto::scc_info_Error_EngineNotFound.base);
  return *internal_default_instance();
}


void Error_EngineNotFound::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.Error.EngineNotFound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Error_EngineNotFound::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.Error.EngineNotFound)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes uuid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.Error.EngineNotFound)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.Error.EngineNotFound)
  return false;
#undef DO_
}

void Error_EngineNotFound::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.Error.EngineNotFound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.Error.EngineNotFound)
}

::google::protobuf::uint8* Error_EngineNotFound::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.Error.EngineNotFound)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.Error.EngineNotFound)
  return target;
}

size_t Error_EngineNotFound::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.Error.EngineNotFound)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Error_EngineNotFound::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.Error.EngineNotFound)
  GOOGLE_DCHECK_NE(&from, this);
  const Error_EngineNotFound* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Error_EngineNotFound>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.Error.EngineNotFound)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.Error.EngineNotFound)
    MergeFrom(*source);
  }
}

void Error_EngineNotFound::MergeFrom(const Error_EngineNotFound& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.Error.EngineNotFound)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void Error_EngineNotFound::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.Error.EngineNotFound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error_EngineNotFound::CopyFrom(const Error_EngineNotFound& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.Error.EngineNotFound)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error_EngineNotFound::IsInitialized() const {
  return true;
}

void Error_EngineNotFound::Swap(Error_EngineNotFound* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Error_EngineNotFound::InternalSwap(Error_EngineNotFound* other) {
  using std::swap;
  uuid_.Swap(&other->uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Error_EngineNotFound::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Error::InitAsDefaultInstance() {
  ::import_kvpb::_Error_default_instance_._instance.get_mutable()->engine_not_found_ = const_cast< ::import_kvpb::Error_EngineNotFound*>(
      ::import_kvpb::Error_EngineNotFound::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error::kEngineNotFoundFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error::Error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_import_5fkvpb_2eproto::scc_info_Error.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:import_kvpb.Error)
}
Error::Error(const Error& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_engine_not_found()) {
    engine_not_found_ = new ::import_kvpb::Error_EngineNotFound(*from.engine_not_found_);
  } else {
    engine_not_found_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:import_kvpb.Error)
}

void Error::SharedCtor() {
  engine_not_found_ = NULL;
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:import_kvpb.Error)
  SharedDtor();
}

void Error::SharedDtor() {
  if (this != internal_default_instance()) delete engine_not_found_;
}

void Error::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Error::descriptor() {
  ::protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Error& Error::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_import_5fkvpb_2eproto::scc_info_Error.base);
  return *internal_default_instance();
}


void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:import_kvpb.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && engine_not_found_ != NULL) {
    delete engine_not_found_;
  }
  engine_not_found_ = NULL;
  _internal_metadata_.Clear();
}

bool Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:import_kvpb.Error)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .import_kvpb.Error.EngineNotFound engine_not_found = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_engine_not_found()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:import_kvpb.Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:import_kvpb.Error)
  return false;
#undef DO_
}

void Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:import_kvpb.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_kvpb.Error.EngineNotFound engine_not_found = 1;
  if (this->has_engine_not_found()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_engine_not_found(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:import_kvpb.Error)
}

::google::protobuf::uint8* Error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:import_kvpb.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .import_kvpb.Error.EngineNotFound engine_not_found = 1;
  if (this->has_engine_not_found()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_engine_not_found(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:import_kvpb.Error)
  return target;
}

size_t Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:import_kvpb.Error)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .import_kvpb.Error.EngineNotFound engine_not_found = 1;
  if (this->has_engine_not_found()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *engine_not_found_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:import_kvpb.Error)
  GOOGLE_DCHECK_NE(&from, this);
  const Error* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:import_kvpb.Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:import_kvpb.Error)
    MergeFrom(*source);
  }
}

void Error::MergeFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:import_kvpb.Error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_engine_not_found()) {
    mutable_engine_not_found()->::import_kvpb::Error_EngineNotFound::MergeFrom(from.engine_not_found());
  }
}

void Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:import_kvpb.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:import_kvpb.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error::IsInitialized() const {
  return true;
}

void Error::Swap(Error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Error::InternalSwap(Error* other) {
  using std::swap;
  swap(engine_not_found_, other->engine_not_found_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Error::GetMetadata() const {
  protobuf_import_5fkvpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_import_5fkvpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace import_kvpb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::import_kvpb::SwitchModeRequest* Arena::CreateMaybeMessage< ::import_kvpb::SwitchModeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::import_kvpb::SwitchModeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::import_kvpb::SwitchModeResponse* Arena::CreateMaybeMessage< ::import_kvpb::SwitchModeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::import_kvpb::SwitchModeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::import_kvpb::OpenEngineRequest* Arena::CreateMaybeMessage< ::import_kvpb::OpenEngineRequest >(Arena* arena) {
  return Arena::CreateInternal< ::import_kvpb::OpenEngineRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::import_kvpb::OpenEngineResponse* Arena::CreateMaybeMessage< ::import_kvpb::OpenEngineResponse >(Arena* arena) {
  return Arena::CreateInternal< ::import_kvpb::OpenEngineResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::import_kvpb::WriteHead* Arena::CreateMaybeMessage< ::import_kvpb::WriteHead >(Arena* arena) {
  return Arena::CreateInternal< ::import_kvpb::WriteHead >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::import_kvpb::Mutation* Arena::CreateMaybeMessage< ::import_kvpb::Mutation >(Arena* arena) {
  return Arena::CreateInternal< ::import_kvpb::Mutation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::import_kvpb::WriteBatch* Arena::CreateMaybeMessage< ::import_kvpb::WriteBatch >(Arena* arena) {
  return Arena::CreateInternal< ::import_kvpb::WriteBatch >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::import_kvpb::WriteEngineRequest* Arena::CreateMaybeMessage< ::import_kvpb::WriteEngineRequest >(Arena* arena) {
  return Arena::CreateInternal< ::import_kvpb::WriteEngineRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::import_kvpb::WriteEngineResponse* Arena::CreateMaybeMessage< ::import_kvpb::WriteEngineResponse >(Arena* arena) {
  return Arena::CreateInternal< ::import_kvpb::WriteEngineResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::import_kvpb::CloseEngineRequest* Arena::CreateMaybeMessage< ::import_kvpb::CloseEngineRequest >(Arena* arena) {
  return Arena::CreateInternal< ::import_kvpb::CloseEngineRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::import_kvpb::CloseEngineResponse* Arena::CreateMaybeMessage< ::import_kvpb::CloseEngineResponse >(Arena* arena) {
  return Arena::CreateInternal< ::import_kvpb::CloseEngineResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::import_kvpb::ImportEngineRequest* Arena::CreateMaybeMessage< ::import_kvpb::ImportEngineRequest >(Arena* arena) {
  return Arena::CreateInternal< ::import_kvpb::ImportEngineRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::import_kvpb::ImportEngineResponse* Arena::CreateMaybeMessage< ::import_kvpb::ImportEngineResponse >(Arena* arena) {
  return Arena::CreateInternal< ::import_kvpb::ImportEngineResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::import_kvpb::CleanupEngineRequest* Arena::CreateMaybeMessage< ::import_kvpb::CleanupEngineRequest >(Arena* arena) {
  return Arena::CreateInternal< ::import_kvpb::CleanupEngineRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::import_kvpb::CleanupEngineResponse* Arena::CreateMaybeMessage< ::import_kvpb::CleanupEngineResponse >(Arena* arena) {
  return Arena::CreateInternal< ::import_kvpb::CleanupEngineResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::import_kvpb::CompactClusterRequest* Arena::CreateMaybeMessage< ::import_kvpb::CompactClusterRequest >(Arena* arena) {
  return Arena::CreateInternal< ::import_kvpb::CompactClusterRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::import_kvpb::CompactClusterResponse* Arena::CreateMaybeMessage< ::import_kvpb::CompactClusterResponse >(Arena* arena) {
  return Arena::CreateInternal< ::import_kvpb::CompactClusterResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::import_kvpb::Error_EngineNotFound* Arena::CreateMaybeMessage< ::import_kvpb::Error_EngineNotFound >(Arena* arena) {
  return Arena::CreateInternal< ::import_kvpb::Error_EngineNotFound >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::import_kvpb::Error* Arena::CreateMaybeMessage< ::import_kvpb::Error >(Arena* arena) {
  return Arena::CreateInternal< ::import_kvpb::Error >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
