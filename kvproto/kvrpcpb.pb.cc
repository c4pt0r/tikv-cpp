// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kvrpcpb.proto

#include "kvrpcpb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_errorpb_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_errorpb_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_Error;
}  // namespace protobuf_errorpb_2eproto
namespace protobuf_kvrpcpb_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kvrpcpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HandleTime;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kvrpcpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_KeyRange;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kvrpcpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LockInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kvrpcpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Mutation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kvrpcpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MvccLock;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kvrpcpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MvccValue;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kvrpcpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MvccWrite;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kvrpcpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ScanInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kvrpcpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TxnInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kvrpcpb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_WriteConflict;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kvrpcpb_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_KvPair;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kvrpcpb_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ScanDetail;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kvrpcpb_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Context;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kvrpcpb_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_KeyError;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_kvrpcpb_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_MvccInfo;
}  // namespace protobuf_kvrpcpb_2eproto
namespace protobuf_metapb_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metapb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Peer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metapb_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RegionEpoch;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_metapb_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Region;
}  // namespace protobuf_metapb_2eproto
namespace kvrpcpb {
class LockInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LockInfo>
      _instance;
} _LockInfo_default_instance_;
class KeyErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyError>
      _instance;
} _KeyError_default_instance_;
class WriteConflictDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WriteConflict>
      _instance;
} _WriteConflict_default_instance_;
class ContextDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Context>
      _instance;
} _Context_default_instance_;
class HandleTimeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HandleTime>
      _instance;
} _HandleTime_default_instance_;
class ScanInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScanInfo>
      _instance;
} _ScanInfo_default_instance_;
class ScanDetailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScanDetail>
      _instance;
} _ScanDetail_default_instance_;
class ExecDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecDetails>
      _instance;
} _ExecDetails_default_instance_;
class GetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetRequest>
      _instance;
} _GetRequest_default_instance_;
class GetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetResponse>
      _instance;
} _GetResponse_default_instance_;
class ScanRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScanRequest>
      _instance;
} _ScanRequest_default_instance_;
class KvPairDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KvPair>
      _instance;
} _KvPair_default_instance_;
class ScanResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScanResponse>
      _instance;
} _ScanResponse_default_instance_;
class MutationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Mutation>
      _instance;
} _Mutation_default_instance_;
class PrewriteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrewriteRequest>
      _instance;
} _PrewriteRequest_default_instance_;
class PrewriteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrewriteResponse>
      _instance;
} _PrewriteResponse_default_instance_;
class CommitRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommitRequest>
      _instance;
} _CommitRequest_default_instance_;
class CommitResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommitResponse>
      _instance;
} _CommitResponse_default_instance_;
class ImportRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImportRequest>
      _instance;
} _ImportRequest_default_instance_;
class ImportResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImportResponse>
      _instance;
} _ImportResponse_default_instance_;
class BatchRollbackRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchRollbackRequest>
      _instance;
} _BatchRollbackRequest_default_instance_;
class BatchRollbackResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchRollbackResponse>
      _instance;
} _BatchRollbackResponse_default_instance_;
class CleanupRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CleanupRequest>
      _instance;
} _CleanupRequest_default_instance_;
class CleanupResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CleanupResponse>
      _instance;
} _CleanupResponse_default_instance_;
class BatchGetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchGetRequest>
      _instance;
} _BatchGetRequest_default_instance_;
class BatchGetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BatchGetResponse>
      _instance;
} _BatchGetResponse_default_instance_;
class ScanLockRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScanLockRequest>
      _instance;
} _ScanLockRequest_default_instance_;
class ScanLockResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScanLockResponse>
      _instance;
} _ScanLockResponse_default_instance_;
class TxnInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TxnInfo>
      _instance;
} _TxnInfo_default_instance_;
class ResolveLockRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResolveLockRequest>
      _instance;
} _ResolveLockRequest_default_instance_;
class ResolveLockResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResolveLockResponse>
      _instance;
} _ResolveLockResponse_default_instance_;
class GCRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GCRequest>
      _instance;
} _GCRequest_default_instance_;
class GCResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GCResponse>
      _instance;
} _GCResponse_default_instance_;
class RawGetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RawGetRequest>
      _instance;
} _RawGetRequest_default_instance_;
class RawGetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RawGetResponse>
      _instance;
} _RawGetResponse_default_instance_;
class RawPutRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RawPutRequest>
      _instance;
} _RawPutRequest_default_instance_;
class RawPutResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RawPutResponse>
      _instance;
} _RawPutResponse_default_instance_;
class RawBatchPutRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RawBatchPutRequest>
      _instance;
} _RawBatchPutRequest_default_instance_;
class RawBatchPutResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RawBatchPutResponse>
      _instance;
} _RawBatchPutResponse_default_instance_;
class RawBatchGetRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RawBatchGetRequest>
      _instance;
} _RawBatchGetRequest_default_instance_;
class RawBatchGetResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RawBatchGetResponse>
      _instance;
} _RawBatchGetResponse_default_instance_;
class RawDeleteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RawDeleteRequest>
      _instance;
} _RawDeleteRequest_default_instance_;
class RawDeleteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RawDeleteResponse>
      _instance;
} _RawDeleteResponse_default_instance_;
class RawBatchDeleteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RawBatchDeleteRequest>
      _instance;
} _RawBatchDeleteRequest_default_instance_;
class RawBatchDeleteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RawBatchDeleteResponse>
      _instance;
} _RawBatchDeleteResponse_default_instance_;
class DeleteRangeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteRangeRequest>
      _instance;
} _DeleteRangeRequest_default_instance_;
class DeleteRangeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteRangeResponse>
      _instance;
} _DeleteRangeResponse_default_instance_;
class RawDeleteRangeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RawDeleteRangeRequest>
      _instance;
} _RawDeleteRangeRequest_default_instance_;
class RawDeleteRangeResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RawDeleteRangeResponse>
      _instance;
} _RawDeleteRangeResponse_default_instance_;
class RawScanRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RawScanRequest>
      _instance;
} _RawScanRequest_default_instance_;
class RawScanResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RawScanResponse>
      _instance;
} _RawScanResponse_default_instance_;
class KeyRangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyRange>
      _instance;
} _KeyRange_default_instance_;
class RawBatchScanRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RawBatchScanRequest>
      _instance;
} _RawBatchScanRequest_default_instance_;
class RawBatchScanResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RawBatchScanResponse>
      _instance;
} _RawBatchScanResponse_default_instance_;
class MvccWriteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MvccWrite>
      _instance;
} _MvccWrite_default_instance_;
class MvccValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MvccValue>
      _instance;
} _MvccValue_default_instance_;
class MvccLockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MvccLock>
      _instance;
} _MvccLock_default_instance_;
class MvccInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MvccInfo>
      _instance;
} _MvccInfo_default_instance_;
class MvccGetByKeyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MvccGetByKeyRequest>
      _instance;
} _MvccGetByKeyRequest_default_instance_;
class MvccGetByKeyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MvccGetByKeyResponse>
      _instance;
} _MvccGetByKeyResponse_default_instance_;
class MvccGetByStartTsRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MvccGetByStartTsRequest>
      _instance;
} _MvccGetByStartTsRequest_default_instance_;
class MvccGetByStartTsResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MvccGetByStartTsResponse>
      _instance;
} _MvccGetByStartTsResponse_default_instance_;
class SplitRegionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SplitRegionRequest>
      _instance;
} _SplitRegionRequest_default_instance_;
class SplitRegionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SplitRegionResponse>
      _instance;
} _SplitRegionResponse_default_instance_;
}  // namespace kvrpcpb
namespace protobuf_kvrpcpb_2eproto {
static void InitDefaultsLockInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_LockInfo_default_instance_;
    new (ptr) ::kvrpcpb::LockInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::LockInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LockInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLockInfo}, {}};

static void InitDefaultsKeyError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_KeyError_default_instance_;
    new (ptr) ::kvrpcpb::KeyError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::KeyError::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_KeyError =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsKeyError}, {
      &protobuf_kvrpcpb_2eproto::scc_info_LockInfo.base,
      &protobuf_kvrpcpb_2eproto::scc_info_WriteConflict.base,}};

static void InitDefaultsWriteConflict() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_WriteConflict_default_instance_;
    new (ptr) ::kvrpcpb::WriteConflict();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::WriteConflict::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_WriteConflict =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsWriteConflict}, {}};

static void InitDefaultsContext() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_Context_default_instance_;
    new (ptr) ::kvrpcpb::Context();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::Context::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Context =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsContext}, {
      &protobuf_metapb_2eproto::scc_info_RegionEpoch.base,
      &protobuf_metapb_2eproto::scc_info_Peer.base,}};

static void InitDefaultsHandleTime() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_HandleTime_default_instance_;
    new (ptr) ::kvrpcpb::HandleTime();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::HandleTime::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HandleTime =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHandleTime}, {}};

static void InitDefaultsScanInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_ScanInfo_default_instance_;
    new (ptr) ::kvrpcpb::ScanInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::ScanInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScanInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScanInfo}, {}};

static void InitDefaultsScanDetail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_ScanDetail_default_instance_;
    new (ptr) ::kvrpcpb::ScanDetail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::ScanDetail::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ScanDetail =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsScanDetail}, {
      &protobuf_kvrpcpb_2eproto::scc_info_ScanInfo.base,}};

static void InitDefaultsExecDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_ExecDetails_default_instance_;
    new (ptr) ::kvrpcpb::ExecDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::ExecDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ExecDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsExecDetails}, {
      &protobuf_kvrpcpb_2eproto::scc_info_HandleTime.base,
      &protobuf_kvrpcpb_2eproto::scc_info_ScanDetail.base,}};

static void InitDefaultsGetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_GetRequest_default_instance_;
    new (ptr) ::kvrpcpb::GetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::GetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GetRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGetRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,}};

static void InitDefaultsGetResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_GetResponse_default_instance_;
    new (ptr) ::kvrpcpb::GetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::GetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GetResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGetResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,
      &protobuf_kvrpcpb_2eproto::scc_info_KeyError.base,}};

static void InitDefaultsScanRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_ScanRequest_default_instance_;
    new (ptr) ::kvrpcpb::ScanRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::ScanRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ScanRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsScanRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,}};

static void InitDefaultsKvPair() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_KvPair_default_instance_;
    new (ptr) ::kvrpcpb::KvPair();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::KvPair::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_KvPair =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsKvPair}, {
      &protobuf_kvrpcpb_2eproto::scc_info_KeyError.base,}};

static void InitDefaultsScanResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_ScanResponse_default_instance_;
    new (ptr) ::kvrpcpb::ScanResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::ScanResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ScanResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsScanResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,
      &protobuf_kvrpcpb_2eproto::scc_info_KvPair.base,}};

static void InitDefaultsMutation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_Mutation_default_instance_;
    new (ptr) ::kvrpcpb::Mutation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::Mutation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Mutation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMutation}, {}};

static void InitDefaultsPrewriteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_PrewriteRequest_default_instance_;
    new (ptr) ::kvrpcpb::PrewriteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::PrewriteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PrewriteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPrewriteRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,
      &protobuf_kvrpcpb_2eproto::scc_info_Mutation.base,}};

static void InitDefaultsPrewriteResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_PrewriteResponse_default_instance_;
    new (ptr) ::kvrpcpb::PrewriteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::PrewriteResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PrewriteResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPrewriteResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,
      &protobuf_kvrpcpb_2eproto::scc_info_KeyError.base,}};

static void InitDefaultsCommitRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_CommitRequest_default_instance_;
    new (ptr) ::kvrpcpb::CommitRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::CommitRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CommitRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCommitRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,}};

static void InitDefaultsCommitResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_CommitResponse_default_instance_;
    new (ptr) ::kvrpcpb::CommitResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::CommitResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CommitResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCommitResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,
      &protobuf_kvrpcpb_2eproto::scc_info_KeyError.base,}};

static void InitDefaultsImportRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_ImportRequest_default_instance_;
    new (ptr) ::kvrpcpb::ImportRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::ImportRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImportRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImportRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Mutation.base,}};

static void InitDefaultsImportResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_ImportResponse_default_instance_;
    new (ptr) ::kvrpcpb::ImportResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::ImportResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImportResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImportResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,}};

static void InitDefaultsBatchRollbackRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_BatchRollbackRequest_default_instance_;
    new (ptr) ::kvrpcpb::BatchRollbackRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::BatchRollbackRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BatchRollbackRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBatchRollbackRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,}};

static void InitDefaultsBatchRollbackResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_BatchRollbackResponse_default_instance_;
    new (ptr) ::kvrpcpb::BatchRollbackResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::BatchRollbackResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BatchRollbackResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBatchRollbackResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,
      &protobuf_kvrpcpb_2eproto::scc_info_KeyError.base,}};

static void InitDefaultsCleanupRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_CleanupRequest_default_instance_;
    new (ptr) ::kvrpcpb::CleanupRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::CleanupRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CleanupRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCleanupRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,}};

static void InitDefaultsCleanupResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_CleanupResponse_default_instance_;
    new (ptr) ::kvrpcpb::CleanupResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::CleanupResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CleanupResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCleanupResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,
      &protobuf_kvrpcpb_2eproto::scc_info_KeyError.base,}};

static void InitDefaultsBatchGetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_BatchGetRequest_default_instance_;
    new (ptr) ::kvrpcpb::BatchGetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::BatchGetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BatchGetRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBatchGetRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,}};

static void InitDefaultsBatchGetResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_BatchGetResponse_default_instance_;
    new (ptr) ::kvrpcpb::BatchGetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::BatchGetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BatchGetResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBatchGetResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,
      &protobuf_kvrpcpb_2eproto::scc_info_KvPair.base,}};

static void InitDefaultsScanLockRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_ScanLockRequest_default_instance_;
    new (ptr) ::kvrpcpb::ScanLockRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::ScanLockRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ScanLockRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsScanLockRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,}};

static void InitDefaultsScanLockResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_ScanLockResponse_default_instance_;
    new (ptr) ::kvrpcpb::ScanLockResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::ScanLockResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ScanLockResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsScanLockResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,
      &protobuf_kvrpcpb_2eproto::scc_info_KeyError.base,
      &protobuf_kvrpcpb_2eproto::scc_info_LockInfo.base,}};

static void InitDefaultsTxnInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_TxnInfo_default_instance_;
    new (ptr) ::kvrpcpb::TxnInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::TxnInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TxnInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTxnInfo}, {}};

static void InitDefaultsResolveLockRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_ResolveLockRequest_default_instance_;
    new (ptr) ::kvrpcpb::ResolveLockRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::ResolveLockRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ResolveLockRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsResolveLockRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,
      &protobuf_kvrpcpb_2eproto::scc_info_TxnInfo.base,}};

static void InitDefaultsResolveLockResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_ResolveLockResponse_default_instance_;
    new (ptr) ::kvrpcpb::ResolveLockResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::ResolveLockResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ResolveLockResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsResolveLockResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,
      &protobuf_kvrpcpb_2eproto::scc_info_KeyError.base,}};

static void InitDefaultsGCRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_GCRequest_default_instance_;
    new (ptr) ::kvrpcpb::GCRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::GCRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GCRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGCRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,}};

static void InitDefaultsGCResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_GCResponse_default_instance_;
    new (ptr) ::kvrpcpb::GCResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::GCResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GCResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGCResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,
      &protobuf_kvrpcpb_2eproto::scc_info_KeyError.base,}};

static void InitDefaultsRawGetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_RawGetRequest_default_instance_;
    new (ptr) ::kvrpcpb::RawGetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::RawGetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RawGetRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRawGetRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,}};

static void InitDefaultsRawGetResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_RawGetResponse_default_instance_;
    new (ptr) ::kvrpcpb::RawGetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::RawGetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RawGetResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRawGetResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,}};

static void InitDefaultsRawPutRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_RawPutRequest_default_instance_;
    new (ptr) ::kvrpcpb::RawPutRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::RawPutRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RawPutRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRawPutRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,}};

static void InitDefaultsRawPutResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_RawPutResponse_default_instance_;
    new (ptr) ::kvrpcpb::RawPutResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::RawPutResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RawPutResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRawPutResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,}};

static void InitDefaultsRawBatchPutRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_RawBatchPutRequest_default_instance_;
    new (ptr) ::kvrpcpb::RawBatchPutRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::RawBatchPutRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RawBatchPutRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRawBatchPutRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,
      &protobuf_kvrpcpb_2eproto::scc_info_KvPair.base,}};

static void InitDefaultsRawBatchPutResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_RawBatchPutResponse_default_instance_;
    new (ptr) ::kvrpcpb::RawBatchPutResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::RawBatchPutResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RawBatchPutResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRawBatchPutResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,}};

static void InitDefaultsRawBatchGetRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_RawBatchGetRequest_default_instance_;
    new (ptr) ::kvrpcpb::RawBatchGetRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::RawBatchGetRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RawBatchGetRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRawBatchGetRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,}};

static void InitDefaultsRawBatchGetResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_RawBatchGetResponse_default_instance_;
    new (ptr) ::kvrpcpb::RawBatchGetResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::RawBatchGetResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RawBatchGetResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRawBatchGetResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,
      &protobuf_kvrpcpb_2eproto::scc_info_KvPair.base,}};

static void InitDefaultsRawDeleteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_RawDeleteRequest_default_instance_;
    new (ptr) ::kvrpcpb::RawDeleteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::RawDeleteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RawDeleteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRawDeleteRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,}};

static void InitDefaultsRawDeleteResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_RawDeleteResponse_default_instance_;
    new (ptr) ::kvrpcpb::RawDeleteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::RawDeleteResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RawDeleteResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRawDeleteResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,}};

static void InitDefaultsRawBatchDeleteRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_RawBatchDeleteRequest_default_instance_;
    new (ptr) ::kvrpcpb::RawBatchDeleteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::RawBatchDeleteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RawBatchDeleteRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRawBatchDeleteRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,}};

static void InitDefaultsRawBatchDeleteResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_RawBatchDeleteResponse_default_instance_;
    new (ptr) ::kvrpcpb::RawBatchDeleteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::RawBatchDeleteResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RawBatchDeleteResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRawBatchDeleteResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,}};

static void InitDefaultsDeleteRangeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_DeleteRangeRequest_default_instance_;
    new (ptr) ::kvrpcpb::DeleteRangeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::DeleteRangeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeleteRangeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeleteRangeRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,}};

static void InitDefaultsDeleteRangeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_DeleteRangeResponse_default_instance_;
    new (ptr) ::kvrpcpb::DeleteRangeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::DeleteRangeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DeleteRangeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDeleteRangeResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,}};

static void InitDefaultsRawDeleteRangeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_RawDeleteRangeRequest_default_instance_;
    new (ptr) ::kvrpcpb::RawDeleteRangeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::RawDeleteRangeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RawDeleteRangeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRawDeleteRangeRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,}};

static void InitDefaultsRawDeleteRangeResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_RawDeleteRangeResponse_default_instance_;
    new (ptr) ::kvrpcpb::RawDeleteRangeResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::RawDeleteRangeResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RawDeleteRangeResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRawDeleteRangeResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,}};

static void InitDefaultsRawScanRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_RawScanRequest_default_instance_;
    new (ptr) ::kvrpcpb::RawScanRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::RawScanRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RawScanRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRawScanRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,}};

static void InitDefaultsRawScanResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_RawScanResponse_default_instance_;
    new (ptr) ::kvrpcpb::RawScanResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::RawScanResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RawScanResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRawScanResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,
      &protobuf_kvrpcpb_2eproto::scc_info_KvPair.base,}};

static void InitDefaultsKeyRange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_KeyRange_default_instance_;
    new (ptr) ::kvrpcpb::KeyRange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::KeyRange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_KeyRange =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsKeyRange}, {}};

static void InitDefaultsRawBatchScanRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_RawBatchScanRequest_default_instance_;
    new (ptr) ::kvrpcpb::RawBatchScanRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::RawBatchScanRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RawBatchScanRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRawBatchScanRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,
      &protobuf_kvrpcpb_2eproto::scc_info_KeyRange.base,}};

static void InitDefaultsRawBatchScanResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_RawBatchScanResponse_default_instance_;
    new (ptr) ::kvrpcpb::RawBatchScanResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::RawBatchScanResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RawBatchScanResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRawBatchScanResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,
      &protobuf_kvrpcpb_2eproto::scc_info_KvPair.base,}};

static void InitDefaultsMvccWrite() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_MvccWrite_default_instance_;
    new (ptr) ::kvrpcpb::MvccWrite();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::MvccWrite::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MvccWrite =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMvccWrite}, {}};

static void InitDefaultsMvccValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_MvccValue_default_instance_;
    new (ptr) ::kvrpcpb::MvccValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::MvccValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MvccValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMvccValue}, {}};

static void InitDefaultsMvccLock() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_MvccLock_default_instance_;
    new (ptr) ::kvrpcpb::MvccLock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::MvccLock::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MvccLock =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMvccLock}, {}};

static void InitDefaultsMvccInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_MvccInfo_default_instance_;
    new (ptr) ::kvrpcpb::MvccInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::MvccInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_MvccInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsMvccInfo}, {
      &protobuf_kvrpcpb_2eproto::scc_info_MvccLock.base,
      &protobuf_kvrpcpb_2eproto::scc_info_MvccWrite.base,
      &protobuf_kvrpcpb_2eproto::scc_info_MvccValue.base,}};

static void InitDefaultsMvccGetByKeyRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_MvccGetByKeyRequest_default_instance_;
    new (ptr) ::kvrpcpb::MvccGetByKeyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::MvccGetByKeyRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MvccGetByKeyRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMvccGetByKeyRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,}};

static void InitDefaultsMvccGetByKeyResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_MvccGetByKeyResponse_default_instance_;
    new (ptr) ::kvrpcpb::MvccGetByKeyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::MvccGetByKeyResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MvccGetByKeyResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMvccGetByKeyResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,
      &protobuf_kvrpcpb_2eproto::scc_info_MvccInfo.base,}};

static void InitDefaultsMvccGetByStartTsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_MvccGetByStartTsRequest_default_instance_;
    new (ptr) ::kvrpcpb::MvccGetByStartTsRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::MvccGetByStartTsRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MvccGetByStartTsRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMvccGetByStartTsRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,}};

static void InitDefaultsMvccGetByStartTsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_MvccGetByStartTsResponse_default_instance_;
    new (ptr) ::kvrpcpb::MvccGetByStartTsResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::MvccGetByStartTsResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MvccGetByStartTsResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMvccGetByStartTsResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,
      &protobuf_kvrpcpb_2eproto::scc_info_MvccInfo.base,}};

static void InitDefaultsSplitRegionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_SplitRegionRequest_default_instance_;
    new (ptr) ::kvrpcpb::SplitRegionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::SplitRegionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SplitRegionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSplitRegionRequest}, {
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base,}};

static void InitDefaultsSplitRegionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::kvrpcpb::_SplitRegionResponse_default_instance_;
    new (ptr) ::kvrpcpb::SplitRegionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::kvrpcpb::SplitRegionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SplitRegionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSplitRegionResponse}, {
      &protobuf_errorpb_2eproto::scc_info_Error.base,
      &protobuf_metapb_2eproto::scc_info_Region.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LockInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyError.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WriteConflict.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Context.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HandleTime.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScanInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScanDetail.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ExecDetails.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScanRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KvPair.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScanResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Mutation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrewriteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrewriteResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommitRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CommitResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImportRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImportResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BatchRollbackRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BatchRollbackResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CleanupRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CleanupResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BatchGetRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BatchGetResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScanLockRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScanLockResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TxnInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResolveLockRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResolveLockResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GCRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GCResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RawGetRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RawGetResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RawPutRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RawPutResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RawBatchPutRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RawBatchPutResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RawBatchGetRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RawBatchGetResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RawDeleteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RawDeleteResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RawBatchDeleteRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RawBatchDeleteResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteRangeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteRangeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RawDeleteRangeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RawDeleteRangeResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RawScanRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RawScanResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_KeyRange.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RawBatchScanRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RawBatchScanResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MvccWrite.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MvccValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MvccLock.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MvccInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MvccGetByKeyRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MvccGetByKeyResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MvccGetByStartTsRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MvccGetByStartTsResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SplitRegionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SplitRegionResponse.base);
}

::google::protobuf::Metadata file_level_metadata[64];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::LockInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::LockInfo, primary_lock_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::LockInfo, lock_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::LockInfo, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::LockInfo, lock_ttl_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::KeyError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::KeyError, locked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::KeyError, retryable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::KeyError, abort_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::KeyError, conflict_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::WriteConflict, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::WriteConflict, start_ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::WriteConflict, conflict_ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::WriteConflict, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::WriteConflict, primary_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::Context, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::Context, region_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::Context, region_epoch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::Context, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::Context, term_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::Context, priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::Context, isolation_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::Context, not_fill_cache_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::Context, sync_log_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::Context, handle_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::Context, scan_detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::HandleTime, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::HandleTime, wait_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::HandleTime, process_ms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanInfo, total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanInfo, processed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanDetail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanDetail, write_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanDetail, lock_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanDetail, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ExecDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ExecDetails, handle_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ExecDetails, scan_detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::GetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::GetRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::GetRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::GetRequest, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::GetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::GetResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::GetResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::GetResponse, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanRequest, start_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanRequest, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanRequest, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanRequest, key_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanRequest, reverse_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::KvPair, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::KvPair, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::KvPair, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::KvPair, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanResponse, pairs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::Mutation, op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::Mutation, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::Mutation, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::PrewriteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::PrewriteRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::PrewriteRequest, mutations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::PrewriteRequest, primary_lock_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::PrewriteRequest, start_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::PrewriteRequest, lock_ttl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::PrewriteRequest, skip_constraint_check_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::PrewriteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::PrewriteResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::PrewriteResponse, errors_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::CommitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::CommitRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::CommitRequest, start_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::CommitRequest, keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::CommitRequest, commit_version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::CommitResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::CommitResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::CommitResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ImportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ImportRequest, mutations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ImportRequest, commit_version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ImportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ImportResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ImportResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::BatchRollbackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::BatchRollbackRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::BatchRollbackRequest, start_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::BatchRollbackRequest, keys_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::BatchRollbackResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::BatchRollbackResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::BatchRollbackResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::CleanupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::CleanupRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::CleanupRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::CleanupRequest, start_version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::CleanupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::CleanupResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::CleanupResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::CleanupResponse, commit_version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::BatchGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::BatchGetRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::BatchGetRequest, keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::BatchGetRequest, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::BatchGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::BatchGetResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::BatchGetResponse, pairs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanLockRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanLockRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanLockRequest, max_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanLockRequest, start_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanLockRequest, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanLockResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanLockResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanLockResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ScanLockResponse, locks_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::TxnInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::TxnInfo, txn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::TxnInfo, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ResolveLockRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ResolveLockRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ResolveLockRequest, start_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ResolveLockRequest, commit_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ResolveLockRequest, txn_infos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ResolveLockResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ResolveLockResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::ResolveLockResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::GCRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::GCRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::GCRequest, safe_point_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::GCResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::GCResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::GCResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawGetRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawGetRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawGetRequest, cf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawGetResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawGetResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawGetResponse, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawPutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawPutRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawPutRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawPutRequest, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawPutRequest, cf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawPutResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawPutResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawPutResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchPutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchPutRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchPutRequest, pairs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchPutRequest, cf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchPutResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchPutResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchPutResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchGetRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchGetRequest, keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchGetRequest, cf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchGetResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchGetResponse, pairs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawDeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawDeleteRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawDeleteRequest, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawDeleteRequest, cf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawDeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawDeleteResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawDeleteResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchDeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchDeleteRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchDeleteRequest, keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchDeleteRequest, cf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchDeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchDeleteResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchDeleteResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::DeleteRangeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::DeleteRangeRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::DeleteRangeRequest, start_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::DeleteRangeRequest, end_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::DeleteRangeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::DeleteRangeResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::DeleteRangeResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawDeleteRangeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawDeleteRangeRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawDeleteRangeRequest, start_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawDeleteRangeRequest, end_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawDeleteRangeRequest, cf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawDeleteRangeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawDeleteRangeResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawDeleteRangeResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawScanRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawScanRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawScanRequest, start_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawScanRequest, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawScanRequest, key_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawScanRequest, cf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawScanResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawScanResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawScanResponse, kvs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::KeyRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::KeyRange, start_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::KeyRange, end_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchScanRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchScanRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchScanRequest, ranges_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchScanRequest, each_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchScanRequest, key_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchScanRequest, cf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchScanResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchScanResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::RawBatchScanResponse, kvs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccWrite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccWrite, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccWrite, start_ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccWrite, commit_ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccWrite, short_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccValue, start_ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccValue, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccLock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccLock, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccLock, start_ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccLock, primary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccLock, short_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccInfo, lock_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccInfo, writes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccInfo, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccGetByKeyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccGetByKeyRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccGetByKeyRequest, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccGetByKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccGetByKeyResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccGetByKeyResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccGetByKeyResponse, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccGetByStartTsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccGetByStartTsRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccGetByStartTsRequest, start_ts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccGetByStartTsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccGetByStartTsResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccGetByStartTsResponse, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccGetByStartTsResponse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::MvccGetByStartTsResponse, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::SplitRegionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::SplitRegionRequest, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::SplitRegionRequest, split_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::SplitRegionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::SplitRegionResponse, region_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::SplitRegionResponse, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::kvrpcpb::SplitRegionResponse, right_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::kvrpcpb::LockInfo)},
  { 9, -1, sizeof(::kvrpcpb::KeyError)},
  { 18, -1, sizeof(::kvrpcpb::WriteConflict)},
  { 27, -1, sizeof(::kvrpcpb::Context)},
  { 42, -1, sizeof(::kvrpcpb::HandleTime)},
  { 49, -1, sizeof(::kvrpcpb::ScanInfo)},
  { 56, -1, sizeof(::kvrpcpb::ScanDetail)},
  { 64, -1, sizeof(::kvrpcpb::ExecDetails)},
  { 71, -1, sizeof(::kvrpcpb::GetRequest)},
  { 79, -1, sizeof(::kvrpcpb::GetResponse)},
  { 87, -1, sizeof(::kvrpcpb::ScanRequest)},
  { 98, -1, sizeof(::kvrpcpb::KvPair)},
  { 106, -1, sizeof(::kvrpcpb::ScanResponse)},
  { 113, -1, sizeof(::kvrpcpb::Mutation)},
  { 121, -1, sizeof(::kvrpcpb::PrewriteRequest)},
  { 132, -1, sizeof(::kvrpcpb::PrewriteResponse)},
  { 139, -1, sizeof(::kvrpcpb::CommitRequest)},
  { 148, -1, sizeof(::kvrpcpb::CommitResponse)},
  { 155, -1, sizeof(::kvrpcpb::ImportRequest)},
  { 162, -1, sizeof(::kvrpcpb::ImportResponse)},
  { 169, -1, sizeof(::kvrpcpb::BatchRollbackRequest)},
  { 177, -1, sizeof(::kvrpcpb::BatchRollbackResponse)},
  { 184, -1, sizeof(::kvrpcpb::CleanupRequest)},
  { 192, -1, sizeof(::kvrpcpb::CleanupResponse)},
  { 200, -1, sizeof(::kvrpcpb::BatchGetRequest)},
  { 208, -1, sizeof(::kvrpcpb::BatchGetResponse)},
  { 215, -1, sizeof(::kvrpcpb::ScanLockRequest)},
  { 224, -1, sizeof(::kvrpcpb::ScanLockResponse)},
  { 232, -1, sizeof(::kvrpcpb::TxnInfo)},
  { 239, -1, sizeof(::kvrpcpb::ResolveLockRequest)},
  { 248, -1, sizeof(::kvrpcpb::ResolveLockResponse)},
  { 255, -1, sizeof(::kvrpcpb::GCRequest)},
  { 262, -1, sizeof(::kvrpcpb::GCResponse)},
  { 269, -1, sizeof(::kvrpcpb::RawGetRequest)},
  { 277, -1, sizeof(::kvrpcpb::RawGetResponse)},
  { 285, -1, sizeof(::kvrpcpb::RawPutRequest)},
  { 294, -1, sizeof(::kvrpcpb::RawPutResponse)},
  { 301, -1, sizeof(::kvrpcpb::RawBatchPutRequest)},
  { 309, -1, sizeof(::kvrpcpb::RawBatchPutResponse)},
  { 316, -1, sizeof(::kvrpcpb::RawBatchGetRequest)},
  { 324, -1, sizeof(::kvrpcpb::RawBatchGetResponse)},
  { 331, -1, sizeof(::kvrpcpb::RawDeleteRequest)},
  { 339, -1, sizeof(::kvrpcpb::RawDeleteResponse)},
  { 346, -1, sizeof(::kvrpcpb::RawBatchDeleteRequest)},
  { 354, -1, sizeof(::kvrpcpb::RawBatchDeleteResponse)},
  { 361, -1, sizeof(::kvrpcpb::DeleteRangeRequest)},
  { 369, -1, sizeof(::kvrpcpb::DeleteRangeResponse)},
  { 376, -1, sizeof(::kvrpcpb::RawDeleteRangeRequest)},
  { 385, -1, sizeof(::kvrpcpb::RawDeleteRangeResponse)},
  { 392, -1, sizeof(::kvrpcpb::RawScanRequest)},
  { 402, -1, sizeof(::kvrpcpb::RawScanResponse)},
  { 409, -1, sizeof(::kvrpcpb::KeyRange)},
  { 416, -1, sizeof(::kvrpcpb::RawBatchScanRequest)},
  { 426, -1, sizeof(::kvrpcpb::RawBatchScanResponse)},
  { 433, -1, sizeof(::kvrpcpb::MvccWrite)},
  { 442, -1, sizeof(::kvrpcpb::MvccValue)},
  { 449, -1, sizeof(::kvrpcpb::MvccLock)},
  { 458, -1, sizeof(::kvrpcpb::MvccInfo)},
  { 466, -1, sizeof(::kvrpcpb::MvccGetByKeyRequest)},
  { 473, -1, sizeof(::kvrpcpb::MvccGetByKeyResponse)},
  { 481, -1, sizeof(::kvrpcpb::MvccGetByStartTsRequest)},
  { 488, -1, sizeof(::kvrpcpb::MvccGetByStartTsResponse)},
  { 497, -1, sizeof(::kvrpcpb::SplitRegionRequest)},
  { 504, -1, sizeof(::kvrpcpb::SplitRegionResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_LockInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_KeyError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_WriteConflict_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_Context_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_HandleTime_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_ScanInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_ScanDetail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_ExecDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_GetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_GetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_ScanRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_KvPair_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_ScanResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_Mutation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_PrewriteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_PrewriteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_CommitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_CommitResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_ImportRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_ImportResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_BatchRollbackRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_BatchRollbackResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_CleanupRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_CleanupResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_BatchGetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_BatchGetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_ScanLockRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_ScanLockResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_TxnInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_ResolveLockRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_ResolveLockResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_GCRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_GCResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_RawGetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_RawGetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_RawPutRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_RawPutResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_RawBatchPutRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_RawBatchPutResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_RawBatchGetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_RawBatchGetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_RawDeleteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_RawDeleteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_RawBatchDeleteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_RawBatchDeleteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_DeleteRangeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_DeleteRangeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_RawDeleteRangeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_RawDeleteRangeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_RawScanRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_RawScanResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_KeyRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_RawBatchScanRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_RawBatchScanResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_MvccWrite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_MvccValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_MvccLock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_MvccInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_MvccGetByKeyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_MvccGetByKeyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_MvccGetByStartTsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_MvccGetByStartTsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_SplitRegionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::kvrpcpb::_SplitRegionResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "kvrpcpb.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 64);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rkvrpcpb.proto\022\007kvrpcpb\032\014metapb.proto\032\r"
      "errorpb.proto\032\024gogoproto/gogo.proto\"U\n\010L"
      "ockInfo\022\024\n\014primary_lock\030\001 \001(\014\022\024\n\014lock_ve"
      "rsion\030\002 \001(\004\022\013\n\003key\030\003 \001(\014\022\020\n\010lock_ttl\030\004 \001"
      "(\004\"y\n\010KeyError\022!\n\006locked\030\001 \001(\0132\021.kvrpcpb"
      ".LockInfo\022\021\n\tretryable\030\002 \001(\t\022\r\n\005abort\030\003 "
      "\001(\t\022(\n\010conflict\030\004 \001(\0132\026.kvrpcpb.WriteCon"
      "flict\"T\n\rWriteConflict\022\020\n\010start_ts\030\001 \001(\004"
      "\022\023\n\013conflict_ts\030\002 \001(\004\022\013\n\003key\030\003 \001(\014\022\017\n\007pr"
      "imary\030\004 \001(\014\"\261\002\n\007Context\022\021\n\tregion_id\030\001 \001"
      "(\004\022)\n\014region_epoch\030\002 \001(\0132\023.metapb.Region"
      "Epoch\022\032\n\004peer\030\003 \001(\0132\014.metapb.Peer\022\014\n\004ter"
      "m\030\005 \001(\004\022%\n\010priority\030\006 \001(\0162\023.kvrpcpb.Comm"
      "andPri\0220\n\017isolation_level\030\007 \001(\0162\027.kvrpcp"
      "b.IsolationLevel\022\026\n\016not_fill_cache\030\010 \001(\010"
      "\022\020\n\010sync_log\030\t \001(\010\022\023\n\013handle_time\030\n \001(\010\022"
      "\023\n\013scan_detail\030\013 \001(\010J\004\010\004\020\005R\013read_quorum\""
      "1\n\nHandleTime\022\017\n\007wait_ms\030\001 \001(\003\022\022\n\nproces"
      "s_ms\030\002 \001(\003\",\n\010ScanInfo\022\r\n\005total\030\001 \001(\003\022\021\n"
      "\tprocessed\030\002 \001(\003\"p\n\nScanDetail\022 \n\005write\030"
      "\001 \001(\0132\021.kvrpcpb.ScanInfo\022\037\n\004lock\030\002 \001(\0132\021"
      ".kvrpcpb.ScanInfo\022\037\n\004data\030\003 \001(\0132\021.kvrpcp"
      "b.ScanInfo\"a\n\013ExecDetails\022(\n\013handle_time"
      "\030\001 \001(\0132\023.kvrpcpb.HandleTime\022(\n\013scan_deta"
      "il\030\002 \001(\0132\023.kvrpcpb.ScanDetail\"M\n\nGetRequ"
      "est\022!\n\007context\030\001 \001(\0132\020.kvrpcpb.Context\022\013"
      "\n\003key\030\002 \001(\014\022\017\n\007version\030\003 \001(\004\"d\n\013GetRespo"
      "nse\022$\n\014region_error\030\001 \001(\0132\016.errorpb.Erro"
      "r\022 \n\005error\030\002 \001(\0132\021.kvrpcpb.KeyError\022\r\n\005v"
      "alue\030\003 \001(\014\"\206\001\n\013ScanRequest\022!\n\007context\030\001 "
      "\001(\0132\020.kvrpcpb.Context\022\021\n\tstart_key\030\002 \001(\014"
      "\022\r\n\005limit\030\003 \001(\r\022\017\n\007version\030\004 \001(\004\022\020\n\010key_"
      "only\030\005 \001(\010\022\017\n\007reverse\030\006 \001(\010\"F\n\006KvPair\022 \n"
      "\005error\030\001 \001(\0132\021.kvrpcpb.KeyError\022\013\n\003key\030\002"
      " \001(\014\022\r\n\005value\030\003 \001(\014\"T\n\014ScanResponse\022$\n\014r"
      "egion_error\030\001 \001(\0132\016.errorpb.Error\022\036\n\005pai"
      "rs\030\002 \003(\0132\017.kvrpcpb.KvPair\"\?\n\010Mutation\022\027\n"
      "\002op\030\001 \001(\0162\013.kvrpcpb.Op\022\013\n\003key\030\002 \001(\014\022\r\n\005v"
      "alue\030\003 \001(\014\"\270\001\n\017PrewriteRequest\022!\n\007contex"
      "t\030\001 \001(\0132\020.kvrpcpb.Context\022$\n\tmutations\030\002"
      " \003(\0132\021.kvrpcpb.Mutation\022\024\n\014primary_lock\030"
      "\003 \001(\014\022\025\n\rstart_version\030\004 \001(\004\022\020\n\010lock_ttl"
      "\030\005 \001(\004\022\035\n\025skip_constraint_check\030\006 \001(\010\"[\n"
      "\020PrewriteResponse\022$\n\014region_error\030\001 \001(\0132"
      "\016.errorpb.Error\022!\n\006errors\030\002 \003(\0132\021.kvrpcp"
      "b.KeyError\"}\n\rCommitRequest\022!\n\007context\030\001"
      " \001(\0132\020.kvrpcpb.Context\022\025\n\rstart_version\030"
      "\002 \001(\004\022\014\n\004keys\030\003 \003(\014\022\026\n\016commit_version\030\004 "
      "\001(\004J\004\010\005\020\006R\006binlog\"X\n\016CommitResponse\022$\n\014r"
      "egion_error\030\001 \001(\0132\016.errorpb.Error\022 \n\005err"
      "or\030\002 \001(\0132\021.kvrpcpb.KeyError\"M\n\rImportReq"
      "uest\022$\n\tmutations\030\001 \003(\0132\021.kvrpcpb.Mutati"
      "on\022\026\n\016commit_version\030\002 \001(\004\"E\n\016ImportResp"
      "onse\022$\n\014region_error\030\001 \001(\0132\016.errorpb.Err"
      "or\022\r\n\005error\030\002 \001(\t\"^\n\024BatchRollbackReques"
      "t\022!\n\007context\030\001 \001(\0132\020.kvrpcpb.Context\022\025\n\r"
      "start_version\030\002 \001(\004\022\014\n\004keys\030\003 \003(\014\"_\n\025Bat"
      "chRollbackResponse\022$\n\014region_error\030\001 \001(\013"
      "2\016.errorpb.Error\022 \n\005error\030\002 \001(\0132\021.kvrpcp"
      "b.KeyError\"W\n\016CleanupRequest\022!\n\007context\030"
      "\001 \001(\0132\020.kvrpcpb.Context\022\013\n\003key\030\002 \001(\014\022\025\n\r"
      "start_version\030\003 \001(\004\"q\n\017CleanupResponse\022$"
      "\n\014region_error\030\001 \001(\0132\016.errorpb.Error\022 \n\005"
      "error\030\002 \001(\0132\021.kvrpcpb.KeyError\022\026\n\016commit"
      "_version\030\003 \001(\004\"S\n\017BatchGetRequest\022!\n\007con"
      "text\030\001 \001(\0132\020.kvrpcpb.Context\022\014\n\004keys\030\002 \003"
      "(\014\022\017\n\007version\030\003 \001(\004\"X\n\020BatchGetResponse\022"
      "$\n\014region_error\030\001 \001(\0132\016.errorpb.Error\022\036\n"
      "\005pairs\030\002 \003(\0132\017.kvrpcpb.KvPair\"k\n\017ScanLoc"
      "kRequest\022!\n\007context\030\001 \001(\0132\020.kvrpcpb.Cont"
      "ext\022\023\n\013max_version\030\002 \001(\004\022\021\n\tstart_key\030\003 "
      "\001(\014\022\r\n\005limit\030\004 \001(\r\"|\n\020ScanLockResponse\022$"
      "\n\014region_error\030\001 \001(\0132\016.errorpb.Error\022 \n\005"
      "error\030\002 \001(\0132\021.kvrpcpb.KeyError\022 \n\005locks\030"
      "\003 \003(\0132\021.kvrpcpb.LockInfo\"&\n\007TxnInfo\022\013\n\003t"
      "xn\030\001 \001(\004\022\016\n\006status\030\002 \001(\004\"\213\001\n\022ResolveLock"
      "Request\022!\n\007context\030\001 \001(\0132\020.kvrpcpb.Conte"
      "xt\022\025\n\rstart_version\030\002 \001(\004\022\026\n\016commit_vers"
      "ion\030\003 \001(\004\022#\n\ttxn_infos\030\004 \003(\0132\020.kvrpcpb.T"
      "xnInfo\"]\n\023ResolveLockResponse\022$\n\014region_"
      "error\030\001 \001(\0132\016.errorpb.Error\022 \n\005error\030\002 \001"
      "(\0132\021.kvrpcpb.KeyError\"B\n\tGCRequest\022!\n\007co"
      "ntext\030\001 \001(\0132\020.kvrpcpb.Context\022\022\n\nsafe_po"
      "int\030\002 \001(\004\"T\n\nGCResponse\022$\n\014region_error\030"
      "\001 \001(\0132\016.errorpb.Error\022 \n\005error\030\002 \001(\0132\021.k"
      "vrpcpb.KeyError\"K\n\rRawGetRequest\022!\n\007cont"
      "ext\030\001 \001(\0132\020.kvrpcpb.Context\022\013\n\003key\030\002 \001(\014"
      "\022\n\n\002cf\030\003 \001(\t\"T\n\016RawGetResponse\022$\n\014region"
      "_error\030\001 \001(\0132\016.errorpb.Error\022\r\n\005error\030\002 "
      "\001(\t\022\r\n\005value\030\003 \001(\014\"Z\n\rRawPutRequest\022!\n\007c"
      "ontext\030\001 \001(\0132\020.kvrpcpb.Context\022\013\n\003key\030\002 "
      "\001(\014\022\r\n\005value\030\003 \001(\014\022\n\n\002cf\030\004 \001(\t\"E\n\016RawPut"
      "Response\022$\n\014region_error\030\001 \001(\0132\016.errorpb"
      ".Error\022\r\n\005error\030\002 \001(\t\"c\n\022RawBatchPutRequ"
      "est\022!\n\007context\030\001 \001(\0132\020.kvrpcpb.Context\022\036"
      "\n\005pairs\030\002 \003(\0132\017.kvrpcpb.KvPair\022\n\n\002cf\030\003 \001"
      "(\t\"J\n\023RawBatchPutResponse\022$\n\014region_erro"
      "r\030\001 \001(\0132\016.errorpb.Error\022\r\n\005error\030\002 \001(\t\"Q"
      "\n\022RawBatchGetRequest\022!\n\007context\030\001 \001(\0132\020."
      "kvrpcpb.Context\022\014\n\004keys\030\002 \003(\014\022\n\n\002cf\030\003 \001("
      "\t\"[\n\023RawBatchGetResponse\022$\n\014region_error"
      "\030\001 \001(\0132\016.errorpb.Error\022\036\n\005pairs\030\002 \003(\0132\017."
      "kvrpcpb.KvPair\"N\n\020RawDeleteRequest\022!\n\007co"
      "ntext\030\001 \001(\0132\020.kvrpcpb.Context\022\013\n\003key\030\002 \001"
      "(\014\022\n\n\002cf\030\003 \001(\t\"H\n\021RawDeleteResponse\022$\n\014r"
      "egion_error\030\001 \001(\0132\016.errorpb.Error\022\r\n\005err"
      "or\030\002 \001(\t\"T\n\025RawBatchDeleteRequest\022!\n\007con"
      "text\030\001 \001(\0132\020.kvrpcpb.Context\022\014\n\004keys\030\002 \003"
      "(\014\022\n\n\002cf\030\003 \001(\t\"M\n\026RawBatchDeleteResponse"
      "\022$\n\014region_error\030\001 \001(\0132\016.errorpb.Error\022\r"
      "\n\005error\030\002 \001(\t\"[\n\022DeleteRangeRequest\022!\n\007c"
      "ontext\030\001 \001(\0132\020.kvrpcpb.Context\022\021\n\tstart_"
      "key\030\002 \001(\014\022\017\n\007end_key\030\003 \001(\014\"J\n\023DeleteRang"
      "eResponse\022$\n\014region_error\030\001 \001(\0132\016.errorp"
      "b.Error\022\r\n\005error\030\002 \001(\t\"j\n\025RawDeleteRange"
      "Request\022!\n\007context\030\001 \001(\0132\020.kvrpcpb.Conte"
      "xt\022\021\n\tstart_key\030\002 \001(\014\022\017\n\007end_key\030\003 \001(\014\022\n"
      "\n\002cf\030\004 \001(\t\"M\n\026RawDeleteRangeResponse\022$\n\014"
      "region_error\030\001 \001(\0132\016.errorpb.Error\022\r\n\005er"
      "ror\030\002 \001(\t\"s\n\016RawScanRequest\022!\n\007context\030\001"
      " \001(\0132\020.kvrpcpb.Context\022\021\n\tstart_key\030\002 \001("
      "\014\022\r\n\005limit\030\003 \001(\r\022\020\n\010key_only\030\004 \001(\010\022\n\n\002cf"
      "\030\005 \001(\t\"U\n\017RawScanResponse\022$\n\014region_erro"
      "r\030\001 \001(\0132\016.errorpb.Error\022\034\n\003kvs\030\002 \003(\0132\017.k"
      "vrpcpb.KvPair\".\n\010KeyRange\022\021\n\tstart_key\030\001"
      " \001(\014\022\017\n\007end_key\030\002 \001(\014\"\215\001\n\023RawBatchScanRe"
      "quest\022!\n\007context\030\001 \001(\0132\020.kvrpcpb.Context"
      "\022!\n\006ranges\030\002 \003(\0132\021.kvrpcpb.KeyRange\022\022\n\ne"
      "ach_limit\030\003 \001(\r\022\020\n\010key_only\030\004 \001(\010\022\n\n\002cf\030"
      "\005 \001(\t\"Z\n\024RawBatchScanResponse\022$\n\014region_"
      "error\030\001 \001(\0132\016.errorpb.Error\022\034\n\003kvs\030\002 \003(\013"
      "2\017.kvrpcpb.KvPair\"`\n\tMvccWrite\022\031\n\004type\030\001"
      " \001(\0162\013.kvrpcpb.Op\022\020\n\010start_ts\030\002 \001(\004\022\021\n\tc"
      "ommit_ts\030\003 \001(\004\022\023\n\013short_value\030\004 \001(\014\",\n\tM"
      "vccValue\022\020\n\010start_ts\030\001 \001(\004\022\r\n\005value\030\002 \001("
      "\014\"]\n\010MvccLock\022\031\n\004type\030\001 \001(\0162\013.kvrpcpb.Op"
      "\022\020\n\010start_ts\030\002 \001(\004\022\017\n\007primary\030\003 \001(\014\022\023\n\013s"
      "hort_value\030\004 \001(\014\"s\n\010MvccInfo\022\037\n\004lock\030\001 \001"
      "(\0132\021.kvrpcpb.MvccLock\022\"\n\006writes\030\002 \003(\0132\022."
      "kvrpcpb.MvccWrite\022\"\n\006values\030\003 \003(\0132\022.kvrp"
      "cpb.MvccValue\"E\n\023MvccGetByKeyRequest\022!\n\007"
      "context\030\001 \001(\0132\020.kvrpcpb.Context\022\013\n\003key\030\002"
      " \001(\014\"l\n\024MvccGetByKeyResponse\022$\n\014region_e"
      "rror\030\001 \001(\0132\016.errorpb.Error\022\r\n\005error\030\002 \001("
      "\t\022\037\n\004info\030\003 \001(\0132\021.kvrpcpb.MvccInfo\"N\n\027Mv"
      "ccGetByStartTsRequest\022!\n\007context\030\001 \001(\0132\020"
      ".kvrpcpb.Context\022\020\n\010start_ts\030\002 \001(\004\"}\n\030Mv"
      "ccGetByStartTsResponse\022$\n\014region_error\030\001"
      " \001(\0132\016.errorpb.Error\022\r\n\005error\030\002 \001(\t\022\013\n\003k"
      "ey\030\003 \001(\014\022\037\n\004info\030\004 \001(\0132\021.kvrpcpb.MvccInf"
      "o\"J\n\022SplitRegionRequest\022!\n\007context\030\001 \001(\013"
      "2\020.kvrpcpb.Context\022\021\n\tsplit_key\030\002 \001(\014\"x\n"
      "\023SplitRegionResponse\022$\n\014region_error\030\001 \001"
      "(\0132\016.errorpb.Error\022\034\n\004left\030\002 \001(\0132\016.metap"
      "b.Region\022\035\n\005right\030\003 \001(\0132\016.metapb.Region*"
      "+\n\nCommandPri\022\n\n\006Normal\020\000\022\007\n\003Low\020\001\022\010\n\004Hi"
      "gh\020\002* \n\016IsolationLevel\022\006\n\002SI\020\000\022\006\n\002RC\020\001*."
      "\n\002Op\022\007\n\003Put\020\000\022\007\n\003Del\020\001\022\010\n\004Lock\020\002\022\014\n\010Roll"
      "back\020\003B&\n\030com.pingcap.tikv.kvproto\310\342\036\001\340\342"
      "\036\001\320\342\036\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6374);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "kvrpcpb.proto", &protobuf_RegisterTypes);
  ::protobuf_metapb_2eproto::AddDescriptors();
  ::protobuf_errorpb_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_kvrpcpb_2eproto
namespace kvrpcpb {
const ::google::protobuf::EnumDescriptor* CommandPri_descriptor() {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_kvrpcpb_2eproto::file_level_enum_descriptors[0];
}
bool CommandPri_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* IsolationLevel_descriptor() {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_kvrpcpb_2eproto::file_level_enum_descriptors[1];
}
bool IsolationLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Op_descriptor() {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_kvrpcpb_2eproto::file_level_enum_descriptors[2];
}
bool Op_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void LockInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockInfo::kPrimaryLockFieldNumber;
const int LockInfo::kLockVersionFieldNumber;
const int LockInfo::kKeyFieldNumber;
const int LockInfo::kLockTtlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockInfo::LockInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_LockInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.LockInfo)
}
LockInfo::LockInfo(const LockInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  primary_lock_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.primary_lock().size() > 0) {
    primary_lock_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primary_lock_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  ::memcpy(&lock_version_, &from.lock_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&lock_ttl_) -
    reinterpret_cast<char*>(&lock_version_)) + sizeof(lock_ttl_));
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.LockInfo)
}

void LockInfo::SharedCtor() {
  primary_lock_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&lock_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lock_ttl_) -
      reinterpret_cast<char*>(&lock_version_)) + sizeof(lock_ttl_));
}

LockInfo::~LockInfo() {
  // @@protoc_insertion_point(destructor:kvrpcpb.LockInfo)
  SharedDtor();
}

void LockInfo::SharedDtor() {
  primary_lock_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LockInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LockInfo::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LockInfo& LockInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_LockInfo.base);
  return *internal_default_instance();
}


void LockInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.LockInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  primary_lock_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&lock_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lock_ttl_) -
      reinterpret_cast<char*>(&lock_version_)) + sizeof(lock_ttl_));
  _internal_metadata_.Clear();
}

bool LockInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.LockInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes primary_lock = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_primary_lock()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 lock_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lock_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 lock_ttl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lock_ttl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.LockInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.LockInfo)
  return false;
#undef DO_
}

void LockInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.LockInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes primary_lock = 1;
  if (this->primary_lock().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->primary_lock(), output);
  }

  // uint64 lock_version = 2;
  if (this->lock_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->lock_version(), output);
  }

  // bytes key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->key(), output);
  }

  // uint64 lock_ttl = 4;
  if (this->lock_ttl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->lock_ttl(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.LockInfo)
}

::google::protobuf::uint8* LockInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.LockInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes primary_lock = 1;
  if (this->primary_lock().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->primary_lock(), target);
  }

  // uint64 lock_version = 2;
  if (this->lock_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->lock_version(), target);
  }

  // bytes key = 3;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->key(), target);
  }

  // uint64 lock_ttl = 4;
  if (this->lock_ttl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->lock_ttl(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.LockInfo)
  return target;
}

size_t LockInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.LockInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes primary_lock = 1;
  if (this->primary_lock().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->primary_lock());
  }

  // bytes key = 3;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // uint64 lock_version = 2;
  if (this->lock_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lock_version());
  }

  // uint64 lock_ttl = 4;
  if (this->lock_ttl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lock_ttl());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LockInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.LockInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const LockInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LockInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.LockInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.LockInfo)
    MergeFrom(*source);
  }
}

void LockInfo::MergeFrom(const LockInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.LockInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.primary_lock().size() > 0) {

    primary_lock_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primary_lock_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.lock_version() != 0) {
    set_lock_version(from.lock_version());
  }
  if (from.lock_ttl() != 0) {
    set_lock_ttl(from.lock_ttl());
  }
}

void LockInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.LockInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockInfo::CopyFrom(const LockInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.LockInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockInfo::IsInitialized() const {
  return true;
}

void LockInfo::Swap(LockInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockInfo::InternalSwap(LockInfo* other) {
  using std::swap;
  primary_lock_.Swap(&other->primary_lock_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(lock_version_, other->lock_version_);
  swap(lock_ttl_, other->lock_ttl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LockInfo::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyError::InitAsDefaultInstance() {
  ::kvrpcpb::_KeyError_default_instance_._instance.get_mutable()->locked_ = const_cast< ::kvrpcpb::LockInfo*>(
      ::kvrpcpb::LockInfo::internal_default_instance());
  ::kvrpcpb::_KeyError_default_instance_._instance.get_mutable()->conflict_ = const_cast< ::kvrpcpb::WriteConflict*>(
      ::kvrpcpb::WriteConflict::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyError::kLockedFieldNumber;
const int KeyError::kRetryableFieldNumber;
const int KeyError::kAbortFieldNumber;
const int KeyError::kConflictFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyError::KeyError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_KeyError.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.KeyError)
}
KeyError::KeyError(const KeyError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retryable_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.retryable().size() > 0) {
    retryable_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retryable_);
  }
  abort_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.abort().size() > 0) {
    abort_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.abort_);
  }
  if (from.has_locked()) {
    locked_ = new ::kvrpcpb::LockInfo(*from.locked_);
  } else {
    locked_ = NULL;
  }
  if (from.has_conflict()) {
    conflict_ = new ::kvrpcpb::WriteConflict(*from.conflict_);
  } else {
    conflict_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.KeyError)
}

void KeyError::SharedCtor() {
  retryable_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  abort_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&locked_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&conflict_) -
      reinterpret_cast<char*>(&locked_)) + sizeof(conflict_));
}

KeyError::~KeyError() {
  // @@protoc_insertion_point(destructor:kvrpcpb.KeyError)
  SharedDtor();
}

void KeyError::SharedDtor() {
  retryable_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  abort_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete locked_;
  if (this != internal_default_instance()) delete conflict_;
}

void KeyError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyError::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyError& KeyError::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_KeyError.base);
  return *internal_default_instance();
}


void KeyError::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.KeyError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retryable_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  abort_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && locked_ != NULL) {
    delete locked_;
  }
  locked_ = NULL;
  if (GetArenaNoVirtual() == NULL && conflict_ != NULL) {
    delete conflict_;
  }
  conflict_ = NULL;
  _internal_metadata_.Clear();
}

bool KeyError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.KeyError)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.LockInfo locked = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_locked()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string retryable = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retryable()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->retryable().data(), static_cast<int>(this->retryable().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.KeyError.retryable"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string abort = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_abort()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->abort().data(), static_cast<int>(this->abort().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.KeyError.abort"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvrpcpb.WriteConflict conflict = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_conflict()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.KeyError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.KeyError)
  return false;
#undef DO_
}

void KeyError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.KeyError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.LockInfo locked = 1;
  if (this->has_locked()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_locked(), output);
  }

  // string retryable = 2;
  if (this->retryable().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->retryable().data(), static_cast<int>(this->retryable().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.KeyError.retryable");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->retryable(), output);
  }

  // string abort = 3;
  if (this->abort().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->abort().data(), static_cast<int>(this->abort().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.KeyError.abort");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->abort(), output);
  }

  // .kvrpcpb.WriteConflict conflict = 4;
  if (this->has_conflict()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_conflict(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.KeyError)
}

::google::protobuf::uint8* KeyError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.KeyError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.LockInfo locked = 1;
  if (this->has_locked()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_locked(), deterministic, target);
  }

  // string retryable = 2;
  if (this->retryable().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->retryable().data(), static_cast<int>(this->retryable().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.KeyError.retryable");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->retryable(), target);
  }

  // string abort = 3;
  if (this->abort().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->abort().data(), static_cast<int>(this->abort().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.KeyError.abort");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->abort(), target);
  }

  // .kvrpcpb.WriteConflict conflict = 4;
  if (this->has_conflict()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_conflict(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.KeyError)
  return target;
}

size_t KeyError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.KeyError)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string retryable = 2;
  if (this->retryable().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->retryable());
  }

  // string abort = 3;
  if (this->abort().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->abort());
  }

  // .kvrpcpb.LockInfo locked = 1;
  if (this->has_locked()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *locked_);
  }

  // .kvrpcpb.WriteConflict conflict = 4;
  if (this->has_conflict()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *conflict_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.KeyError)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.KeyError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.KeyError)
    MergeFrom(*source);
  }
}

void KeyError::MergeFrom(const KeyError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.KeyError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retryable().size() > 0) {

    retryable_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retryable_);
  }
  if (from.abort().size() > 0) {

    abort_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.abort_);
  }
  if (from.has_locked()) {
    mutable_locked()->::kvrpcpb::LockInfo::MergeFrom(from.locked());
  }
  if (from.has_conflict()) {
    mutable_conflict()->::kvrpcpb::WriteConflict::MergeFrom(from.conflict());
  }
}

void KeyError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.KeyError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyError::CopyFrom(const KeyError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.KeyError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyError::IsInitialized() const {
  return true;
}

void KeyError::Swap(KeyError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyError::InternalSwap(KeyError* other) {
  using std::swap;
  retryable_.Swap(&other->retryable_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  abort_.Swap(&other->abort_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(locked_, other->locked_);
  swap(conflict_, other->conflict_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyError::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WriteConflict::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WriteConflict::kStartTsFieldNumber;
const int WriteConflict::kConflictTsFieldNumber;
const int WriteConflict::kKeyFieldNumber;
const int WriteConflict::kPrimaryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WriteConflict::WriteConflict()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_WriteConflict.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.WriteConflict)
}
WriteConflict::WriteConflict(const WriteConflict& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  primary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.primary().size() > 0) {
    primary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primary_);
  }
  ::memcpy(&start_ts_, &from.start_ts_,
    static_cast<size_t>(reinterpret_cast<char*>(&conflict_ts_) -
    reinterpret_cast<char*>(&start_ts_)) + sizeof(conflict_ts_));
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.WriteConflict)
}

void WriteConflict::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  primary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&conflict_ts_) -
      reinterpret_cast<char*>(&start_ts_)) + sizeof(conflict_ts_));
}

WriteConflict::~WriteConflict() {
  // @@protoc_insertion_point(destructor:kvrpcpb.WriteConflict)
  SharedDtor();
}

void WriteConflict::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  primary_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WriteConflict::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WriteConflict::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WriteConflict& WriteConflict::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_WriteConflict.base);
  return *internal_default_instance();
}


void WriteConflict::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.WriteConflict)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  primary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&conflict_ts_) -
      reinterpret_cast<char*>(&start_ts_)) + sizeof(conflict_ts_));
  _internal_metadata_.Clear();
}

bool WriteConflict::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.WriteConflict)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 start_ts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 conflict_ts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &conflict_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes primary = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_primary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.WriteConflict)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.WriteConflict)
  return false;
#undef DO_
}

void WriteConflict::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.WriteConflict)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 start_ts = 1;
  if (this->start_ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->start_ts(), output);
  }

  // uint64 conflict_ts = 2;
  if (this->conflict_ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->conflict_ts(), output);
  }

  // bytes key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->key(), output);
  }

  // bytes primary = 4;
  if (this->primary().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->primary(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.WriteConflict)
}

::google::protobuf::uint8* WriteConflict::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.WriteConflict)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 start_ts = 1;
  if (this->start_ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->start_ts(), target);
  }

  // uint64 conflict_ts = 2;
  if (this->conflict_ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->conflict_ts(), target);
  }

  // bytes key = 3;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->key(), target);
  }

  // bytes primary = 4;
  if (this->primary().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->primary(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.WriteConflict)
  return target;
}

size_t WriteConflict::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.WriteConflict)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 3;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes primary = 4;
  if (this->primary().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->primary());
  }

  // uint64 start_ts = 1;
  if (this->start_ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_ts());
  }

  // uint64 conflict_ts = 2;
  if (this->conflict_ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->conflict_ts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteConflict::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.WriteConflict)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteConflict* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WriteConflict>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.WriteConflict)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.WriteConflict)
    MergeFrom(*source);
  }
}

void WriteConflict::MergeFrom(const WriteConflict& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.WriteConflict)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.primary().size() > 0) {

    primary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primary_);
  }
  if (from.start_ts() != 0) {
    set_start_ts(from.start_ts());
  }
  if (from.conflict_ts() != 0) {
    set_conflict_ts(from.conflict_ts());
  }
}

void WriteConflict::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.WriteConflict)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteConflict::CopyFrom(const WriteConflict& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.WriteConflict)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteConflict::IsInitialized() const {
  return true;
}

void WriteConflict::Swap(WriteConflict* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WriteConflict::InternalSwap(WriteConflict* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  primary_.Swap(&other->primary_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(start_ts_, other->start_ts_);
  swap(conflict_ts_, other->conflict_ts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WriteConflict::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Context::InitAsDefaultInstance() {
  ::kvrpcpb::_Context_default_instance_._instance.get_mutable()->region_epoch_ = const_cast< ::metapb::RegionEpoch*>(
      ::metapb::RegionEpoch::internal_default_instance());
  ::kvrpcpb::_Context_default_instance_._instance.get_mutable()->peer_ = const_cast< ::metapb::Peer*>(
      ::metapb::Peer::internal_default_instance());
}
void Context::clear_region_epoch() {
  if (GetArenaNoVirtual() == NULL && region_epoch_ != NULL) {
    delete region_epoch_;
  }
  region_epoch_ = NULL;
}
void Context::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Context::kRegionIdFieldNumber;
const int Context::kRegionEpochFieldNumber;
const int Context::kPeerFieldNumber;
const int Context::kTermFieldNumber;
const int Context::kPriorityFieldNumber;
const int Context::kIsolationLevelFieldNumber;
const int Context::kNotFillCacheFieldNumber;
const int Context::kSyncLogFieldNumber;
const int Context::kHandleTimeFieldNumber;
const int Context::kScanDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Context::Context()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_Context.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.Context)
}
Context::Context(const Context& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_region_epoch()) {
    region_epoch_ = new ::metapb::RegionEpoch(*from.region_epoch_);
  } else {
    region_epoch_ = NULL;
  }
  if (from.has_peer()) {
    peer_ = new ::metapb::Peer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  ::memcpy(&region_id_, &from.region_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&scan_detail_) -
    reinterpret_cast<char*>(&region_id_)) + sizeof(scan_detail_));
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.Context)
}

void Context::SharedCtor() {
  ::memset(&region_epoch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scan_detail_) -
      reinterpret_cast<char*>(&region_epoch_)) + sizeof(scan_detail_));
}

Context::~Context() {
  // @@protoc_insertion_point(destructor:kvrpcpb.Context)
  SharedDtor();
}

void Context::SharedDtor() {
  if (this != internal_default_instance()) delete region_epoch_;
  if (this != internal_default_instance()) delete peer_;
}

void Context::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Context::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Context& Context::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_Context.base);
  return *internal_default_instance();
}


void Context::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.Context)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && region_epoch_ != NULL) {
    delete region_epoch_;
  }
  region_epoch_ = NULL;
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) {
    delete peer_;
  }
  peer_ = NULL;
  ::memset(&region_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scan_detail_) -
      reinterpret_cast<char*>(&region_id_)) + sizeof(scan_detail_));
  _internal_metadata_.Clear();
}

bool Context::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.Context)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 region_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metapb.RegionEpoch region_epoch = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_epoch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metapb.Peer peer = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_peer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 term = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &term_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvrpcpb.CommandPri priority = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_priority(static_cast< ::kvrpcpb::CommandPri >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvrpcpb.IsolationLevel isolation_level = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_isolation_level(static_cast< ::kvrpcpb::IsolationLevel >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool not_fill_cache = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &not_fill_cache_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sync_log = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sync_log_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool handle_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &handle_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool scan_detail = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &scan_detail_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.Context)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.Context)
  return false;
#undef DO_
}

void Context::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.Context)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 region_id = 1;
  if (this->region_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->region_id(), output);
  }

  // .metapb.RegionEpoch region_epoch = 2;
  if (this->has_region_epoch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_region_epoch(), output);
  }

  // .metapb.Peer peer = 3;
  if (this->has_peer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_peer(), output);
  }

  // uint64 term = 5;
  if (this->term() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->term(), output);
  }

  // .kvrpcpb.CommandPri priority = 6;
  if (this->priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->priority(), output);
  }

  // .kvrpcpb.IsolationLevel isolation_level = 7;
  if (this->isolation_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->isolation_level(), output);
  }

  // bool not_fill_cache = 8;
  if (this->not_fill_cache() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->not_fill_cache(), output);
  }

  // bool sync_log = 9;
  if (this->sync_log() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->sync_log(), output);
  }

  // bool handle_time = 10;
  if (this->handle_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->handle_time(), output);
  }

  // bool scan_detail = 11;
  if (this->scan_detail() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->scan_detail(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.Context)
}

::google::protobuf::uint8* Context::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.Context)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 region_id = 1;
  if (this->region_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->region_id(), target);
  }

  // .metapb.RegionEpoch region_epoch = 2;
  if (this->has_region_epoch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_region_epoch(), deterministic, target);
  }

  // .metapb.Peer peer = 3;
  if (this->has_peer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_peer(), deterministic, target);
  }

  // uint64 term = 5;
  if (this->term() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->term(), target);
  }

  // .kvrpcpb.CommandPri priority = 6;
  if (this->priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->priority(), target);
  }

  // .kvrpcpb.IsolationLevel isolation_level = 7;
  if (this->isolation_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->isolation_level(), target);
  }

  // bool not_fill_cache = 8;
  if (this->not_fill_cache() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->not_fill_cache(), target);
  }

  // bool sync_log = 9;
  if (this->sync_log() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->sync_log(), target);
  }

  // bool handle_time = 10;
  if (this->handle_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->handle_time(), target);
  }

  // bool scan_detail = 11;
  if (this->scan_detail() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->scan_detail(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.Context)
  return target;
}

size_t Context::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.Context)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .metapb.RegionEpoch region_epoch = 2;
  if (this->has_region_epoch()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_epoch_);
  }

  // .metapb.Peer peer = 3;
  if (this->has_peer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *peer_);
  }

  // uint64 region_id = 1;
  if (this->region_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->region_id());
  }

  // uint64 term = 5;
  if (this->term() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->term());
  }

  // .kvrpcpb.CommandPri priority = 6;
  if (this->priority() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->priority());
  }

  // .kvrpcpb.IsolationLevel isolation_level = 7;
  if (this->isolation_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->isolation_level());
  }

  // bool not_fill_cache = 8;
  if (this->not_fill_cache() != 0) {
    total_size += 1 + 1;
  }

  // bool sync_log = 9;
  if (this->sync_log() != 0) {
    total_size += 1 + 1;
  }

  // bool handle_time = 10;
  if (this->handle_time() != 0) {
    total_size += 1 + 1;
  }

  // bool scan_detail = 11;
  if (this->scan_detail() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Context::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.Context)
  GOOGLE_DCHECK_NE(&from, this);
  const Context* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Context>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.Context)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.Context)
    MergeFrom(*source);
  }
}

void Context::MergeFrom(const Context& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.Context)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_region_epoch()) {
    mutable_region_epoch()->::metapb::RegionEpoch::MergeFrom(from.region_epoch());
  }
  if (from.has_peer()) {
    mutable_peer()->::metapb::Peer::MergeFrom(from.peer());
  }
  if (from.region_id() != 0) {
    set_region_id(from.region_id());
  }
  if (from.term() != 0) {
    set_term(from.term());
  }
  if (from.priority() != 0) {
    set_priority(from.priority());
  }
  if (from.isolation_level() != 0) {
    set_isolation_level(from.isolation_level());
  }
  if (from.not_fill_cache() != 0) {
    set_not_fill_cache(from.not_fill_cache());
  }
  if (from.sync_log() != 0) {
    set_sync_log(from.sync_log());
  }
  if (from.handle_time() != 0) {
    set_handle_time(from.handle_time());
  }
  if (from.scan_detail() != 0) {
    set_scan_detail(from.scan_detail());
  }
}

void Context::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.Context)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Context::CopyFrom(const Context& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.Context)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Context::IsInitialized() const {
  return true;
}

void Context::Swap(Context* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Context::InternalSwap(Context* other) {
  using std::swap;
  swap(region_epoch_, other->region_epoch_);
  swap(peer_, other->peer_);
  swap(region_id_, other->region_id_);
  swap(term_, other->term_);
  swap(priority_, other->priority_);
  swap(isolation_level_, other->isolation_level_);
  swap(not_fill_cache_, other->not_fill_cache_);
  swap(sync_log_, other->sync_log_);
  swap(handle_time_, other->handle_time_);
  swap(scan_detail_, other->scan_detail_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Context::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HandleTime::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HandleTime::kWaitMsFieldNumber;
const int HandleTime::kProcessMsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HandleTime::HandleTime()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_HandleTime.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.HandleTime)
}
HandleTime::HandleTime(const HandleTime& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&wait_ms_, &from.wait_ms_,
    static_cast<size_t>(reinterpret_cast<char*>(&process_ms_) -
    reinterpret_cast<char*>(&wait_ms_)) + sizeof(process_ms_));
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.HandleTime)
}

void HandleTime::SharedCtor() {
  ::memset(&wait_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&process_ms_) -
      reinterpret_cast<char*>(&wait_ms_)) + sizeof(process_ms_));
}

HandleTime::~HandleTime() {
  // @@protoc_insertion_point(destructor:kvrpcpb.HandleTime)
  SharedDtor();
}

void HandleTime::SharedDtor() {
}

void HandleTime::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HandleTime::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HandleTime& HandleTime::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_HandleTime.base);
  return *internal_default_instance();
}


void HandleTime::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.HandleTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&wait_ms_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&process_ms_) -
      reinterpret_cast<char*>(&wait_ms_)) + sizeof(process_ms_));
  _internal_metadata_.Clear();
}

bool HandleTime::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.HandleTime)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 wait_ms = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &wait_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 process_ms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &process_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.HandleTime)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.HandleTime)
  return false;
#undef DO_
}

void HandleTime::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.HandleTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 wait_ms = 1;
  if (this->wait_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->wait_ms(), output);
  }

  // int64 process_ms = 2;
  if (this->process_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->process_ms(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.HandleTime)
}

::google::protobuf::uint8* HandleTime::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.HandleTime)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 wait_ms = 1;
  if (this->wait_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->wait_ms(), target);
  }

  // int64 process_ms = 2;
  if (this->process_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->process_ms(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.HandleTime)
  return target;
}

size_t HandleTime::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.HandleTime)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 wait_ms = 1;
  if (this->wait_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->wait_ms());
  }

  // int64 process_ms = 2;
  if (this->process_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->process_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HandleTime::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.HandleTime)
  GOOGLE_DCHECK_NE(&from, this);
  const HandleTime* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HandleTime>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.HandleTime)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.HandleTime)
    MergeFrom(*source);
  }
}

void HandleTime::MergeFrom(const HandleTime& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.HandleTime)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.wait_ms() != 0) {
    set_wait_ms(from.wait_ms());
  }
  if (from.process_ms() != 0) {
    set_process_ms(from.process_ms());
  }
}

void HandleTime::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.HandleTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HandleTime::CopyFrom(const HandleTime& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.HandleTime)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandleTime::IsInitialized() const {
  return true;
}

void HandleTime::Swap(HandleTime* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HandleTime::InternalSwap(HandleTime* other) {
  using std::swap;
  swap(wait_ms_, other->wait_ms_);
  swap(process_ms_, other->process_ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HandleTime::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScanInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScanInfo::kTotalFieldNumber;
const int ScanInfo::kProcessedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScanInfo::ScanInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_ScanInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.ScanInfo)
}
ScanInfo::ScanInfo(const ScanInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_, &from.total_,
    static_cast<size_t>(reinterpret_cast<char*>(&processed_) -
    reinterpret_cast<char*>(&total_)) + sizeof(processed_));
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.ScanInfo)
}

void ScanInfo::SharedCtor() {
  ::memset(&total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&processed_) -
      reinterpret_cast<char*>(&total_)) + sizeof(processed_));
}

ScanInfo::~ScanInfo() {
  // @@protoc_insertion_point(destructor:kvrpcpb.ScanInfo)
  SharedDtor();
}

void ScanInfo::SharedDtor() {
}

void ScanInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScanInfo::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScanInfo& ScanInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_ScanInfo.base);
  return *internal_default_instance();
}


void ScanInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.ScanInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&total_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&processed_) -
      reinterpret_cast<char*>(&total_)) + sizeof(processed_));
  _internal_metadata_.Clear();
}

bool ScanInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.ScanInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 total = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 processed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &processed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.ScanInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.ScanInfo)
  return false;
#undef DO_
}

void ScanInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.ScanInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 total = 1;
  if (this->total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->total(), output);
  }

  // int64 processed = 2;
  if (this->processed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->processed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.ScanInfo)
}

::google::protobuf::uint8* ScanInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.ScanInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 total = 1;
  if (this->total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->total(), target);
  }

  // int64 processed = 2;
  if (this->processed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->processed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.ScanInfo)
  return target;
}

size_t ScanInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.ScanInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 total = 1;
  if (this->total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total());
  }

  // int64 processed = 2;
  if (this->processed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->processed());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScanInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.ScanInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ScanInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScanInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.ScanInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.ScanInfo)
    MergeFrom(*source);
  }
}

void ScanInfo::MergeFrom(const ScanInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.ScanInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.total() != 0) {
    set_total(from.total());
  }
  if (from.processed() != 0) {
    set_processed(from.processed());
  }
}

void ScanInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.ScanInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanInfo::CopyFrom(const ScanInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.ScanInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanInfo::IsInitialized() const {
  return true;
}

void ScanInfo::Swap(ScanInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScanInfo::InternalSwap(ScanInfo* other) {
  using std::swap;
  swap(total_, other->total_);
  swap(processed_, other->processed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScanInfo::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScanDetail::InitAsDefaultInstance() {
  ::kvrpcpb::_ScanDetail_default_instance_._instance.get_mutable()->write_ = const_cast< ::kvrpcpb::ScanInfo*>(
      ::kvrpcpb::ScanInfo::internal_default_instance());
  ::kvrpcpb::_ScanDetail_default_instance_._instance.get_mutable()->lock_ = const_cast< ::kvrpcpb::ScanInfo*>(
      ::kvrpcpb::ScanInfo::internal_default_instance());
  ::kvrpcpb::_ScanDetail_default_instance_._instance.get_mutable()->data_ = const_cast< ::kvrpcpb::ScanInfo*>(
      ::kvrpcpb::ScanInfo::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScanDetail::kWriteFieldNumber;
const int ScanDetail::kLockFieldNumber;
const int ScanDetail::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScanDetail::ScanDetail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_ScanDetail.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.ScanDetail)
}
ScanDetail::ScanDetail(const ScanDetail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_write()) {
    write_ = new ::kvrpcpb::ScanInfo(*from.write_);
  } else {
    write_ = NULL;
  }
  if (from.has_lock()) {
    lock_ = new ::kvrpcpb::ScanInfo(*from.lock_);
  } else {
    lock_ = NULL;
  }
  if (from.has_data()) {
    data_ = new ::kvrpcpb::ScanInfo(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.ScanDetail)
}

void ScanDetail::SharedCtor() {
  ::memset(&write_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&write_)) + sizeof(data_));
}

ScanDetail::~ScanDetail() {
  // @@protoc_insertion_point(destructor:kvrpcpb.ScanDetail)
  SharedDtor();
}

void ScanDetail::SharedDtor() {
  if (this != internal_default_instance()) delete write_;
  if (this != internal_default_instance()) delete lock_;
  if (this != internal_default_instance()) delete data_;
}

void ScanDetail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScanDetail::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScanDetail& ScanDetail::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_ScanDetail.base);
  return *internal_default_instance();
}


void ScanDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.ScanDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && write_ != NULL) {
    delete write_;
  }
  write_ = NULL;
  if (GetArenaNoVirtual() == NULL && lock_ != NULL) {
    delete lock_;
  }
  lock_ = NULL;
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool ScanDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.ScanDetail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.ScanInfo write = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_write()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvrpcpb.ScanInfo lock = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lock()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvrpcpb.ScanInfo data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.ScanDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.ScanDetail)
  return false;
#undef DO_
}

void ScanDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.ScanDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.ScanInfo write = 1;
  if (this->has_write()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_write(), output);
  }

  // .kvrpcpb.ScanInfo lock = 2;
  if (this->has_lock()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_lock(), output);
  }

  // .kvrpcpb.ScanInfo data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.ScanDetail)
}

::google::protobuf::uint8* ScanDetail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.ScanDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.ScanInfo write = 1;
  if (this->has_write()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_write(), deterministic, target);
  }

  // .kvrpcpb.ScanInfo lock = 2;
  if (this->has_lock()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_lock(), deterministic, target);
  }

  // .kvrpcpb.ScanInfo data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.ScanDetail)
  return target;
}

size_t ScanDetail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.ScanDetail)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .kvrpcpb.ScanInfo write = 1;
  if (this->has_write()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *write_);
  }

  // .kvrpcpb.ScanInfo lock = 2;
  if (this->has_lock()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lock_);
  }

  // .kvrpcpb.ScanInfo data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScanDetail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.ScanDetail)
  GOOGLE_DCHECK_NE(&from, this);
  const ScanDetail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScanDetail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.ScanDetail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.ScanDetail)
    MergeFrom(*source);
  }
}

void ScanDetail::MergeFrom(const ScanDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.ScanDetail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_write()) {
    mutable_write()->::kvrpcpb::ScanInfo::MergeFrom(from.write());
  }
  if (from.has_lock()) {
    mutable_lock()->::kvrpcpb::ScanInfo::MergeFrom(from.lock());
  }
  if (from.has_data()) {
    mutable_data()->::kvrpcpb::ScanInfo::MergeFrom(from.data());
  }
}

void ScanDetail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.ScanDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanDetail::CopyFrom(const ScanDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.ScanDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanDetail::IsInitialized() const {
  return true;
}

void ScanDetail::Swap(ScanDetail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScanDetail::InternalSwap(ScanDetail* other) {
  using std::swap;
  swap(write_, other->write_);
  swap(lock_, other->lock_);
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScanDetail::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExecDetails::InitAsDefaultInstance() {
  ::kvrpcpb::_ExecDetails_default_instance_._instance.get_mutable()->handle_time_ = const_cast< ::kvrpcpb::HandleTime*>(
      ::kvrpcpb::HandleTime::internal_default_instance());
  ::kvrpcpb::_ExecDetails_default_instance_._instance.get_mutable()->scan_detail_ = const_cast< ::kvrpcpb::ScanDetail*>(
      ::kvrpcpb::ScanDetail::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecDetails::kHandleTimeFieldNumber;
const int ExecDetails::kScanDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecDetails::ExecDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_ExecDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.ExecDetails)
}
ExecDetails::ExecDetails(const ExecDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_handle_time()) {
    handle_time_ = new ::kvrpcpb::HandleTime(*from.handle_time_);
  } else {
    handle_time_ = NULL;
  }
  if (from.has_scan_detail()) {
    scan_detail_ = new ::kvrpcpb::ScanDetail(*from.scan_detail_);
  } else {
    scan_detail_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.ExecDetails)
}

void ExecDetails::SharedCtor() {
  ::memset(&handle_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scan_detail_) -
      reinterpret_cast<char*>(&handle_time_)) + sizeof(scan_detail_));
}

ExecDetails::~ExecDetails() {
  // @@protoc_insertion_point(destructor:kvrpcpb.ExecDetails)
  SharedDtor();
}

void ExecDetails::SharedDtor() {
  if (this != internal_default_instance()) delete handle_time_;
  if (this != internal_default_instance()) delete scan_detail_;
}

void ExecDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ExecDetails::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecDetails& ExecDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_ExecDetails.base);
  return *internal_default_instance();
}


void ExecDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.ExecDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && handle_time_ != NULL) {
    delete handle_time_;
  }
  handle_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && scan_detail_ != NULL) {
    delete scan_detail_;
  }
  scan_detail_ = NULL;
  _internal_metadata_.Clear();
}

bool ExecDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.ExecDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.HandleTime handle_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_handle_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvrpcpb.ScanDetail scan_detail = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scan_detail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.ExecDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.ExecDetails)
  return false;
#undef DO_
}

void ExecDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.ExecDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.HandleTime handle_time = 1;
  if (this->has_handle_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_handle_time(), output);
  }

  // .kvrpcpb.ScanDetail scan_detail = 2;
  if (this->has_scan_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_scan_detail(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.ExecDetails)
}

::google::protobuf::uint8* ExecDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.ExecDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.HandleTime handle_time = 1;
  if (this->has_handle_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_handle_time(), deterministic, target);
  }

  // .kvrpcpb.ScanDetail scan_detail = 2;
  if (this->has_scan_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_scan_detail(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.ExecDetails)
  return target;
}

size_t ExecDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.ExecDetails)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .kvrpcpb.HandleTime handle_time = 1;
  if (this->has_handle_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *handle_time_);
  }

  // .kvrpcpb.ScanDetail scan_detail = 2;
  if (this->has_scan_detail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *scan_detail_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.ExecDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.ExecDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.ExecDetails)
    MergeFrom(*source);
  }
}

void ExecDetails::MergeFrom(const ExecDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.ExecDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_handle_time()) {
    mutable_handle_time()->::kvrpcpb::HandleTime::MergeFrom(from.handle_time());
  }
  if (from.has_scan_detail()) {
    mutable_scan_detail()->::kvrpcpb::ScanDetail::MergeFrom(from.scan_detail());
  }
}

void ExecDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.ExecDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecDetails::CopyFrom(const ExecDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.ExecDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecDetails::IsInitialized() const {
  return true;
}

void ExecDetails::Swap(ExecDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecDetails::InternalSwap(ExecDetails* other) {
  using std::swap;
  swap(handle_time_, other->handle_time_);
  swap(scan_detail_, other->scan_detail_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ExecDetails::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_GetRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRequest::kContextFieldNumber;
const int GetRequest::kKeyFieldNumber;
const int GetRequest::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRequest::GetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_GetRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.GetRequest)
}
GetRequest::GetRequest(const GetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.GetRequest)
}

void GetRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&context_)) + sizeof(version_));
}

GetRequest::~GetRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.GetRequest)
  SharedDtor();
}

void GetRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void GetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRequest& GetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_GetRequest.base);
  return *internal_default_instance();
}


void GetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  version_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool GetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.GetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.GetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.GetRequest)
  return false;
#undef DO_
}

void GetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->key(), output);
  }

  // uint64 version = 3;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.GetRequest)
}

::google::protobuf::uint8* GetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->key(), target);
  }

  // uint64 version = 3;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.GetRequest)
  return target;
}

size_t GetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.GetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // uint64 version = 3;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.GetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.GetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.GetRequest)
    MergeFrom(*source);
  }
}

void GetRequest::MergeFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.GetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void GetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRequest::CopyFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRequest::IsInitialized() const {
  return true;
}

void GetRequest::Swap(GetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRequest::InternalSwap(GetRequest* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_GetResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
  ::kvrpcpb::_GetResponse_default_instance_._instance.get_mutable()->error_ = const_cast< ::kvrpcpb::KeyError*>(
      ::kvrpcpb::KeyError::internal_default_instance());
}
void GetResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetResponse::kRegionErrorFieldNumber;
const int GetResponse::kErrorFieldNumber;
const int GetResponse::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetResponse::GetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_GetResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.GetResponse)
}
GetResponse::GetResponse(const GetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  if (from.has_error()) {
    error_ = new ::kvrpcpb::KeyError(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.GetResponse)
}

void GetResponse::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&region_error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&region_error_)) + sizeof(error_));
}

GetResponse::~GetResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.GetResponse)
  SharedDtor();
}

void GetResponse::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete region_error_;
  if (this != internal_default_instance()) delete error_;
}

void GetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetResponse& GetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_GetResponse.base);
  return *internal_default_instance();
}


void GetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.GetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool GetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.GetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvrpcpb.KeyError error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.GetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.GetResponse)
  return false;
#undef DO_
}

void GetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.GetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_error(), output);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.GetResponse)
}

::google::protobuf::uint8* GetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.GetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_error(), deterministic, target);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.GetResponse)
  return target;
}

size_t GetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.GetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.GetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.GetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.GetResponse)
    MergeFrom(*source);
  }
}

void GetResponse::MergeFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.GetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
  if (from.has_error()) {
    mutable_error()->::kvrpcpb::KeyError::MergeFrom(from.error());
  }
}

void GetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResponse::CopyFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponse::IsInitialized() const {
  return true;
}

void GetResponse::Swap(GetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetResponse::InternalSwap(GetResponse* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(region_error_, other->region_error_);
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScanRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_ScanRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScanRequest::kContextFieldNumber;
const int ScanRequest::kStartKeyFieldNumber;
const int ScanRequest::kLimitFieldNumber;
const int ScanRequest::kVersionFieldNumber;
const int ScanRequest::kKeyOnlyFieldNumber;
const int ScanRequest::kReverseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScanRequest::ScanRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_ScanRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.ScanRequest)
}
ScanRequest::ScanRequest(const ScanRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start_key().size() > 0) {
    start_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_key_);
  }
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&reverse_) -
    reinterpret_cast<char*>(&version_)) + sizeof(reverse_));
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.ScanRequest)
}

void ScanRequest::SharedCtor() {
  start_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reverse_) -
      reinterpret_cast<char*>(&context_)) + sizeof(reverse_));
}

ScanRequest::~ScanRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.ScanRequest)
  SharedDtor();
}

void ScanRequest::SharedDtor() {
  start_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void ScanRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScanRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScanRequest& ScanRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_ScanRequest.base);
  return *internal_default_instance();
}


void ScanRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.ScanRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  start_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reverse_) -
      reinterpret_cast<char*>(&version_)) + sizeof(reverse_));
  _internal_metadata_.Clear();
}

bool ScanRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.ScanRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes start_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_start_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool key_only = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &key_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reverse = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reverse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.ScanRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.ScanRequest)
  return false;
#undef DO_
}

void ScanRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.ScanRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // bytes start_key = 2;
  if (this->start_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->start_key(), output);
  }

  // uint32 limit = 3;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->limit(), output);
  }

  // uint64 version = 4;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->version(), output);
  }

  // bool key_only = 5;
  if (this->key_only() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->key_only(), output);
  }

  // bool reverse = 6;
  if (this->reverse() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->reverse(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.ScanRequest)
}

::google::protobuf::uint8* ScanRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.ScanRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // bytes start_key = 2;
  if (this->start_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->start_key(), target);
  }

  // uint32 limit = 3;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->limit(), target);
  }

  // uint64 version = 4;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->version(), target);
  }

  // bool key_only = 5;
  if (this->key_only() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->key_only(), target);
  }

  // bool reverse = 6;
  if (this->reverse() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->reverse(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.ScanRequest)
  return target;
}

size_t ScanRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.ScanRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes start_key = 2;
  if (this->start_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->start_key());
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // uint64 version = 4;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());
  }

  // uint32 limit = 3;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limit());
  }

  // bool key_only = 5;
  if (this->key_only() != 0) {
    total_size += 1 + 1;
  }

  // bool reverse = 6;
  if (this->reverse() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScanRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.ScanRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ScanRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScanRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.ScanRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.ScanRequest)
    MergeFrom(*source);
  }
}

void ScanRequest::MergeFrom(const ScanRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.ScanRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_key().size() > 0) {

    start_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_key_);
  }
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
  if (from.key_only() != 0) {
    set_key_only(from.key_only());
  }
  if (from.reverse() != 0) {
    set_reverse(from.reverse());
  }
}

void ScanRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.ScanRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanRequest::CopyFrom(const ScanRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.ScanRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanRequest::IsInitialized() const {
  return true;
}

void ScanRequest::Swap(ScanRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScanRequest::InternalSwap(ScanRequest* other) {
  using std::swap;
  start_key_.Swap(&other->start_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  swap(version_, other->version_);
  swap(limit_, other->limit_);
  swap(key_only_, other->key_only_);
  swap(reverse_, other->reverse_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScanRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KvPair::InitAsDefaultInstance() {
  ::kvrpcpb::_KvPair_default_instance_._instance.get_mutable()->error_ = const_cast< ::kvrpcpb::KeyError*>(
      ::kvrpcpb::KeyError::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KvPair::kErrorFieldNumber;
const int KvPair::kKeyFieldNumber;
const int KvPair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KvPair::KvPair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_KvPair.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.KvPair)
}
KvPair::KvPair(const KvPair& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_error()) {
    error_ = new ::kvrpcpb::KeyError(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.KvPair)
}

void KvPair::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
}

KvPair::~KvPair() {
  // @@protoc_insertion_point(destructor:kvrpcpb.KvPair)
  SharedDtor();
}

void KvPair::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void KvPair::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KvPair::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KvPair& KvPair::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_KvPair.base);
  return *internal_default_instance();
}


void KvPair::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.KvPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool KvPair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.KvPair)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.KeyError error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.KvPair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.KvPair)
  return false;
#undef DO_
}

void KvPair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.KvPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.KeyError error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_error(), output);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->key(), output);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.KvPair)
}

::google::protobuf::uint8* KvPair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.KvPair)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.KeyError error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_error(), deterministic, target);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->key(), target);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.KvPair)
  return target;
}

size_t KvPair::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.KvPair)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .kvrpcpb.KeyError error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KvPair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.KvPair)
  GOOGLE_DCHECK_NE(&from, this);
  const KvPair* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KvPair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.KvPair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.KvPair)
    MergeFrom(*source);
  }
}

void KvPair::MergeFrom(const KvPair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.KvPair)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_error()) {
    mutable_error()->::kvrpcpb::KeyError::MergeFrom(from.error());
  }
}

void KvPair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.KvPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KvPair::CopyFrom(const KvPair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.KvPair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KvPair::IsInitialized() const {
  return true;
}

void KvPair::Swap(KvPair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KvPair::InternalSwap(KvPair* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KvPair::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScanResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_ScanResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
}
void ScanResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScanResponse::kRegionErrorFieldNumber;
const int ScanResponse::kPairsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScanResponse::ScanResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_ScanResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.ScanResponse)
}
ScanResponse::ScanResponse(const ScanResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pairs_(from.pairs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.ScanResponse)
}

void ScanResponse::SharedCtor() {
  region_error_ = NULL;
}

ScanResponse::~ScanResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.ScanResponse)
  SharedDtor();
}

void ScanResponse::SharedDtor() {
  if (this != internal_default_instance()) delete region_error_;
}

void ScanResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScanResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScanResponse& ScanResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_ScanResponse.base);
  return *internal_default_instance();
}


void ScanResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.ScanResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pairs_.Clear();
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  _internal_metadata_.Clear();
}

bool ScanResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.ScanResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .kvrpcpb.KvPair pairs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pairs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.ScanResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.ScanResponse)
  return false;
#undef DO_
}

void ScanResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.ScanResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // repeated .kvrpcpb.KvPair pairs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pairs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->pairs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.ScanResponse)
}

::google::protobuf::uint8* ScanResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.ScanResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // repeated .kvrpcpb.KvPair pairs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pairs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pairs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.ScanResponse)
  return target;
}

size_t ScanResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.ScanResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .kvrpcpb.KvPair pairs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pairs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pairs(static_cast<int>(i)));
    }
  }

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScanResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.ScanResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ScanResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScanResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.ScanResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.ScanResponse)
    MergeFrom(*source);
  }
}

void ScanResponse::MergeFrom(const ScanResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.ScanResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pairs_.MergeFrom(from.pairs_);
  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
}

void ScanResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.ScanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanResponse::CopyFrom(const ScanResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.ScanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanResponse::IsInitialized() const {
  return true;
}

void ScanResponse::Swap(ScanResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScanResponse::InternalSwap(ScanResponse* other) {
  using std::swap;
  CastToBase(&pairs_)->InternalSwap(CastToBase(&other->pairs_));
  swap(region_error_, other->region_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScanResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Mutation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mutation::kOpFieldNumber;
const int Mutation::kKeyFieldNumber;
const int Mutation::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mutation::Mutation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_Mutation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.Mutation)
}
Mutation::Mutation(const Mutation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  op_ = from.op_;
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.Mutation)
}

void Mutation::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_ = 0;
}

Mutation::~Mutation() {
  // @@protoc_insertion_point(destructor:kvrpcpb.Mutation)
  SharedDtor();
}

void Mutation::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Mutation::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Mutation& Mutation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_Mutation.base);
  return *internal_default_instance();
}


void Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.Mutation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_ = 0;
  _internal_metadata_.Clear();
}

bool Mutation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.Mutation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Op op = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::kvrpcpb::Op >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.Mutation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.Mutation)
  return false;
#undef DO_
}

void Mutation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.Mutation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Op op = 1;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->op(), output);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->key(), output);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.Mutation)
}

::google::protobuf::uint8* Mutation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.Mutation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Op op = 1;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->op(), target);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->key(), target);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.Mutation)
  return target;
}

size_t Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.Mutation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .kvrpcpb.Op op = 1;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Mutation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const Mutation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Mutation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.Mutation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.Mutation)
    MergeFrom(*source);
  }
}

void Mutation::MergeFrom(const Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
}

void Mutation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mutation::CopyFrom(const Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mutation::IsInitialized() const {
  return true;
}

void Mutation::Swap(Mutation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mutation::InternalSwap(Mutation* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(op_, other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Mutation::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PrewriteRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_PrewriteRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrewriteRequest::kContextFieldNumber;
const int PrewriteRequest::kMutationsFieldNumber;
const int PrewriteRequest::kPrimaryLockFieldNumber;
const int PrewriteRequest::kStartVersionFieldNumber;
const int PrewriteRequest::kLockTtlFieldNumber;
const int PrewriteRequest::kSkipConstraintCheckFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrewriteRequest::PrewriteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_PrewriteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.PrewriteRequest)
}
PrewriteRequest::PrewriteRequest(const PrewriteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mutations_(from.mutations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  primary_lock_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.primary_lock().size() > 0) {
    primary_lock_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primary_lock_);
  }
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  ::memcpy(&start_version_, &from.start_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&skip_constraint_check_) -
    reinterpret_cast<char*>(&start_version_)) + sizeof(skip_constraint_check_));
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.PrewriteRequest)
}

void PrewriteRequest::SharedCtor() {
  primary_lock_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skip_constraint_check_) -
      reinterpret_cast<char*>(&context_)) + sizeof(skip_constraint_check_));
}

PrewriteRequest::~PrewriteRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.PrewriteRequest)
  SharedDtor();
}

void PrewriteRequest::SharedDtor() {
  primary_lock_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void PrewriteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PrewriteRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrewriteRequest& PrewriteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_PrewriteRequest.base);
  return *internal_default_instance();
}


void PrewriteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.PrewriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mutations_.Clear();
  primary_lock_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  ::memset(&start_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skip_constraint_check_) -
      reinterpret_cast<char*>(&start_version_)) + sizeof(skip_constraint_check_));
  _internal_metadata_.Clear();
}

bool PrewriteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.PrewriteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .kvrpcpb.Mutation mutations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_mutations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes primary_lock = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_primary_lock()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 start_version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 lock_ttl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lock_ttl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool skip_constraint_check = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &skip_constraint_check_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.PrewriteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.PrewriteRequest)
  return false;
#undef DO_
}

void PrewriteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.PrewriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // repeated .kvrpcpb.Mutation mutations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->mutations(static_cast<int>(i)),
      output);
  }

  // bytes primary_lock = 3;
  if (this->primary_lock().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->primary_lock(), output);
  }

  // uint64 start_version = 4;
  if (this->start_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->start_version(), output);
  }

  // uint64 lock_ttl = 5;
  if (this->lock_ttl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->lock_ttl(), output);
  }

  // bool skip_constraint_check = 6;
  if (this->skip_constraint_check() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->skip_constraint_check(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.PrewriteRequest)
}

::google::protobuf::uint8* PrewriteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.PrewriteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // repeated .kvrpcpb.Mutation mutations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->mutations(static_cast<int>(i)), deterministic, target);
  }

  // bytes primary_lock = 3;
  if (this->primary_lock().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->primary_lock(), target);
  }

  // uint64 start_version = 4;
  if (this->start_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->start_version(), target);
  }

  // uint64 lock_ttl = 5;
  if (this->lock_ttl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->lock_ttl(), target);
  }

  // bool skip_constraint_check = 6;
  if (this->skip_constraint_check() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->skip_constraint_check(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.PrewriteRequest)
  return target;
}

size_t PrewriteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.PrewriteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .kvrpcpb.Mutation mutations = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->mutations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mutations(static_cast<int>(i)));
    }
  }

  // bytes primary_lock = 3;
  if (this->primary_lock().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->primary_lock());
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // uint64 start_version = 4;
  if (this->start_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_version());
  }

  // uint64 lock_ttl = 5;
  if (this->lock_ttl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lock_ttl());
  }

  // bool skip_constraint_check = 6;
  if (this->skip_constraint_check() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrewriteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.PrewriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PrewriteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrewriteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.PrewriteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.PrewriteRequest)
    MergeFrom(*source);
  }
}

void PrewriteRequest::MergeFrom(const PrewriteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.PrewriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mutations_.MergeFrom(from.mutations_);
  if (from.primary_lock().size() > 0) {

    primary_lock_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primary_lock_);
  }
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
  if (from.start_version() != 0) {
    set_start_version(from.start_version());
  }
  if (from.lock_ttl() != 0) {
    set_lock_ttl(from.lock_ttl());
  }
  if (from.skip_constraint_check() != 0) {
    set_skip_constraint_check(from.skip_constraint_check());
  }
}

void PrewriteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.PrewriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrewriteRequest::CopyFrom(const PrewriteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.PrewriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrewriteRequest::IsInitialized() const {
  return true;
}

void PrewriteRequest::Swap(PrewriteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrewriteRequest::InternalSwap(PrewriteRequest* other) {
  using std::swap;
  CastToBase(&mutations_)->InternalSwap(CastToBase(&other->mutations_));
  primary_lock_.Swap(&other->primary_lock_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  swap(start_version_, other->start_version_);
  swap(lock_ttl_, other->lock_ttl_);
  swap(skip_constraint_check_, other->skip_constraint_check_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PrewriteRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PrewriteResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_PrewriteResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
}
void PrewriteResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrewriteResponse::kRegionErrorFieldNumber;
const int PrewriteResponse::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrewriteResponse::PrewriteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_PrewriteResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.PrewriteResponse)
}
PrewriteResponse::PrewriteResponse(const PrewriteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.PrewriteResponse)
}

void PrewriteResponse::SharedCtor() {
  region_error_ = NULL;
}

PrewriteResponse::~PrewriteResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.PrewriteResponse)
  SharedDtor();
}

void PrewriteResponse::SharedDtor() {
  if (this != internal_default_instance()) delete region_error_;
}

void PrewriteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PrewriteResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PrewriteResponse& PrewriteResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_PrewriteResponse.base);
  return *internal_default_instance();
}


void PrewriteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.PrewriteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  _internal_metadata_.Clear();
}

bool PrewriteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.PrewriteResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .kvrpcpb.KeyError errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.PrewriteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.PrewriteResponse)
  return false;
#undef DO_
}

void PrewriteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.PrewriteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // repeated .kvrpcpb.KeyError errors = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->errors(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.PrewriteResponse)
}

::google::protobuf::uint8* PrewriteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.PrewriteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // repeated .kvrpcpb.KeyError errors = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->errors(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.PrewriteResponse)
  return target;
}

size_t PrewriteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.PrewriteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .kvrpcpb.KeyError errors = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->errors(static_cast<int>(i)));
    }
  }

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrewriteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.PrewriteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PrewriteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PrewriteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.PrewriteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.PrewriteResponse)
    MergeFrom(*source);
  }
}

void PrewriteResponse::MergeFrom(const PrewriteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.PrewriteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
}

void PrewriteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.PrewriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrewriteResponse::CopyFrom(const PrewriteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.PrewriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrewriteResponse::IsInitialized() const {
  return true;
}

void PrewriteResponse::Swap(PrewriteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrewriteResponse::InternalSwap(PrewriteResponse* other) {
  using std::swap;
  CastToBase(&errors_)->InternalSwap(CastToBase(&other->errors_));
  swap(region_error_, other->region_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PrewriteResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommitRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_CommitRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommitRequest::kContextFieldNumber;
const int CommitRequest::kStartVersionFieldNumber;
const int CommitRequest::kKeysFieldNumber;
const int CommitRequest::kCommitVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommitRequest::CommitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_CommitRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.CommitRequest)
}
CommitRequest::CommitRequest(const CommitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  ::memcpy(&start_version_, &from.start_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&commit_version_) -
    reinterpret_cast<char*>(&start_version_)) + sizeof(commit_version_));
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.CommitRequest)
}

void CommitRequest::SharedCtor() {
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&commit_version_) -
      reinterpret_cast<char*>(&context_)) + sizeof(commit_version_));
}

CommitRequest::~CommitRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.CommitRequest)
  SharedDtor();
}

void CommitRequest::SharedDtor() {
  if (this != internal_default_instance()) delete context_;
}

void CommitRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CommitRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommitRequest& CommitRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_CommitRequest.base);
  return *internal_default_instance();
}


void CommitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.CommitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  ::memset(&start_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&commit_version_) -
      reinterpret_cast<char*>(&start_version_)) + sizeof(commit_version_));
  _internal_metadata_.Clear();
}

bool CommitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.CommitRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 start_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes keys = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 commit_version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &commit_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.CommitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.CommitRequest)
  return false;
#undef DO_
}

void CommitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.CommitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // uint64 start_version = 2;
  if (this->start_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->start_version(), output);
  }

  // repeated bytes keys = 3;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->keys(i), output);
  }

  // uint64 commit_version = 4;
  if (this->commit_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->commit_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.CommitRequest)
}

::google::protobuf::uint8* CommitRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.CommitRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // uint64 start_version = 2;
  if (this->start_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->start_version(), target);
  }

  // repeated bytes keys = 3;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(3, this->keys(i), target);
  }

  // uint64 commit_version = 4;
  if (this->commit_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->commit_version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.CommitRequest)
  return target;
}

size_t CommitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.CommitRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes keys = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->keys_size());
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->keys(i));
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // uint64 start_version = 2;
  if (this->start_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_version());
  }

  // uint64 commit_version = 4;
  if (this->commit_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->commit_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.CommitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CommitRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommitRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.CommitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.CommitRequest)
    MergeFrom(*source);
  }
}

void CommitRequest::MergeFrom(const CommitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.CommitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
  if (from.start_version() != 0) {
    set_start_version(from.start_version());
  }
  if (from.commit_version() != 0) {
    set_commit_version(from.commit_version());
  }
}

void CommitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.CommitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommitRequest::CopyFrom(const CommitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.CommitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommitRequest::IsInitialized() const {
  return true;
}

void CommitRequest::Swap(CommitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommitRequest::InternalSwap(CommitRequest* other) {
  using std::swap;
  keys_.InternalSwap(CastToBase(&other->keys_));
  swap(context_, other->context_);
  swap(start_version_, other->start_version_);
  swap(commit_version_, other->commit_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommitRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CommitResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_CommitResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
  ::kvrpcpb::_CommitResponse_default_instance_._instance.get_mutable()->error_ = const_cast< ::kvrpcpb::KeyError*>(
      ::kvrpcpb::KeyError::internal_default_instance());
}
void CommitResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommitResponse::kRegionErrorFieldNumber;
const int CommitResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommitResponse::CommitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_CommitResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.CommitResponse)
}
CommitResponse::CommitResponse(const CommitResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  if (from.has_error()) {
    error_ = new ::kvrpcpb::KeyError(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.CommitResponse)
}

void CommitResponse::SharedCtor() {
  ::memset(&region_error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&region_error_)) + sizeof(error_));
}

CommitResponse::~CommitResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.CommitResponse)
  SharedDtor();
}

void CommitResponse::SharedDtor() {
  if (this != internal_default_instance()) delete region_error_;
  if (this != internal_default_instance()) delete error_;
}

void CommitResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CommitResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommitResponse& CommitResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_CommitResponse.base);
  return *internal_default_instance();
}


void CommitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.CommitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool CommitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.CommitResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvrpcpb.KeyError error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.CommitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.CommitResponse)
  return false;
#undef DO_
}

void CommitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.CommitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.CommitResponse)
}

::google::protobuf::uint8* CommitResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.CommitResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_error(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.CommitResponse)
  return target;
}

size_t CommitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.CommitResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.CommitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CommitResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommitResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.CommitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.CommitResponse)
    MergeFrom(*source);
  }
}

void CommitResponse::MergeFrom(const CommitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.CommitResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
  if (from.has_error()) {
    mutable_error()->::kvrpcpb::KeyError::MergeFrom(from.error());
  }
}

void CommitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.CommitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommitResponse::CopyFrom(const CommitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.CommitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommitResponse::IsInitialized() const {
  return true;
}

void CommitResponse::Swap(CommitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommitResponse::InternalSwap(CommitResponse* other) {
  using std::swap;
  swap(region_error_, other->region_error_);
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CommitResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImportRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImportRequest::kMutationsFieldNumber;
const int ImportRequest::kCommitVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImportRequest::ImportRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_ImportRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.ImportRequest)
}
ImportRequest::ImportRequest(const ImportRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mutations_(from.mutations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  commit_version_ = from.commit_version_;
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.ImportRequest)
}

void ImportRequest::SharedCtor() {
  commit_version_ = GOOGLE_ULONGLONG(0);
}

ImportRequest::~ImportRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.ImportRequest)
  SharedDtor();
}

void ImportRequest::SharedDtor() {
}

void ImportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImportRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImportRequest& ImportRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_ImportRequest.base);
  return *internal_default_instance();
}


void ImportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.ImportRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mutations_.Clear();
  commit_version_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ImportRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.ImportRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .kvrpcpb.Mutation mutations = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_mutations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 commit_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &commit_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.ImportRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.ImportRequest)
  return false;
#undef DO_
}

void ImportRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.ImportRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kvrpcpb.Mutation mutations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->mutations(static_cast<int>(i)),
      output);
  }

  // uint64 commit_version = 2;
  if (this->commit_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->commit_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.ImportRequest)
}

::google::protobuf::uint8* ImportRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.ImportRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .kvrpcpb.Mutation mutations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mutations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->mutations(static_cast<int>(i)), deterministic, target);
  }

  // uint64 commit_version = 2;
  if (this->commit_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->commit_version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.ImportRequest)
  return target;
}

size_t ImportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.ImportRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .kvrpcpb.Mutation mutations = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->mutations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mutations(static_cast<int>(i)));
    }
  }

  // uint64 commit_version = 2;
  if (this->commit_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->commit_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImportRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.ImportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImportRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImportRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.ImportRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.ImportRequest)
    MergeFrom(*source);
  }
}

void ImportRequest::MergeFrom(const ImportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.ImportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mutations_.MergeFrom(from.mutations_);
  if (from.commit_version() != 0) {
    set_commit_version(from.commit_version());
  }
}

void ImportRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.ImportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImportRequest::CopyFrom(const ImportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.ImportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImportRequest::IsInitialized() const {
  return true;
}

void ImportRequest::Swap(ImportRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImportRequest::InternalSwap(ImportRequest* other) {
  using std::swap;
  CastToBase(&mutations_)->InternalSwap(CastToBase(&other->mutations_));
  swap(commit_version_, other->commit_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImportRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImportResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_ImportResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
}
void ImportResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImportResponse::kRegionErrorFieldNumber;
const int ImportResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImportResponse::ImportResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_ImportResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.ImportResponse)
}
ImportResponse::ImportResponse(const ImportResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.ImportResponse)
}

void ImportResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_error_ = NULL;
}

ImportResponse::~ImportResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.ImportResponse)
  SharedDtor();
}

void ImportResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete region_error_;
}

void ImportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImportResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImportResponse& ImportResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_ImportResponse.base);
  return *internal_default_instance();
}


void ImportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.ImportResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  _internal_metadata_.Clear();
}

bool ImportResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.ImportResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.ImportResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.ImportResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.ImportResponse)
  return false;
#undef DO_
}

void ImportResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.ImportResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.ImportResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.ImportResponse)
}

::google::protobuf::uint8* ImportResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.ImportResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.ImportResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.ImportResponse)
  return target;
}

size_t ImportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.ImportResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImportResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.ImportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImportResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImportResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.ImportResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.ImportResponse)
    MergeFrom(*source);
  }
}

void ImportResponse::MergeFrom(const ImportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.ImportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
}

void ImportResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.ImportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImportResponse::CopyFrom(const ImportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.ImportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImportResponse::IsInitialized() const {
  return true;
}

void ImportResponse::Swap(ImportResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImportResponse::InternalSwap(ImportResponse* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(region_error_, other->region_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImportResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BatchRollbackRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_BatchRollbackRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchRollbackRequest::kContextFieldNumber;
const int BatchRollbackRequest::kStartVersionFieldNumber;
const int BatchRollbackRequest::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchRollbackRequest::BatchRollbackRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_BatchRollbackRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.BatchRollbackRequest)
}
BatchRollbackRequest::BatchRollbackRequest(const BatchRollbackRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  start_version_ = from.start_version_;
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.BatchRollbackRequest)
}

void BatchRollbackRequest::SharedCtor() {
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_version_) -
      reinterpret_cast<char*>(&context_)) + sizeof(start_version_));
}

BatchRollbackRequest::~BatchRollbackRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.BatchRollbackRequest)
  SharedDtor();
}

void BatchRollbackRequest::SharedDtor() {
  if (this != internal_default_instance()) delete context_;
}

void BatchRollbackRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BatchRollbackRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchRollbackRequest& BatchRollbackRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_BatchRollbackRequest.base);
  return *internal_default_instance();
}


void BatchRollbackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.BatchRollbackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  start_version_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool BatchRollbackRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.BatchRollbackRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 start_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes keys = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.BatchRollbackRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.BatchRollbackRequest)
  return false;
#undef DO_
}

void BatchRollbackRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.BatchRollbackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // uint64 start_version = 2;
  if (this->start_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->start_version(), output);
  }

  // repeated bytes keys = 3;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->keys(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.BatchRollbackRequest)
}

::google::protobuf::uint8* BatchRollbackRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.BatchRollbackRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // uint64 start_version = 2;
  if (this->start_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->start_version(), target);
  }

  // repeated bytes keys = 3;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(3, this->keys(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.BatchRollbackRequest)
  return target;
}

size_t BatchRollbackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.BatchRollbackRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes keys = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->keys_size());
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->keys(i));
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // uint64 start_version = 2;
  if (this->start_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchRollbackRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.BatchRollbackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchRollbackRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchRollbackRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.BatchRollbackRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.BatchRollbackRequest)
    MergeFrom(*source);
  }
}

void BatchRollbackRequest::MergeFrom(const BatchRollbackRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.BatchRollbackRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
  if (from.start_version() != 0) {
    set_start_version(from.start_version());
  }
}

void BatchRollbackRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.BatchRollbackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchRollbackRequest::CopyFrom(const BatchRollbackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.BatchRollbackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchRollbackRequest::IsInitialized() const {
  return true;
}

void BatchRollbackRequest::Swap(BatchRollbackRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchRollbackRequest::InternalSwap(BatchRollbackRequest* other) {
  using std::swap;
  keys_.InternalSwap(CastToBase(&other->keys_));
  swap(context_, other->context_);
  swap(start_version_, other->start_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BatchRollbackRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BatchRollbackResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_BatchRollbackResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
  ::kvrpcpb::_BatchRollbackResponse_default_instance_._instance.get_mutable()->error_ = const_cast< ::kvrpcpb::KeyError*>(
      ::kvrpcpb::KeyError::internal_default_instance());
}
void BatchRollbackResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchRollbackResponse::kRegionErrorFieldNumber;
const int BatchRollbackResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchRollbackResponse::BatchRollbackResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_BatchRollbackResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.BatchRollbackResponse)
}
BatchRollbackResponse::BatchRollbackResponse(const BatchRollbackResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  if (from.has_error()) {
    error_ = new ::kvrpcpb::KeyError(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.BatchRollbackResponse)
}

void BatchRollbackResponse::SharedCtor() {
  ::memset(&region_error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&region_error_)) + sizeof(error_));
}

BatchRollbackResponse::~BatchRollbackResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.BatchRollbackResponse)
  SharedDtor();
}

void BatchRollbackResponse::SharedDtor() {
  if (this != internal_default_instance()) delete region_error_;
  if (this != internal_default_instance()) delete error_;
}

void BatchRollbackResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BatchRollbackResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchRollbackResponse& BatchRollbackResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_BatchRollbackResponse.base);
  return *internal_default_instance();
}


void BatchRollbackResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.BatchRollbackResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool BatchRollbackResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.BatchRollbackResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvrpcpb.KeyError error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.BatchRollbackResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.BatchRollbackResponse)
  return false;
#undef DO_
}

void BatchRollbackResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.BatchRollbackResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.BatchRollbackResponse)
}

::google::protobuf::uint8* BatchRollbackResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.BatchRollbackResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_error(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.BatchRollbackResponse)
  return target;
}

size_t BatchRollbackResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.BatchRollbackResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchRollbackResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.BatchRollbackResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchRollbackResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchRollbackResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.BatchRollbackResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.BatchRollbackResponse)
    MergeFrom(*source);
  }
}

void BatchRollbackResponse::MergeFrom(const BatchRollbackResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.BatchRollbackResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
  if (from.has_error()) {
    mutable_error()->::kvrpcpb::KeyError::MergeFrom(from.error());
  }
}

void BatchRollbackResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.BatchRollbackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchRollbackResponse::CopyFrom(const BatchRollbackResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.BatchRollbackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchRollbackResponse::IsInitialized() const {
  return true;
}

void BatchRollbackResponse::Swap(BatchRollbackResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchRollbackResponse::InternalSwap(BatchRollbackResponse* other) {
  using std::swap;
  swap(region_error_, other->region_error_);
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BatchRollbackResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CleanupRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_CleanupRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CleanupRequest::kContextFieldNumber;
const int CleanupRequest::kKeyFieldNumber;
const int CleanupRequest::kStartVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CleanupRequest::CleanupRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_CleanupRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.CleanupRequest)
}
CleanupRequest::CleanupRequest(const CleanupRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  start_version_ = from.start_version_;
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.CleanupRequest)
}

void CleanupRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_version_) -
      reinterpret_cast<char*>(&context_)) + sizeof(start_version_));
}

CleanupRequest::~CleanupRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.CleanupRequest)
  SharedDtor();
}

void CleanupRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void CleanupRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CleanupRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CleanupRequest& CleanupRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_CleanupRequest.base);
  return *internal_default_instance();
}


void CleanupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.CleanupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  start_version_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool CleanupRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.CleanupRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 start_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.CleanupRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.CleanupRequest)
  return false;
#undef DO_
}

void CleanupRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.CleanupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->key(), output);
  }

  // uint64 start_version = 3;
  if (this->start_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->start_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.CleanupRequest)
}

::google::protobuf::uint8* CleanupRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.CleanupRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->key(), target);
  }

  // uint64 start_version = 3;
  if (this->start_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->start_version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.CleanupRequest)
  return target;
}

size_t CleanupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.CleanupRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // uint64 start_version = 3;
  if (this->start_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CleanupRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.CleanupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CleanupRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CleanupRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.CleanupRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.CleanupRequest)
    MergeFrom(*source);
  }
}

void CleanupRequest::MergeFrom(const CleanupRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.CleanupRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
  if (from.start_version() != 0) {
    set_start_version(from.start_version());
  }
}

void CleanupRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.CleanupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CleanupRequest::CopyFrom(const CleanupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.CleanupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CleanupRequest::IsInitialized() const {
  return true;
}

void CleanupRequest::Swap(CleanupRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CleanupRequest::InternalSwap(CleanupRequest* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  swap(start_version_, other->start_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CleanupRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CleanupResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_CleanupResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
  ::kvrpcpb::_CleanupResponse_default_instance_._instance.get_mutable()->error_ = const_cast< ::kvrpcpb::KeyError*>(
      ::kvrpcpb::KeyError::internal_default_instance());
}
void CleanupResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CleanupResponse::kRegionErrorFieldNumber;
const int CleanupResponse::kErrorFieldNumber;
const int CleanupResponse::kCommitVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CleanupResponse::CleanupResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_CleanupResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.CleanupResponse)
}
CleanupResponse::CleanupResponse(const CleanupResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  if (from.has_error()) {
    error_ = new ::kvrpcpb::KeyError(*from.error_);
  } else {
    error_ = NULL;
  }
  commit_version_ = from.commit_version_;
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.CleanupResponse)
}

void CleanupResponse::SharedCtor() {
  ::memset(&region_error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&commit_version_) -
      reinterpret_cast<char*>(&region_error_)) + sizeof(commit_version_));
}

CleanupResponse::~CleanupResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.CleanupResponse)
  SharedDtor();
}

void CleanupResponse::SharedDtor() {
  if (this != internal_default_instance()) delete region_error_;
  if (this != internal_default_instance()) delete error_;
}

void CleanupResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CleanupResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CleanupResponse& CleanupResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_CleanupResponse.base);
  return *internal_default_instance();
}


void CleanupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.CleanupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  commit_version_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool CleanupResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.CleanupResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvrpcpb.KeyError error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 commit_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &commit_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.CleanupResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.CleanupResponse)
  return false;
#undef DO_
}

void CleanupResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.CleanupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_error(), output);
  }

  // uint64 commit_version = 3;
  if (this->commit_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->commit_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.CleanupResponse)
}

::google::protobuf::uint8* CleanupResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.CleanupResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_error(), deterministic, target);
  }

  // uint64 commit_version = 3;
  if (this->commit_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->commit_version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.CleanupResponse)
  return target;
}

size_t CleanupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.CleanupResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  // uint64 commit_version = 3;
  if (this->commit_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->commit_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CleanupResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.CleanupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CleanupResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CleanupResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.CleanupResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.CleanupResponse)
    MergeFrom(*source);
  }
}

void CleanupResponse::MergeFrom(const CleanupResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.CleanupResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
  if (from.has_error()) {
    mutable_error()->::kvrpcpb::KeyError::MergeFrom(from.error());
  }
  if (from.commit_version() != 0) {
    set_commit_version(from.commit_version());
  }
}

void CleanupResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.CleanupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CleanupResponse::CopyFrom(const CleanupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.CleanupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CleanupResponse::IsInitialized() const {
  return true;
}

void CleanupResponse::Swap(CleanupResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CleanupResponse::InternalSwap(CleanupResponse* other) {
  using std::swap;
  swap(region_error_, other->region_error_);
  swap(error_, other->error_);
  swap(commit_version_, other->commit_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CleanupResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BatchGetRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_BatchGetRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchGetRequest::kContextFieldNumber;
const int BatchGetRequest::kKeysFieldNumber;
const int BatchGetRequest::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchGetRequest::BatchGetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_BatchGetRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.BatchGetRequest)
}
BatchGetRequest::BatchGetRequest(const BatchGetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.BatchGetRequest)
}

void BatchGetRequest::SharedCtor() {
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&context_)) + sizeof(version_));
}

BatchGetRequest::~BatchGetRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.BatchGetRequest)
  SharedDtor();
}

void BatchGetRequest::SharedDtor() {
  if (this != internal_default_instance()) delete context_;
}

void BatchGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BatchGetRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchGetRequest& BatchGetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_BatchGetRequest.base);
  return *internal_default_instance();
}


void BatchGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.BatchGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  version_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool BatchGetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.BatchGetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes keys = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.BatchGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.BatchGetRequest)
  return false;
#undef DO_
}

void BatchGetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.BatchGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // repeated bytes keys = 2;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->keys(i), output);
  }

  // uint64 version = 3;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.BatchGetRequest)
}

::google::protobuf::uint8* BatchGetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.BatchGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // repeated bytes keys = 2;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->keys(i), target);
  }

  // uint64 version = 3;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.BatchGetRequest)
  return target;
}

size_t BatchGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.BatchGetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes keys = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->keys_size());
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->keys(i));
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // uint64 version = 3;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchGetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.BatchGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchGetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchGetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.BatchGetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.BatchGetRequest)
    MergeFrom(*source);
  }
}

void BatchGetRequest::MergeFrom(const BatchGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.BatchGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void BatchGetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.BatchGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchGetRequest::CopyFrom(const BatchGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.BatchGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchGetRequest::IsInitialized() const {
  return true;
}

void BatchGetRequest::Swap(BatchGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchGetRequest::InternalSwap(BatchGetRequest* other) {
  using std::swap;
  keys_.InternalSwap(CastToBase(&other->keys_));
  swap(context_, other->context_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BatchGetRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BatchGetResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_BatchGetResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
}
void BatchGetResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchGetResponse::kRegionErrorFieldNumber;
const int BatchGetResponse::kPairsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchGetResponse::BatchGetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_BatchGetResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.BatchGetResponse)
}
BatchGetResponse::BatchGetResponse(const BatchGetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pairs_(from.pairs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.BatchGetResponse)
}

void BatchGetResponse::SharedCtor() {
  region_error_ = NULL;
}

BatchGetResponse::~BatchGetResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.BatchGetResponse)
  SharedDtor();
}

void BatchGetResponse::SharedDtor() {
  if (this != internal_default_instance()) delete region_error_;
}

void BatchGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BatchGetResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BatchGetResponse& BatchGetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_BatchGetResponse.base);
  return *internal_default_instance();
}


void BatchGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.BatchGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pairs_.Clear();
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  _internal_metadata_.Clear();
}

bool BatchGetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.BatchGetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .kvrpcpb.KvPair pairs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pairs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.BatchGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.BatchGetResponse)
  return false;
#undef DO_
}

void BatchGetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.BatchGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // repeated .kvrpcpb.KvPair pairs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pairs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->pairs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.BatchGetResponse)
}

::google::protobuf::uint8* BatchGetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.BatchGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // repeated .kvrpcpb.KvPair pairs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pairs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pairs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.BatchGetResponse)
  return target;
}

size_t BatchGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.BatchGetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .kvrpcpb.KvPair pairs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pairs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pairs(static_cast<int>(i)));
    }
  }

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchGetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.BatchGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchGetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchGetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.BatchGetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.BatchGetResponse)
    MergeFrom(*source);
  }
}

void BatchGetResponse::MergeFrom(const BatchGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.BatchGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pairs_.MergeFrom(from.pairs_);
  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
}

void BatchGetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.BatchGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchGetResponse::CopyFrom(const BatchGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.BatchGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchGetResponse::IsInitialized() const {
  return true;
}

void BatchGetResponse::Swap(BatchGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchGetResponse::InternalSwap(BatchGetResponse* other) {
  using std::swap;
  CastToBase(&pairs_)->InternalSwap(CastToBase(&other->pairs_));
  swap(region_error_, other->region_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BatchGetResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScanLockRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_ScanLockRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScanLockRequest::kContextFieldNumber;
const int ScanLockRequest::kMaxVersionFieldNumber;
const int ScanLockRequest::kStartKeyFieldNumber;
const int ScanLockRequest::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScanLockRequest::ScanLockRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_ScanLockRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.ScanLockRequest)
}
ScanLockRequest::ScanLockRequest(const ScanLockRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start_key().size() > 0) {
    start_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_key_);
  }
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  ::memcpy(&max_version_, &from.max_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&max_version_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.ScanLockRequest)
}

void ScanLockRequest::SharedCtor() {
  start_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&context_)) + sizeof(limit_));
}

ScanLockRequest::~ScanLockRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.ScanLockRequest)
  SharedDtor();
}

void ScanLockRequest::SharedDtor() {
  start_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void ScanLockRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScanLockRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScanLockRequest& ScanLockRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_ScanLockRequest.base);
  return *internal_default_instance();
}


void ScanLockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.ScanLockRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  start_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  ::memset(&max_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&max_version_)) + sizeof(limit_));
  _internal_metadata_.Clear();
}

bool ScanLockRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.ScanLockRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 max_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes start_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_start_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.ScanLockRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.ScanLockRequest)
  return false;
#undef DO_
}

void ScanLockRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.ScanLockRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // uint64 max_version = 2;
  if (this->max_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->max_version(), output);
  }

  // bytes start_key = 3;
  if (this->start_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->start_key(), output);
  }

  // uint32 limit = 4;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->limit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.ScanLockRequest)
}

::google::protobuf::uint8* ScanLockRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.ScanLockRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // uint64 max_version = 2;
  if (this->max_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->max_version(), target);
  }

  // bytes start_key = 3;
  if (this->start_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->start_key(), target);
  }

  // uint32 limit = 4;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->limit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.ScanLockRequest)
  return target;
}

size_t ScanLockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.ScanLockRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes start_key = 3;
  if (this->start_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->start_key());
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // uint64 max_version = 2;
  if (this->max_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->max_version());
  }

  // uint32 limit = 4;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScanLockRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.ScanLockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ScanLockRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScanLockRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.ScanLockRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.ScanLockRequest)
    MergeFrom(*source);
  }
}

void ScanLockRequest::MergeFrom(const ScanLockRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.ScanLockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_key().size() > 0) {

    start_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_key_);
  }
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
  if (from.max_version() != 0) {
    set_max_version(from.max_version());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
}

void ScanLockRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.ScanLockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanLockRequest::CopyFrom(const ScanLockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.ScanLockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanLockRequest::IsInitialized() const {
  return true;
}

void ScanLockRequest::Swap(ScanLockRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScanLockRequest::InternalSwap(ScanLockRequest* other) {
  using std::swap;
  start_key_.Swap(&other->start_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  swap(max_version_, other->max_version_);
  swap(limit_, other->limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScanLockRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScanLockResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_ScanLockResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
  ::kvrpcpb::_ScanLockResponse_default_instance_._instance.get_mutable()->error_ = const_cast< ::kvrpcpb::KeyError*>(
      ::kvrpcpb::KeyError::internal_default_instance());
}
void ScanLockResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScanLockResponse::kRegionErrorFieldNumber;
const int ScanLockResponse::kErrorFieldNumber;
const int ScanLockResponse::kLocksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScanLockResponse::ScanLockResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_ScanLockResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.ScanLockResponse)
}
ScanLockResponse::ScanLockResponse(const ScanLockResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      locks_(from.locks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  if (from.has_error()) {
    error_ = new ::kvrpcpb::KeyError(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.ScanLockResponse)
}

void ScanLockResponse::SharedCtor() {
  ::memset(&region_error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&region_error_)) + sizeof(error_));
}

ScanLockResponse::~ScanLockResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.ScanLockResponse)
  SharedDtor();
}

void ScanLockResponse::SharedDtor() {
  if (this != internal_default_instance()) delete region_error_;
  if (this != internal_default_instance()) delete error_;
}

void ScanLockResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScanLockResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScanLockResponse& ScanLockResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_ScanLockResponse.base);
  return *internal_default_instance();
}


void ScanLockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.ScanLockResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locks_.Clear();
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool ScanLockResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.ScanLockResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvrpcpb.KeyError error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .kvrpcpb.LockInfo locks = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_locks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.ScanLockResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.ScanLockResponse)
  return false;
#undef DO_
}

void ScanLockResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.ScanLockResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_error(), output);
  }

  // repeated .kvrpcpb.LockInfo locks = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->locks(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.ScanLockResponse)
}

::google::protobuf::uint8* ScanLockResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.ScanLockResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_error(), deterministic, target);
  }

  // repeated .kvrpcpb.LockInfo locks = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->locks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->locks(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.ScanLockResponse)
  return target;
}

size_t ScanLockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.ScanLockResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .kvrpcpb.LockInfo locks = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->locks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->locks(static_cast<int>(i)));
    }
  }

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScanLockResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.ScanLockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ScanLockResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScanLockResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.ScanLockResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.ScanLockResponse)
    MergeFrom(*source);
  }
}

void ScanLockResponse::MergeFrom(const ScanLockResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.ScanLockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locks_.MergeFrom(from.locks_);
  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
  if (from.has_error()) {
    mutable_error()->::kvrpcpb::KeyError::MergeFrom(from.error());
  }
}

void ScanLockResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.ScanLockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanLockResponse::CopyFrom(const ScanLockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.ScanLockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanLockResponse::IsInitialized() const {
  return true;
}

void ScanLockResponse::Swap(ScanLockResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScanLockResponse::InternalSwap(ScanLockResponse* other) {
  using std::swap;
  CastToBase(&locks_)->InternalSwap(CastToBase(&other->locks_));
  swap(region_error_, other->region_error_);
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScanLockResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TxnInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxnInfo::kTxnFieldNumber;
const int TxnInfo::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxnInfo::TxnInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_TxnInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.TxnInfo)
}
TxnInfo::TxnInfo(const TxnInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&txn_, &from.txn_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&txn_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.TxnInfo)
}

void TxnInfo::SharedCtor() {
  ::memset(&txn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&txn_)) + sizeof(status_));
}

TxnInfo::~TxnInfo() {
  // @@protoc_insertion_point(destructor:kvrpcpb.TxnInfo)
  SharedDtor();
}

void TxnInfo::SharedDtor() {
}

void TxnInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TxnInfo::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TxnInfo& TxnInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_TxnInfo.base);
  return *internal_default_instance();
}


void TxnInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.TxnInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&txn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&txn_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool TxnInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.TxnInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 txn = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &txn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.TxnInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.TxnInfo)
  return false;
#undef DO_
}

void TxnInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.TxnInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 txn = 1;
  if (this->txn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->txn(), output);
  }

  // uint64 status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.TxnInfo)
}

::google::protobuf::uint8* TxnInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.TxnInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 txn = 1;
  if (this->txn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->txn(), target);
  }

  // uint64 status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.TxnInfo)
  return target;
}

size_t TxnInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.TxnInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 txn = 1;
  if (this->txn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->txn());
  }

  // uint64 status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TxnInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.TxnInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TxnInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TxnInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.TxnInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.TxnInfo)
    MergeFrom(*source);
  }
}

void TxnInfo::MergeFrom(const TxnInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.TxnInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.txn() != 0) {
    set_txn(from.txn());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void TxnInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.TxnInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxnInfo::CopyFrom(const TxnInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.TxnInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxnInfo::IsInitialized() const {
  return true;
}

void TxnInfo::Swap(TxnInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxnInfo::InternalSwap(TxnInfo* other) {
  using std::swap;
  swap(txn_, other->txn_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TxnInfo::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResolveLockRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_ResolveLockRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResolveLockRequest::kContextFieldNumber;
const int ResolveLockRequest::kStartVersionFieldNumber;
const int ResolveLockRequest::kCommitVersionFieldNumber;
const int ResolveLockRequest::kTxnInfosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResolveLockRequest::ResolveLockRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_ResolveLockRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.ResolveLockRequest)
}
ResolveLockRequest::ResolveLockRequest(const ResolveLockRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      txn_infos_(from.txn_infos_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  ::memcpy(&start_version_, &from.start_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&commit_version_) -
    reinterpret_cast<char*>(&start_version_)) + sizeof(commit_version_));
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.ResolveLockRequest)
}

void ResolveLockRequest::SharedCtor() {
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&commit_version_) -
      reinterpret_cast<char*>(&context_)) + sizeof(commit_version_));
}

ResolveLockRequest::~ResolveLockRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.ResolveLockRequest)
  SharedDtor();
}

void ResolveLockRequest::SharedDtor() {
  if (this != internal_default_instance()) delete context_;
}

void ResolveLockRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResolveLockRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResolveLockRequest& ResolveLockRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_ResolveLockRequest.base);
  return *internal_default_instance();
}


void ResolveLockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.ResolveLockRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txn_infos_.Clear();
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  ::memset(&start_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&commit_version_) -
      reinterpret_cast<char*>(&start_version_)) + sizeof(commit_version_));
  _internal_metadata_.Clear();
}

bool ResolveLockRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.ResolveLockRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 start_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 commit_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &commit_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .kvrpcpb.TxnInfo txn_infos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_txn_infos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.ResolveLockRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.ResolveLockRequest)
  return false;
#undef DO_
}

void ResolveLockRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.ResolveLockRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // uint64 start_version = 2;
  if (this->start_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->start_version(), output);
  }

  // uint64 commit_version = 3;
  if (this->commit_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->commit_version(), output);
  }

  // repeated .kvrpcpb.TxnInfo txn_infos = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->txn_infos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->txn_infos(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.ResolveLockRequest)
}

::google::protobuf::uint8* ResolveLockRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.ResolveLockRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // uint64 start_version = 2;
  if (this->start_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->start_version(), target);
  }

  // uint64 commit_version = 3;
  if (this->commit_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->commit_version(), target);
  }

  // repeated .kvrpcpb.TxnInfo txn_infos = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->txn_infos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->txn_infos(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.ResolveLockRequest)
  return target;
}

size_t ResolveLockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.ResolveLockRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .kvrpcpb.TxnInfo txn_infos = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->txn_infos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->txn_infos(static_cast<int>(i)));
    }
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // uint64 start_version = 2;
  if (this->start_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_version());
  }

  // uint64 commit_version = 3;
  if (this->commit_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->commit_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResolveLockRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.ResolveLockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResolveLockRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResolveLockRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.ResolveLockRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.ResolveLockRequest)
    MergeFrom(*source);
  }
}

void ResolveLockRequest::MergeFrom(const ResolveLockRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.ResolveLockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  txn_infos_.MergeFrom(from.txn_infos_);
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
  if (from.start_version() != 0) {
    set_start_version(from.start_version());
  }
  if (from.commit_version() != 0) {
    set_commit_version(from.commit_version());
  }
}

void ResolveLockRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.ResolveLockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResolveLockRequest::CopyFrom(const ResolveLockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.ResolveLockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResolveLockRequest::IsInitialized() const {
  return true;
}

void ResolveLockRequest::Swap(ResolveLockRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResolveLockRequest::InternalSwap(ResolveLockRequest* other) {
  using std::swap;
  CastToBase(&txn_infos_)->InternalSwap(CastToBase(&other->txn_infos_));
  swap(context_, other->context_);
  swap(start_version_, other->start_version_);
  swap(commit_version_, other->commit_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResolveLockRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResolveLockResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_ResolveLockResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
  ::kvrpcpb::_ResolveLockResponse_default_instance_._instance.get_mutable()->error_ = const_cast< ::kvrpcpb::KeyError*>(
      ::kvrpcpb::KeyError::internal_default_instance());
}
void ResolveLockResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResolveLockResponse::kRegionErrorFieldNumber;
const int ResolveLockResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResolveLockResponse::ResolveLockResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_ResolveLockResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.ResolveLockResponse)
}
ResolveLockResponse::ResolveLockResponse(const ResolveLockResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  if (from.has_error()) {
    error_ = new ::kvrpcpb::KeyError(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.ResolveLockResponse)
}

void ResolveLockResponse::SharedCtor() {
  ::memset(&region_error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&region_error_)) + sizeof(error_));
}

ResolveLockResponse::~ResolveLockResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.ResolveLockResponse)
  SharedDtor();
}

void ResolveLockResponse::SharedDtor() {
  if (this != internal_default_instance()) delete region_error_;
  if (this != internal_default_instance()) delete error_;
}

void ResolveLockResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResolveLockResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResolveLockResponse& ResolveLockResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_ResolveLockResponse.base);
  return *internal_default_instance();
}


void ResolveLockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.ResolveLockResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool ResolveLockResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.ResolveLockResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvrpcpb.KeyError error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.ResolveLockResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.ResolveLockResponse)
  return false;
#undef DO_
}

void ResolveLockResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.ResolveLockResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.ResolveLockResponse)
}

::google::protobuf::uint8* ResolveLockResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.ResolveLockResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_error(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.ResolveLockResponse)
  return target;
}

size_t ResolveLockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.ResolveLockResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResolveLockResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.ResolveLockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ResolveLockResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResolveLockResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.ResolveLockResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.ResolveLockResponse)
    MergeFrom(*source);
  }
}

void ResolveLockResponse::MergeFrom(const ResolveLockResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.ResolveLockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
  if (from.has_error()) {
    mutable_error()->::kvrpcpb::KeyError::MergeFrom(from.error());
  }
}

void ResolveLockResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.ResolveLockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResolveLockResponse::CopyFrom(const ResolveLockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.ResolveLockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResolveLockResponse::IsInitialized() const {
  return true;
}

void ResolveLockResponse::Swap(ResolveLockResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResolveLockResponse::InternalSwap(ResolveLockResponse* other) {
  using std::swap;
  swap(region_error_, other->region_error_);
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResolveLockResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GCRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_GCRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GCRequest::kContextFieldNumber;
const int GCRequest::kSafePointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GCRequest::GCRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_GCRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.GCRequest)
}
GCRequest::GCRequest(const GCRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  safe_point_ = from.safe_point_;
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.GCRequest)
}

void GCRequest::SharedCtor() {
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&safe_point_) -
      reinterpret_cast<char*>(&context_)) + sizeof(safe_point_));
}

GCRequest::~GCRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.GCRequest)
  SharedDtor();
}

void GCRequest::SharedDtor() {
  if (this != internal_default_instance()) delete context_;
}

void GCRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GCRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GCRequest& GCRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_GCRequest.base);
  return *internal_default_instance();
}


void GCRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.GCRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  safe_point_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool GCRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.GCRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 safe_point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &safe_point_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.GCRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.GCRequest)
  return false;
#undef DO_
}

void GCRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.GCRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // uint64 safe_point = 2;
  if (this->safe_point() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->safe_point(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.GCRequest)
}

::google::protobuf::uint8* GCRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.GCRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // uint64 safe_point = 2;
  if (this->safe_point() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->safe_point(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.GCRequest)
  return target;
}

size_t GCRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.GCRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // uint64 safe_point = 2;
  if (this->safe_point() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->safe_point());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GCRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.GCRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GCRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GCRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.GCRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.GCRequest)
    MergeFrom(*source);
  }
}

void GCRequest::MergeFrom(const GCRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.GCRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
  if (from.safe_point() != 0) {
    set_safe_point(from.safe_point());
  }
}

void GCRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.GCRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCRequest::CopyFrom(const GCRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.GCRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCRequest::IsInitialized() const {
  return true;
}

void GCRequest::Swap(GCRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GCRequest::InternalSwap(GCRequest* other) {
  using std::swap;
  swap(context_, other->context_);
  swap(safe_point_, other->safe_point_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GCRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GCResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_GCResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
  ::kvrpcpb::_GCResponse_default_instance_._instance.get_mutable()->error_ = const_cast< ::kvrpcpb::KeyError*>(
      ::kvrpcpb::KeyError::internal_default_instance());
}
void GCResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GCResponse::kRegionErrorFieldNumber;
const int GCResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GCResponse::GCResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_GCResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.GCResponse)
}
GCResponse::GCResponse(const GCResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  if (from.has_error()) {
    error_ = new ::kvrpcpb::KeyError(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.GCResponse)
}

void GCResponse::SharedCtor() {
  ::memset(&region_error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&region_error_)) + sizeof(error_));
}

GCResponse::~GCResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.GCResponse)
  SharedDtor();
}

void GCResponse::SharedDtor() {
  if (this != internal_default_instance()) delete region_error_;
  if (this != internal_default_instance()) delete error_;
}

void GCResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GCResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GCResponse& GCResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_GCResponse.base);
  return *internal_default_instance();
}


void GCResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.GCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool GCResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.GCResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvrpcpb.KeyError error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.GCResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.GCResponse)
  return false;
#undef DO_
}

void GCResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.GCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.GCResponse)
}

::google::protobuf::uint8* GCResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.GCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_error(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.GCResponse)
  return target;
}

size_t GCResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.GCResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  // .kvrpcpb.KeyError error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GCResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.GCResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GCResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GCResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.GCResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.GCResponse)
    MergeFrom(*source);
  }
}

void GCResponse::MergeFrom(const GCResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.GCResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
  if (from.has_error()) {
    mutable_error()->::kvrpcpb::KeyError::MergeFrom(from.error());
  }
}

void GCResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.GCResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GCResponse::CopyFrom(const GCResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.GCResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GCResponse::IsInitialized() const {
  return true;
}

void GCResponse::Swap(GCResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GCResponse::InternalSwap(GCResponse* other) {
  using std::swap;
  swap(region_error_, other->region_error_);
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GCResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RawGetRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_RawGetRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RawGetRequest::kContextFieldNumber;
const int RawGetRequest::kKeyFieldNumber;
const int RawGetRequest::kCfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RawGetRequest::RawGetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_RawGetRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.RawGetRequest)
}
RawGetRequest::RawGetRequest(const RawGetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cf().size() > 0) {
    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.RawGetRequest)
}

void RawGetRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_ = NULL;
}

RawGetRequest::~RawGetRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.RawGetRequest)
  SharedDtor();
}

void RawGetRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void RawGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RawGetRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RawGetRequest& RawGetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_RawGetRequest.base);
  return *internal_default_instance();
}


void RawGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.RawGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  _internal_metadata_.Clear();
}

bool RawGetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.RawGetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cf = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cf()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cf().data(), static_cast<int>(this->cf().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.RawGetRequest.cf"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.RawGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.RawGetRequest)
  return false;
#undef DO_
}

void RawGetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.RawGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->key(), output);
  }

  // string cf = 3;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawGetRequest.cf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.RawGetRequest)
}

::google::protobuf::uint8* RawGetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.RawGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->key(), target);
  }

  // string cf = 3;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawGetRequest.cf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.RawGetRequest)
  return target;
}

size_t RawGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.RawGetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // string cf = 3;
  if (this->cf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cf());
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawGetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.RawGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RawGetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RawGetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.RawGetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.RawGetRequest)
    MergeFrom(*source);
  }
}

void RawGetRequest::MergeFrom(const RawGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.RawGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.cf().size() > 0) {

    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
}

void RawGetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.RawGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawGetRequest::CopyFrom(const RawGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.RawGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawGetRequest::IsInitialized() const {
  return true;
}

void RawGetRequest::Swap(RawGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RawGetRequest::InternalSwap(RawGetRequest* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cf_.Swap(&other->cf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RawGetRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RawGetResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_RawGetResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
}
void RawGetResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RawGetResponse::kRegionErrorFieldNumber;
const int RawGetResponse::kErrorFieldNumber;
const int RawGetResponse::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RawGetResponse::RawGetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_RawGetResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.RawGetResponse)
}
RawGetResponse::RawGetResponse(const RawGetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.RawGetResponse)
}

void RawGetResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_error_ = NULL;
}

RawGetResponse::~RawGetResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.RawGetResponse)
  SharedDtor();
}

void RawGetResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete region_error_;
}

void RawGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RawGetResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RawGetResponse& RawGetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_RawGetResponse.base);
  return *internal_default_instance();
}


void RawGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.RawGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  _internal_metadata_.Clear();
}

bool RawGetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.RawGetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.RawGetResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.RawGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.RawGetResponse)
  return false;
#undef DO_
}

void RawGetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.RawGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawGetResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.RawGetResponse)
}

::google::protobuf::uint8* RawGetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.RawGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawGetResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.RawGetResponse)
  return target;
}

size_t RawGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.RawGetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawGetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.RawGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RawGetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RawGetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.RawGetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.RawGetResponse)
    MergeFrom(*source);
  }
}

void RawGetResponse::MergeFrom(const RawGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.RawGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
}

void RawGetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.RawGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawGetResponse::CopyFrom(const RawGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.RawGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawGetResponse::IsInitialized() const {
  return true;
}

void RawGetResponse::Swap(RawGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RawGetResponse::InternalSwap(RawGetResponse* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(region_error_, other->region_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RawGetResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RawPutRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_RawPutRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RawPutRequest::kContextFieldNumber;
const int RawPutRequest::kKeyFieldNumber;
const int RawPutRequest::kValueFieldNumber;
const int RawPutRequest::kCfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RawPutRequest::RawPutRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_RawPutRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.RawPutRequest)
}
RawPutRequest::RawPutRequest(const RawPutRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cf().size() > 0) {
    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.RawPutRequest)
}

void RawPutRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_ = NULL;
}

RawPutRequest::~RawPutRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.RawPutRequest)
  SharedDtor();
}

void RawPutRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void RawPutRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RawPutRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RawPutRequest& RawPutRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_RawPutRequest.base);
  return *internal_default_instance();
}


void RawPutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.RawPutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  _internal_metadata_.Clear();
}

bool RawPutRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.RawPutRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cf = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cf()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cf().data(), static_cast<int>(this->cf().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.RawPutRequest.cf"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.RawPutRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.RawPutRequest)
  return false;
#undef DO_
}

void RawPutRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.RawPutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->key(), output);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->value(), output);
  }

  // string cf = 4;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawPutRequest.cf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.RawPutRequest)
}

::google::protobuf::uint8* RawPutRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.RawPutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->key(), target);
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->value(), target);
  }

  // string cf = 4;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawPutRequest.cf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.RawPutRequest)
  return target;
}

size_t RawPutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.RawPutRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // bytes value = 3;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // string cf = 4;
  if (this->cf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cf());
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawPutRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.RawPutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RawPutRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RawPutRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.RawPutRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.RawPutRequest)
    MergeFrom(*source);
  }
}

void RawPutRequest::MergeFrom(const RawPutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.RawPutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.cf().size() > 0) {

    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
}

void RawPutRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.RawPutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawPutRequest::CopyFrom(const RawPutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.RawPutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawPutRequest::IsInitialized() const {
  return true;
}

void RawPutRequest::Swap(RawPutRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RawPutRequest::InternalSwap(RawPutRequest* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cf_.Swap(&other->cf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RawPutRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RawPutResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_RawPutResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
}
void RawPutResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RawPutResponse::kRegionErrorFieldNumber;
const int RawPutResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RawPutResponse::RawPutResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_RawPutResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.RawPutResponse)
}
RawPutResponse::RawPutResponse(const RawPutResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.RawPutResponse)
}

void RawPutResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_error_ = NULL;
}

RawPutResponse::~RawPutResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.RawPutResponse)
  SharedDtor();
}

void RawPutResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete region_error_;
}

void RawPutResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RawPutResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RawPutResponse& RawPutResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_RawPutResponse.base);
  return *internal_default_instance();
}


void RawPutResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.RawPutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  _internal_metadata_.Clear();
}

bool RawPutResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.RawPutResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.RawPutResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.RawPutResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.RawPutResponse)
  return false;
#undef DO_
}

void RawPutResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.RawPutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawPutResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.RawPutResponse)
}

::google::protobuf::uint8* RawPutResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.RawPutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawPutResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.RawPutResponse)
  return target;
}

size_t RawPutResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.RawPutResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawPutResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.RawPutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RawPutResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RawPutResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.RawPutResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.RawPutResponse)
    MergeFrom(*source);
  }
}

void RawPutResponse::MergeFrom(const RawPutResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.RawPutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
}

void RawPutResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.RawPutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawPutResponse::CopyFrom(const RawPutResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.RawPutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawPutResponse::IsInitialized() const {
  return true;
}

void RawPutResponse::Swap(RawPutResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RawPutResponse::InternalSwap(RawPutResponse* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(region_error_, other->region_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RawPutResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RawBatchPutRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_RawBatchPutRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RawBatchPutRequest::kContextFieldNumber;
const int RawBatchPutRequest::kPairsFieldNumber;
const int RawBatchPutRequest::kCfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RawBatchPutRequest::RawBatchPutRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_RawBatchPutRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.RawBatchPutRequest)
}
RawBatchPutRequest::RawBatchPutRequest(const RawBatchPutRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pairs_(from.pairs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cf().size() > 0) {
    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.RawBatchPutRequest)
}

void RawBatchPutRequest::SharedCtor() {
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_ = NULL;
}

RawBatchPutRequest::~RawBatchPutRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.RawBatchPutRequest)
  SharedDtor();
}

void RawBatchPutRequest::SharedDtor() {
  cf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void RawBatchPutRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RawBatchPutRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RawBatchPutRequest& RawBatchPutRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_RawBatchPutRequest.base);
  return *internal_default_instance();
}


void RawBatchPutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.RawBatchPutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pairs_.Clear();
  cf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  _internal_metadata_.Clear();
}

bool RawBatchPutRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.RawBatchPutRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .kvrpcpb.KvPair pairs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pairs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cf = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cf()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cf().data(), static_cast<int>(this->cf().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.RawBatchPutRequest.cf"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.RawBatchPutRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.RawBatchPutRequest)
  return false;
#undef DO_
}

void RawBatchPutRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.RawBatchPutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // repeated .kvrpcpb.KvPair pairs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pairs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->pairs(static_cast<int>(i)),
      output);
  }

  // string cf = 3;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawBatchPutRequest.cf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.RawBatchPutRequest)
}

::google::protobuf::uint8* RawBatchPutRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.RawBatchPutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // repeated .kvrpcpb.KvPair pairs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pairs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pairs(static_cast<int>(i)), deterministic, target);
  }

  // string cf = 3;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawBatchPutRequest.cf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.RawBatchPutRequest)
  return target;
}

size_t RawBatchPutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.RawBatchPutRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .kvrpcpb.KvPair pairs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pairs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pairs(static_cast<int>(i)));
    }
  }

  // string cf = 3;
  if (this->cf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cf());
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawBatchPutRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.RawBatchPutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RawBatchPutRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RawBatchPutRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.RawBatchPutRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.RawBatchPutRequest)
    MergeFrom(*source);
  }
}

void RawBatchPutRequest::MergeFrom(const RawBatchPutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.RawBatchPutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pairs_.MergeFrom(from.pairs_);
  if (from.cf().size() > 0) {

    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
}

void RawBatchPutRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.RawBatchPutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawBatchPutRequest::CopyFrom(const RawBatchPutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.RawBatchPutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawBatchPutRequest::IsInitialized() const {
  return true;
}

void RawBatchPutRequest::Swap(RawBatchPutRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RawBatchPutRequest::InternalSwap(RawBatchPutRequest* other) {
  using std::swap;
  CastToBase(&pairs_)->InternalSwap(CastToBase(&other->pairs_));
  cf_.Swap(&other->cf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RawBatchPutRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RawBatchPutResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_RawBatchPutResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
}
void RawBatchPutResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RawBatchPutResponse::kRegionErrorFieldNumber;
const int RawBatchPutResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RawBatchPutResponse::RawBatchPutResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_RawBatchPutResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.RawBatchPutResponse)
}
RawBatchPutResponse::RawBatchPutResponse(const RawBatchPutResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.RawBatchPutResponse)
}

void RawBatchPutResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_error_ = NULL;
}

RawBatchPutResponse::~RawBatchPutResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.RawBatchPutResponse)
  SharedDtor();
}

void RawBatchPutResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete region_error_;
}

void RawBatchPutResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RawBatchPutResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RawBatchPutResponse& RawBatchPutResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_RawBatchPutResponse.base);
  return *internal_default_instance();
}


void RawBatchPutResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.RawBatchPutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  _internal_metadata_.Clear();
}

bool RawBatchPutResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.RawBatchPutResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.RawBatchPutResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.RawBatchPutResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.RawBatchPutResponse)
  return false;
#undef DO_
}

void RawBatchPutResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.RawBatchPutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawBatchPutResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.RawBatchPutResponse)
}

::google::protobuf::uint8* RawBatchPutResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.RawBatchPutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawBatchPutResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.RawBatchPutResponse)
  return target;
}

size_t RawBatchPutResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.RawBatchPutResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawBatchPutResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.RawBatchPutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RawBatchPutResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RawBatchPutResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.RawBatchPutResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.RawBatchPutResponse)
    MergeFrom(*source);
  }
}

void RawBatchPutResponse::MergeFrom(const RawBatchPutResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.RawBatchPutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
}

void RawBatchPutResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.RawBatchPutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawBatchPutResponse::CopyFrom(const RawBatchPutResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.RawBatchPutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawBatchPutResponse::IsInitialized() const {
  return true;
}

void RawBatchPutResponse::Swap(RawBatchPutResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RawBatchPutResponse::InternalSwap(RawBatchPutResponse* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(region_error_, other->region_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RawBatchPutResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RawBatchGetRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_RawBatchGetRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RawBatchGetRequest::kContextFieldNumber;
const int RawBatchGetRequest::kKeysFieldNumber;
const int RawBatchGetRequest::kCfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RawBatchGetRequest::RawBatchGetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_RawBatchGetRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.RawBatchGetRequest)
}
RawBatchGetRequest::RawBatchGetRequest(const RawBatchGetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cf().size() > 0) {
    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.RawBatchGetRequest)
}

void RawBatchGetRequest::SharedCtor() {
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_ = NULL;
}

RawBatchGetRequest::~RawBatchGetRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.RawBatchGetRequest)
  SharedDtor();
}

void RawBatchGetRequest::SharedDtor() {
  cf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void RawBatchGetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RawBatchGetRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RawBatchGetRequest& RawBatchGetRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_RawBatchGetRequest.base);
  return *internal_default_instance();
}


void RawBatchGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.RawBatchGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  cf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  _internal_metadata_.Clear();
}

bool RawBatchGetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.RawBatchGetRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes keys = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cf = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cf()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cf().data(), static_cast<int>(this->cf().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.RawBatchGetRequest.cf"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.RawBatchGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.RawBatchGetRequest)
  return false;
#undef DO_
}

void RawBatchGetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.RawBatchGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // repeated bytes keys = 2;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->keys(i), output);
  }

  // string cf = 3;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawBatchGetRequest.cf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.RawBatchGetRequest)
}

::google::protobuf::uint8* RawBatchGetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.RawBatchGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // repeated bytes keys = 2;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->keys(i), target);
  }

  // string cf = 3;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawBatchGetRequest.cf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.RawBatchGetRequest)
  return target;
}

size_t RawBatchGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.RawBatchGetRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes keys = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->keys_size());
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->keys(i));
  }

  // string cf = 3;
  if (this->cf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cf());
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawBatchGetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.RawBatchGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RawBatchGetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RawBatchGetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.RawBatchGetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.RawBatchGetRequest)
    MergeFrom(*source);
  }
}

void RawBatchGetRequest::MergeFrom(const RawBatchGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.RawBatchGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  if (from.cf().size() > 0) {

    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
}

void RawBatchGetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.RawBatchGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawBatchGetRequest::CopyFrom(const RawBatchGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.RawBatchGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawBatchGetRequest::IsInitialized() const {
  return true;
}

void RawBatchGetRequest::Swap(RawBatchGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RawBatchGetRequest::InternalSwap(RawBatchGetRequest* other) {
  using std::swap;
  keys_.InternalSwap(CastToBase(&other->keys_));
  cf_.Swap(&other->cf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RawBatchGetRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RawBatchGetResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_RawBatchGetResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
}
void RawBatchGetResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RawBatchGetResponse::kRegionErrorFieldNumber;
const int RawBatchGetResponse::kPairsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RawBatchGetResponse::RawBatchGetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_RawBatchGetResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.RawBatchGetResponse)
}
RawBatchGetResponse::RawBatchGetResponse(const RawBatchGetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pairs_(from.pairs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.RawBatchGetResponse)
}

void RawBatchGetResponse::SharedCtor() {
  region_error_ = NULL;
}

RawBatchGetResponse::~RawBatchGetResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.RawBatchGetResponse)
  SharedDtor();
}

void RawBatchGetResponse::SharedDtor() {
  if (this != internal_default_instance()) delete region_error_;
}

void RawBatchGetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RawBatchGetResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RawBatchGetResponse& RawBatchGetResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_RawBatchGetResponse.base);
  return *internal_default_instance();
}


void RawBatchGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.RawBatchGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pairs_.Clear();
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  _internal_metadata_.Clear();
}

bool RawBatchGetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.RawBatchGetResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .kvrpcpb.KvPair pairs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pairs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.RawBatchGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.RawBatchGetResponse)
  return false;
#undef DO_
}

void RawBatchGetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.RawBatchGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // repeated .kvrpcpb.KvPair pairs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pairs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->pairs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.RawBatchGetResponse)
}

::google::protobuf::uint8* RawBatchGetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.RawBatchGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // repeated .kvrpcpb.KvPair pairs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pairs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pairs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.RawBatchGetResponse)
  return target;
}

size_t RawBatchGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.RawBatchGetResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .kvrpcpb.KvPair pairs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pairs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pairs(static_cast<int>(i)));
    }
  }

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawBatchGetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.RawBatchGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RawBatchGetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RawBatchGetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.RawBatchGetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.RawBatchGetResponse)
    MergeFrom(*source);
  }
}

void RawBatchGetResponse::MergeFrom(const RawBatchGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.RawBatchGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pairs_.MergeFrom(from.pairs_);
  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
}

void RawBatchGetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.RawBatchGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawBatchGetResponse::CopyFrom(const RawBatchGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.RawBatchGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawBatchGetResponse::IsInitialized() const {
  return true;
}

void RawBatchGetResponse::Swap(RawBatchGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RawBatchGetResponse::InternalSwap(RawBatchGetResponse* other) {
  using std::swap;
  CastToBase(&pairs_)->InternalSwap(CastToBase(&other->pairs_));
  swap(region_error_, other->region_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RawBatchGetResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RawDeleteRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_RawDeleteRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RawDeleteRequest::kContextFieldNumber;
const int RawDeleteRequest::kKeyFieldNumber;
const int RawDeleteRequest::kCfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RawDeleteRequest::RawDeleteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_RawDeleteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.RawDeleteRequest)
}
RawDeleteRequest::RawDeleteRequest(const RawDeleteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cf().size() > 0) {
    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.RawDeleteRequest)
}

void RawDeleteRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_ = NULL;
}

RawDeleteRequest::~RawDeleteRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.RawDeleteRequest)
  SharedDtor();
}

void RawDeleteRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void RawDeleteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RawDeleteRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RawDeleteRequest& RawDeleteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_RawDeleteRequest.base);
  return *internal_default_instance();
}


void RawDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.RawDeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  _internal_metadata_.Clear();
}

bool RawDeleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.RawDeleteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cf = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cf()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cf().data(), static_cast<int>(this->cf().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.RawDeleteRequest.cf"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.RawDeleteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.RawDeleteRequest)
  return false;
#undef DO_
}

void RawDeleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.RawDeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->key(), output);
  }

  // string cf = 3;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawDeleteRequest.cf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.RawDeleteRequest)
}

::google::protobuf::uint8* RawDeleteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.RawDeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->key(), target);
  }

  // string cf = 3;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawDeleteRequest.cf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.RawDeleteRequest)
  return target;
}

size_t RawDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.RawDeleteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // string cf = 3;
  if (this->cf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cf());
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawDeleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.RawDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RawDeleteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RawDeleteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.RawDeleteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.RawDeleteRequest)
    MergeFrom(*source);
  }
}

void RawDeleteRequest::MergeFrom(const RawDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.RawDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.cf().size() > 0) {

    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
}

void RawDeleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.RawDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawDeleteRequest::CopyFrom(const RawDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.RawDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawDeleteRequest::IsInitialized() const {
  return true;
}

void RawDeleteRequest::Swap(RawDeleteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RawDeleteRequest::InternalSwap(RawDeleteRequest* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cf_.Swap(&other->cf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RawDeleteRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RawDeleteResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_RawDeleteResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
}
void RawDeleteResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RawDeleteResponse::kRegionErrorFieldNumber;
const int RawDeleteResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RawDeleteResponse::RawDeleteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_RawDeleteResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.RawDeleteResponse)
}
RawDeleteResponse::RawDeleteResponse(const RawDeleteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.RawDeleteResponse)
}

void RawDeleteResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_error_ = NULL;
}

RawDeleteResponse::~RawDeleteResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.RawDeleteResponse)
  SharedDtor();
}

void RawDeleteResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete region_error_;
}

void RawDeleteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RawDeleteResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RawDeleteResponse& RawDeleteResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_RawDeleteResponse.base);
  return *internal_default_instance();
}


void RawDeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.RawDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  _internal_metadata_.Clear();
}

bool RawDeleteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.RawDeleteResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.RawDeleteResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.RawDeleteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.RawDeleteResponse)
  return false;
#undef DO_
}

void RawDeleteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.RawDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawDeleteResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.RawDeleteResponse)
}

::google::protobuf::uint8* RawDeleteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.RawDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawDeleteResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.RawDeleteResponse)
  return target;
}

size_t RawDeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.RawDeleteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawDeleteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.RawDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RawDeleteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RawDeleteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.RawDeleteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.RawDeleteResponse)
    MergeFrom(*source);
  }
}

void RawDeleteResponse::MergeFrom(const RawDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.RawDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
}

void RawDeleteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.RawDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawDeleteResponse::CopyFrom(const RawDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.RawDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawDeleteResponse::IsInitialized() const {
  return true;
}

void RawDeleteResponse::Swap(RawDeleteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RawDeleteResponse::InternalSwap(RawDeleteResponse* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(region_error_, other->region_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RawDeleteResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RawBatchDeleteRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_RawBatchDeleteRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RawBatchDeleteRequest::kContextFieldNumber;
const int RawBatchDeleteRequest::kKeysFieldNumber;
const int RawBatchDeleteRequest::kCfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RawBatchDeleteRequest::RawBatchDeleteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_RawBatchDeleteRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.RawBatchDeleteRequest)
}
RawBatchDeleteRequest::RawBatchDeleteRequest(const RawBatchDeleteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cf().size() > 0) {
    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.RawBatchDeleteRequest)
}

void RawBatchDeleteRequest::SharedCtor() {
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_ = NULL;
}

RawBatchDeleteRequest::~RawBatchDeleteRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.RawBatchDeleteRequest)
  SharedDtor();
}

void RawBatchDeleteRequest::SharedDtor() {
  cf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void RawBatchDeleteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RawBatchDeleteRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RawBatchDeleteRequest& RawBatchDeleteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_RawBatchDeleteRequest.base);
  return *internal_default_instance();
}


void RawBatchDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.RawBatchDeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  cf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  _internal_metadata_.Clear();
}

bool RawBatchDeleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.RawBatchDeleteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes keys = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cf = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cf()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cf().data(), static_cast<int>(this->cf().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.RawBatchDeleteRequest.cf"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.RawBatchDeleteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.RawBatchDeleteRequest)
  return false;
#undef DO_
}

void RawBatchDeleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.RawBatchDeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // repeated bytes keys = 2;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->keys(i), output);
  }

  // string cf = 3;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawBatchDeleteRequest.cf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.RawBatchDeleteRequest)
}

::google::protobuf::uint8* RawBatchDeleteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.RawBatchDeleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // repeated bytes keys = 2;
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->keys(i), target);
  }

  // string cf = 3;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawBatchDeleteRequest.cf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.RawBatchDeleteRequest)
  return target;
}

size_t RawBatchDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.RawBatchDeleteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes keys = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->keys_size());
  for (int i = 0, n = this->keys_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->keys(i));
  }

  // string cf = 3;
  if (this->cf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cf());
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawBatchDeleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.RawBatchDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RawBatchDeleteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RawBatchDeleteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.RawBatchDeleteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.RawBatchDeleteRequest)
    MergeFrom(*source);
  }
}

void RawBatchDeleteRequest::MergeFrom(const RawBatchDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.RawBatchDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  if (from.cf().size() > 0) {

    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
}

void RawBatchDeleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.RawBatchDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawBatchDeleteRequest::CopyFrom(const RawBatchDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.RawBatchDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawBatchDeleteRequest::IsInitialized() const {
  return true;
}

void RawBatchDeleteRequest::Swap(RawBatchDeleteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RawBatchDeleteRequest::InternalSwap(RawBatchDeleteRequest* other) {
  using std::swap;
  keys_.InternalSwap(CastToBase(&other->keys_));
  cf_.Swap(&other->cf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RawBatchDeleteRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RawBatchDeleteResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_RawBatchDeleteResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
}
void RawBatchDeleteResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RawBatchDeleteResponse::kRegionErrorFieldNumber;
const int RawBatchDeleteResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RawBatchDeleteResponse::RawBatchDeleteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_RawBatchDeleteResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.RawBatchDeleteResponse)
}
RawBatchDeleteResponse::RawBatchDeleteResponse(const RawBatchDeleteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.RawBatchDeleteResponse)
}

void RawBatchDeleteResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_error_ = NULL;
}

RawBatchDeleteResponse::~RawBatchDeleteResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.RawBatchDeleteResponse)
  SharedDtor();
}

void RawBatchDeleteResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete region_error_;
}

void RawBatchDeleteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RawBatchDeleteResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RawBatchDeleteResponse& RawBatchDeleteResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_RawBatchDeleteResponse.base);
  return *internal_default_instance();
}


void RawBatchDeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.RawBatchDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  _internal_metadata_.Clear();
}

bool RawBatchDeleteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.RawBatchDeleteResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.RawBatchDeleteResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.RawBatchDeleteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.RawBatchDeleteResponse)
  return false;
#undef DO_
}

void RawBatchDeleteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.RawBatchDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawBatchDeleteResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.RawBatchDeleteResponse)
}

::google::protobuf::uint8* RawBatchDeleteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.RawBatchDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawBatchDeleteResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.RawBatchDeleteResponse)
  return target;
}

size_t RawBatchDeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.RawBatchDeleteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawBatchDeleteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.RawBatchDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RawBatchDeleteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RawBatchDeleteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.RawBatchDeleteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.RawBatchDeleteResponse)
    MergeFrom(*source);
  }
}

void RawBatchDeleteResponse::MergeFrom(const RawBatchDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.RawBatchDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
}

void RawBatchDeleteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.RawBatchDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawBatchDeleteResponse::CopyFrom(const RawBatchDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.RawBatchDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawBatchDeleteResponse::IsInitialized() const {
  return true;
}

void RawBatchDeleteResponse::Swap(RawBatchDeleteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RawBatchDeleteResponse::InternalSwap(RawBatchDeleteResponse* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(region_error_, other->region_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RawBatchDeleteResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteRangeRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_DeleteRangeRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteRangeRequest::kContextFieldNumber;
const int DeleteRangeRequest::kStartKeyFieldNumber;
const int DeleteRangeRequest::kEndKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteRangeRequest::DeleteRangeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_DeleteRangeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.DeleteRangeRequest)
}
DeleteRangeRequest::DeleteRangeRequest(const DeleteRangeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start_key().size() > 0) {
    start_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_key_);
  }
  end_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.end_key().size() > 0) {
    end_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_key_);
  }
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.DeleteRangeRequest)
}

void DeleteRangeRequest::SharedCtor() {
  start_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_ = NULL;
}

DeleteRangeRequest::~DeleteRangeRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.DeleteRangeRequest)
  SharedDtor();
}

void DeleteRangeRequest::SharedDtor() {
  start_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void DeleteRangeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteRangeRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteRangeRequest& DeleteRangeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_DeleteRangeRequest.base);
  return *internal_default_instance();
}


void DeleteRangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.DeleteRangeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  start_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  _internal_metadata_.Clear();
}

bool DeleteRangeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.DeleteRangeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes start_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_start_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes end_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_end_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.DeleteRangeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.DeleteRangeRequest)
  return false;
#undef DO_
}

void DeleteRangeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.DeleteRangeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // bytes start_key = 2;
  if (this->start_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->start_key(), output);
  }

  // bytes end_key = 3;
  if (this->end_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->end_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.DeleteRangeRequest)
}

::google::protobuf::uint8* DeleteRangeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.DeleteRangeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // bytes start_key = 2;
  if (this->start_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->start_key(), target);
  }

  // bytes end_key = 3;
  if (this->end_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->end_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.DeleteRangeRequest)
  return target;
}

size_t DeleteRangeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.DeleteRangeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes start_key = 2;
  if (this->start_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->start_key());
  }

  // bytes end_key = 3;
  if (this->end_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->end_key());
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRangeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.DeleteRangeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRangeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteRangeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.DeleteRangeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.DeleteRangeRequest)
    MergeFrom(*source);
  }
}

void DeleteRangeRequest::MergeFrom(const DeleteRangeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.DeleteRangeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_key().size() > 0) {

    start_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_key_);
  }
  if (from.end_key().size() > 0) {

    end_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_key_);
  }
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
}

void DeleteRangeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.DeleteRangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRangeRequest::CopyFrom(const DeleteRangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.DeleteRangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRangeRequest::IsInitialized() const {
  return true;
}

void DeleteRangeRequest::Swap(DeleteRangeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteRangeRequest::InternalSwap(DeleteRangeRequest* other) {
  using std::swap;
  start_key_.Swap(&other->start_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  end_key_.Swap(&other->end_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteRangeRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteRangeResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_DeleteRangeResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
}
void DeleteRangeResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteRangeResponse::kRegionErrorFieldNumber;
const int DeleteRangeResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteRangeResponse::DeleteRangeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_DeleteRangeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.DeleteRangeResponse)
}
DeleteRangeResponse::DeleteRangeResponse(const DeleteRangeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.DeleteRangeResponse)
}

void DeleteRangeResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_error_ = NULL;
}

DeleteRangeResponse::~DeleteRangeResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.DeleteRangeResponse)
  SharedDtor();
}

void DeleteRangeResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete region_error_;
}

void DeleteRangeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteRangeResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteRangeResponse& DeleteRangeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_DeleteRangeResponse.base);
  return *internal_default_instance();
}


void DeleteRangeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.DeleteRangeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  _internal_metadata_.Clear();
}

bool DeleteRangeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.DeleteRangeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.DeleteRangeResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.DeleteRangeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.DeleteRangeResponse)
  return false;
#undef DO_
}

void DeleteRangeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.DeleteRangeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.DeleteRangeResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.DeleteRangeResponse)
}

::google::protobuf::uint8* DeleteRangeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.DeleteRangeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.DeleteRangeResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.DeleteRangeResponse)
  return target;
}

size_t DeleteRangeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.DeleteRangeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRangeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.DeleteRangeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRangeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteRangeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.DeleteRangeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.DeleteRangeResponse)
    MergeFrom(*source);
  }
}

void DeleteRangeResponse::MergeFrom(const DeleteRangeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.DeleteRangeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
}

void DeleteRangeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.DeleteRangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRangeResponse::CopyFrom(const DeleteRangeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.DeleteRangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRangeResponse::IsInitialized() const {
  return true;
}

void DeleteRangeResponse::Swap(DeleteRangeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteRangeResponse::InternalSwap(DeleteRangeResponse* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(region_error_, other->region_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteRangeResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RawDeleteRangeRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_RawDeleteRangeRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RawDeleteRangeRequest::kContextFieldNumber;
const int RawDeleteRangeRequest::kStartKeyFieldNumber;
const int RawDeleteRangeRequest::kEndKeyFieldNumber;
const int RawDeleteRangeRequest::kCfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RawDeleteRangeRequest::RawDeleteRangeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_RawDeleteRangeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.RawDeleteRangeRequest)
}
RawDeleteRangeRequest::RawDeleteRangeRequest(const RawDeleteRangeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start_key().size() > 0) {
    start_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_key_);
  }
  end_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.end_key().size() > 0) {
    end_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_key_);
  }
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cf().size() > 0) {
    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.RawDeleteRangeRequest)
}

void RawDeleteRangeRequest::SharedCtor() {
  start_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_ = NULL;
}

RawDeleteRangeRequest::~RawDeleteRangeRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.RawDeleteRangeRequest)
  SharedDtor();
}

void RawDeleteRangeRequest::SharedDtor() {
  start_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void RawDeleteRangeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RawDeleteRangeRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RawDeleteRangeRequest& RawDeleteRangeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_RawDeleteRangeRequest.base);
  return *internal_default_instance();
}


void RawDeleteRangeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.RawDeleteRangeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  start_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  _internal_metadata_.Clear();
}

bool RawDeleteRangeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.RawDeleteRangeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes start_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_start_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes end_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_end_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cf = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cf()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cf().data(), static_cast<int>(this->cf().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.RawDeleteRangeRequest.cf"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.RawDeleteRangeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.RawDeleteRangeRequest)
  return false;
#undef DO_
}

void RawDeleteRangeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.RawDeleteRangeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // bytes start_key = 2;
  if (this->start_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->start_key(), output);
  }

  // bytes end_key = 3;
  if (this->end_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->end_key(), output);
  }

  // string cf = 4;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawDeleteRangeRequest.cf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.RawDeleteRangeRequest)
}

::google::protobuf::uint8* RawDeleteRangeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.RawDeleteRangeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // bytes start_key = 2;
  if (this->start_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->start_key(), target);
  }

  // bytes end_key = 3;
  if (this->end_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->end_key(), target);
  }

  // string cf = 4;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawDeleteRangeRequest.cf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.RawDeleteRangeRequest)
  return target;
}

size_t RawDeleteRangeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.RawDeleteRangeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes start_key = 2;
  if (this->start_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->start_key());
  }

  // bytes end_key = 3;
  if (this->end_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->end_key());
  }

  // string cf = 4;
  if (this->cf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cf());
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawDeleteRangeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.RawDeleteRangeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RawDeleteRangeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RawDeleteRangeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.RawDeleteRangeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.RawDeleteRangeRequest)
    MergeFrom(*source);
  }
}

void RawDeleteRangeRequest::MergeFrom(const RawDeleteRangeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.RawDeleteRangeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_key().size() > 0) {

    start_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_key_);
  }
  if (from.end_key().size() > 0) {

    end_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_key_);
  }
  if (from.cf().size() > 0) {

    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
}

void RawDeleteRangeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.RawDeleteRangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawDeleteRangeRequest::CopyFrom(const RawDeleteRangeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.RawDeleteRangeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawDeleteRangeRequest::IsInitialized() const {
  return true;
}

void RawDeleteRangeRequest::Swap(RawDeleteRangeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RawDeleteRangeRequest::InternalSwap(RawDeleteRangeRequest* other) {
  using std::swap;
  start_key_.Swap(&other->start_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  end_key_.Swap(&other->end_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cf_.Swap(&other->cf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RawDeleteRangeRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RawDeleteRangeResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_RawDeleteRangeResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
}
void RawDeleteRangeResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RawDeleteRangeResponse::kRegionErrorFieldNumber;
const int RawDeleteRangeResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RawDeleteRangeResponse::RawDeleteRangeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_RawDeleteRangeResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.RawDeleteRangeResponse)
}
RawDeleteRangeResponse::RawDeleteRangeResponse(const RawDeleteRangeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.RawDeleteRangeResponse)
}

void RawDeleteRangeResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_error_ = NULL;
}

RawDeleteRangeResponse::~RawDeleteRangeResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.RawDeleteRangeResponse)
  SharedDtor();
}

void RawDeleteRangeResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete region_error_;
}

void RawDeleteRangeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RawDeleteRangeResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RawDeleteRangeResponse& RawDeleteRangeResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_RawDeleteRangeResponse.base);
  return *internal_default_instance();
}


void RawDeleteRangeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.RawDeleteRangeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  _internal_metadata_.Clear();
}

bool RawDeleteRangeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.RawDeleteRangeResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.RawDeleteRangeResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.RawDeleteRangeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.RawDeleteRangeResponse)
  return false;
#undef DO_
}

void RawDeleteRangeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.RawDeleteRangeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawDeleteRangeResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.RawDeleteRangeResponse)
}

::google::protobuf::uint8* RawDeleteRangeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.RawDeleteRangeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawDeleteRangeResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.RawDeleteRangeResponse)
  return target;
}

size_t RawDeleteRangeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.RawDeleteRangeResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawDeleteRangeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.RawDeleteRangeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RawDeleteRangeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RawDeleteRangeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.RawDeleteRangeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.RawDeleteRangeResponse)
    MergeFrom(*source);
  }
}

void RawDeleteRangeResponse::MergeFrom(const RawDeleteRangeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.RawDeleteRangeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
}

void RawDeleteRangeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.RawDeleteRangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawDeleteRangeResponse::CopyFrom(const RawDeleteRangeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.RawDeleteRangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawDeleteRangeResponse::IsInitialized() const {
  return true;
}

void RawDeleteRangeResponse::Swap(RawDeleteRangeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RawDeleteRangeResponse::InternalSwap(RawDeleteRangeResponse* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(region_error_, other->region_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RawDeleteRangeResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RawScanRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_RawScanRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RawScanRequest::kContextFieldNumber;
const int RawScanRequest::kStartKeyFieldNumber;
const int RawScanRequest::kLimitFieldNumber;
const int RawScanRequest::kKeyOnlyFieldNumber;
const int RawScanRequest::kCfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RawScanRequest::RawScanRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_RawScanRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.RawScanRequest)
}
RawScanRequest::RawScanRequest(const RawScanRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start_key().size() > 0) {
    start_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_key_);
  }
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cf().size() > 0) {
    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  ::memcpy(&limit_, &from.limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&key_only_) -
    reinterpret_cast<char*>(&limit_)) + sizeof(key_only_));
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.RawScanRequest)
}

void RawScanRequest::SharedCtor() {
  start_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_only_) -
      reinterpret_cast<char*>(&context_)) + sizeof(key_only_));
}

RawScanRequest::~RawScanRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.RawScanRequest)
  SharedDtor();
}

void RawScanRequest::SharedDtor() {
  start_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void RawScanRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RawScanRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RawScanRequest& RawScanRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_RawScanRequest.base);
  return *internal_default_instance();
}


void RawScanRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.RawScanRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  start_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  ::memset(&limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_only_) -
      reinterpret_cast<char*>(&limit_)) + sizeof(key_only_));
  _internal_metadata_.Clear();
}

bool RawScanRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.RawScanRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes start_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_start_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool key_only = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &key_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cf = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cf()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cf().data(), static_cast<int>(this->cf().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.RawScanRequest.cf"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.RawScanRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.RawScanRequest)
  return false;
#undef DO_
}

void RawScanRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.RawScanRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // bytes start_key = 2;
  if (this->start_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->start_key(), output);
  }

  // uint32 limit = 3;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->limit(), output);
  }

  // bool key_only = 4;
  if (this->key_only() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->key_only(), output);
  }

  // string cf = 5;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawScanRequest.cf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->cf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.RawScanRequest)
}

::google::protobuf::uint8* RawScanRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.RawScanRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // bytes start_key = 2;
  if (this->start_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->start_key(), target);
  }

  // uint32 limit = 3;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->limit(), target);
  }

  // bool key_only = 4;
  if (this->key_only() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->key_only(), target);
  }

  // string cf = 5;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawScanRequest.cf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->cf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.RawScanRequest)
  return target;
}

size_t RawScanRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.RawScanRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes start_key = 2;
  if (this->start_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->start_key());
  }

  // string cf = 5;
  if (this->cf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cf());
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // uint32 limit = 3;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limit());
  }

  // bool key_only = 4;
  if (this->key_only() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawScanRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.RawScanRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RawScanRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RawScanRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.RawScanRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.RawScanRequest)
    MergeFrom(*source);
  }
}

void RawScanRequest::MergeFrom(const RawScanRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.RawScanRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_key().size() > 0) {

    start_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_key_);
  }
  if (from.cf().size() > 0) {

    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
  if (from.key_only() != 0) {
    set_key_only(from.key_only());
  }
}

void RawScanRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.RawScanRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawScanRequest::CopyFrom(const RawScanRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.RawScanRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawScanRequest::IsInitialized() const {
  return true;
}

void RawScanRequest::Swap(RawScanRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RawScanRequest::InternalSwap(RawScanRequest* other) {
  using std::swap;
  start_key_.Swap(&other->start_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cf_.Swap(&other->cf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  swap(limit_, other->limit_);
  swap(key_only_, other->key_only_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RawScanRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RawScanResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_RawScanResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
}
void RawScanResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RawScanResponse::kRegionErrorFieldNumber;
const int RawScanResponse::kKvsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RawScanResponse::RawScanResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_RawScanResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.RawScanResponse)
}
RawScanResponse::RawScanResponse(const RawScanResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      kvs_(from.kvs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.RawScanResponse)
}

void RawScanResponse::SharedCtor() {
  region_error_ = NULL;
}

RawScanResponse::~RawScanResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.RawScanResponse)
  SharedDtor();
}

void RawScanResponse::SharedDtor() {
  if (this != internal_default_instance()) delete region_error_;
}

void RawScanResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RawScanResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RawScanResponse& RawScanResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_RawScanResponse.base);
  return *internal_default_instance();
}


void RawScanResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.RawScanResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kvs_.Clear();
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  _internal_metadata_.Clear();
}

bool RawScanResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.RawScanResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .kvrpcpb.KvPair kvs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_kvs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.RawScanResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.RawScanResponse)
  return false;
#undef DO_
}

void RawScanResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.RawScanResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // repeated .kvrpcpb.KvPair kvs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kvs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->kvs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.RawScanResponse)
}

::google::protobuf::uint8* RawScanResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.RawScanResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // repeated .kvrpcpb.KvPair kvs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kvs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->kvs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.RawScanResponse)
  return target;
}

size_t RawScanResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.RawScanResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .kvrpcpb.KvPair kvs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->kvs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->kvs(static_cast<int>(i)));
    }
  }

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawScanResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.RawScanResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RawScanResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RawScanResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.RawScanResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.RawScanResponse)
    MergeFrom(*source);
  }
}

void RawScanResponse::MergeFrom(const RawScanResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.RawScanResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  kvs_.MergeFrom(from.kvs_);
  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
}

void RawScanResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.RawScanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawScanResponse::CopyFrom(const RawScanResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.RawScanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawScanResponse::IsInitialized() const {
  return true;
}

void RawScanResponse::Swap(RawScanResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RawScanResponse::InternalSwap(RawScanResponse* other) {
  using std::swap;
  CastToBase(&kvs_)->InternalSwap(CastToBase(&other->kvs_));
  swap(region_error_, other->region_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RawScanResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyRange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyRange::kStartKeyFieldNumber;
const int KeyRange::kEndKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyRange::KeyRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_KeyRange.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.KeyRange)
}
KeyRange::KeyRange(const KeyRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start_key().size() > 0) {
    start_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_key_);
  }
  end_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.end_key().size() > 0) {
    end_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_key_);
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.KeyRange)
}

void KeyRange::SharedCtor() {
  start_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

KeyRange::~KeyRange() {
  // @@protoc_insertion_point(destructor:kvrpcpb.KeyRange)
  SharedDtor();
}

void KeyRange::SharedDtor() {
  start_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* KeyRange::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyRange& KeyRange::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_KeyRange.base);
  return *internal_default_instance();
}


void KeyRange::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.KeyRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  start_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool KeyRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.KeyRange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes start_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_start_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes end_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_end_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.KeyRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.KeyRange)
  return false;
#undef DO_
}

void KeyRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.KeyRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes start_key = 1;
  if (this->start_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->start_key(), output);
  }

  // bytes end_key = 2;
  if (this->end_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->end_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.KeyRange)
}

::google::protobuf::uint8* KeyRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.KeyRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes start_key = 1;
  if (this->start_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->start_key(), target);
  }

  // bytes end_key = 2;
  if (this->end_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->end_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.KeyRange)
  return target;
}

size_t KeyRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.KeyRange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes start_key = 1;
  if (this->start_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->start_key());
  }

  // bytes end_key = 2;
  if (this->end_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->end_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void KeyRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.KeyRange)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.KeyRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.KeyRange)
    MergeFrom(*source);
  }
}

void KeyRange::MergeFrom(const KeyRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.KeyRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_key().size() > 0) {

    start_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_key_);
  }
  if (from.end_key().size() > 0) {

    end_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_key_);
  }
}

void KeyRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.KeyRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyRange::CopyFrom(const KeyRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.KeyRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyRange::IsInitialized() const {
  return true;
}

void KeyRange::Swap(KeyRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyRange::InternalSwap(KeyRange* other) {
  using std::swap;
  start_key_.Swap(&other->start_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  end_key_.Swap(&other->end_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata KeyRange::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RawBatchScanRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_RawBatchScanRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RawBatchScanRequest::kContextFieldNumber;
const int RawBatchScanRequest::kRangesFieldNumber;
const int RawBatchScanRequest::kEachLimitFieldNumber;
const int RawBatchScanRequest::kKeyOnlyFieldNumber;
const int RawBatchScanRequest::kCfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RawBatchScanRequest::RawBatchScanRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_RawBatchScanRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.RawBatchScanRequest)
}
RawBatchScanRequest::RawBatchScanRequest(const RawBatchScanRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ranges_(from.ranges_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cf().size() > 0) {
    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  ::memcpy(&each_limit_, &from.each_limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&key_only_) -
    reinterpret_cast<char*>(&each_limit_)) + sizeof(key_only_));
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.RawBatchScanRequest)
}

void RawBatchScanRequest::SharedCtor() {
  cf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_only_) -
      reinterpret_cast<char*>(&context_)) + sizeof(key_only_));
}

RawBatchScanRequest::~RawBatchScanRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.RawBatchScanRequest)
  SharedDtor();
}

void RawBatchScanRequest::SharedDtor() {
  cf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void RawBatchScanRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RawBatchScanRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RawBatchScanRequest& RawBatchScanRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_RawBatchScanRequest.base);
  return *internal_default_instance();
}


void RawBatchScanRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.RawBatchScanRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ranges_.Clear();
  cf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  ::memset(&each_limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_only_) -
      reinterpret_cast<char*>(&each_limit_)) + sizeof(key_only_));
  _internal_metadata_.Clear();
}

bool RawBatchScanRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.RawBatchScanRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .kvrpcpb.KeyRange ranges = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ranges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 each_limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &each_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool key_only = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &key_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cf = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cf()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cf().data(), static_cast<int>(this->cf().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.RawBatchScanRequest.cf"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.RawBatchScanRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.RawBatchScanRequest)
  return false;
#undef DO_
}

void RawBatchScanRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.RawBatchScanRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // repeated .kvrpcpb.KeyRange ranges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ranges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->ranges(static_cast<int>(i)),
      output);
  }

  // uint32 each_limit = 3;
  if (this->each_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->each_limit(), output);
  }

  // bool key_only = 4;
  if (this->key_only() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->key_only(), output);
  }

  // string cf = 5;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawBatchScanRequest.cf");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->cf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.RawBatchScanRequest)
}

::google::protobuf::uint8* RawBatchScanRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.RawBatchScanRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // repeated .kvrpcpb.KeyRange ranges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ranges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->ranges(static_cast<int>(i)), deterministic, target);
  }

  // uint32 each_limit = 3;
  if (this->each_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->each_limit(), target);
  }

  // bool key_only = 4;
  if (this->key_only() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->key_only(), target);
  }

  // string cf = 5;
  if (this->cf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cf().data(), static_cast<int>(this->cf().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.RawBatchScanRequest.cf");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->cf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.RawBatchScanRequest)
  return target;
}

size_t RawBatchScanRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.RawBatchScanRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .kvrpcpb.KeyRange ranges = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->ranges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ranges(static_cast<int>(i)));
    }
  }

  // string cf = 5;
  if (this->cf().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cf());
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // uint32 each_limit = 3;
  if (this->each_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->each_limit());
  }

  // bool key_only = 4;
  if (this->key_only() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawBatchScanRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.RawBatchScanRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RawBatchScanRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RawBatchScanRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.RawBatchScanRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.RawBatchScanRequest)
    MergeFrom(*source);
  }
}

void RawBatchScanRequest::MergeFrom(const RawBatchScanRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.RawBatchScanRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ranges_.MergeFrom(from.ranges_);
  if (from.cf().size() > 0) {

    cf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cf_);
  }
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
  if (from.each_limit() != 0) {
    set_each_limit(from.each_limit());
  }
  if (from.key_only() != 0) {
    set_key_only(from.key_only());
  }
}

void RawBatchScanRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.RawBatchScanRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawBatchScanRequest::CopyFrom(const RawBatchScanRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.RawBatchScanRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawBatchScanRequest::IsInitialized() const {
  return true;
}

void RawBatchScanRequest::Swap(RawBatchScanRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RawBatchScanRequest::InternalSwap(RawBatchScanRequest* other) {
  using std::swap;
  CastToBase(&ranges_)->InternalSwap(CastToBase(&other->ranges_));
  cf_.Swap(&other->cf_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  swap(each_limit_, other->each_limit_);
  swap(key_only_, other->key_only_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RawBatchScanRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RawBatchScanResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_RawBatchScanResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
}
void RawBatchScanResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RawBatchScanResponse::kRegionErrorFieldNumber;
const int RawBatchScanResponse::kKvsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RawBatchScanResponse::RawBatchScanResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_RawBatchScanResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.RawBatchScanResponse)
}
RawBatchScanResponse::RawBatchScanResponse(const RawBatchScanResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      kvs_(from.kvs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.RawBatchScanResponse)
}

void RawBatchScanResponse::SharedCtor() {
  region_error_ = NULL;
}

RawBatchScanResponse::~RawBatchScanResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.RawBatchScanResponse)
  SharedDtor();
}

void RawBatchScanResponse::SharedDtor() {
  if (this != internal_default_instance()) delete region_error_;
}

void RawBatchScanResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RawBatchScanResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RawBatchScanResponse& RawBatchScanResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_RawBatchScanResponse.base);
  return *internal_default_instance();
}


void RawBatchScanResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.RawBatchScanResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kvs_.Clear();
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  _internal_metadata_.Clear();
}

bool RawBatchScanResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.RawBatchScanResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .kvrpcpb.KvPair kvs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_kvs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.RawBatchScanResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.RawBatchScanResponse)
  return false;
#undef DO_
}

void RawBatchScanResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.RawBatchScanResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // repeated .kvrpcpb.KvPair kvs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kvs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->kvs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.RawBatchScanResponse)
}

::google::protobuf::uint8* RawBatchScanResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.RawBatchScanResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // repeated .kvrpcpb.KvPair kvs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->kvs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->kvs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.RawBatchScanResponse)
  return target;
}

size_t RawBatchScanResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.RawBatchScanResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .kvrpcpb.KvPair kvs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->kvs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->kvs(static_cast<int>(i)));
    }
  }

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RawBatchScanResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.RawBatchScanResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RawBatchScanResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RawBatchScanResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.RawBatchScanResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.RawBatchScanResponse)
    MergeFrom(*source);
  }
}

void RawBatchScanResponse::MergeFrom(const RawBatchScanResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.RawBatchScanResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  kvs_.MergeFrom(from.kvs_);
  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
}

void RawBatchScanResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.RawBatchScanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawBatchScanResponse::CopyFrom(const RawBatchScanResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.RawBatchScanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RawBatchScanResponse::IsInitialized() const {
  return true;
}

void RawBatchScanResponse::Swap(RawBatchScanResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RawBatchScanResponse::InternalSwap(RawBatchScanResponse* other) {
  using std::swap;
  CastToBase(&kvs_)->InternalSwap(CastToBase(&other->kvs_));
  swap(region_error_, other->region_error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RawBatchScanResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MvccWrite::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MvccWrite::kTypeFieldNumber;
const int MvccWrite::kStartTsFieldNumber;
const int MvccWrite::kCommitTsFieldNumber;
const int MvccWrite::kShortValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MvccWrite::MvccWrite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_MvccWrite.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.MvccWrite)
}
MvccWrite::MvccWrite(const MvccWrite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  short_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.short_value().size() > 0) {
    short_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short_value_);
  }
  ::memcpy(&start_ts_, &from.start_ts_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&start_ts_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.MvccWrite)
}

void MvccWrite::SharedCtor() {
  short_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&start_ts_)) + sizeof(type_));
}

MvccWrite::~MvccWrite() {
  // @@protoc_insertion_point(destructor:kvrpcpb.MvccWrite)
  SharedDtor();
}

void MvccWrite::SharedDtor() {
  short_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MvccWrite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MvccWrite::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MvccWrite& MvccWrite::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_MvccWrite.base);
  return *internal_default_instance();
}


void MvccWrite::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.MvccWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  short_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&start_ts_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool MvccWrite::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.MvccWrite)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Op type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::kvrpcpb::Op >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 start_ts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 commit_ts = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &commit_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes short_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_short_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.MvccWrite)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.MvccWrite)
  return false;
#undef DO_
}

void MvccWrite::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.MvccWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Op type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // uint64 start_ts = 2;
  if (this->start_ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->start_ts(), output);
  }

  // uint64 commit_ts = 3;
  if (this->commit_ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->commit_ts(), output);
  }

  // bytes short_value = 4;
  if (this->short_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->short_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.MvccWrite)
}

::google::protobuf::uint8* MvccWrite::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.MvccWrite)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Op type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // uint64 start_ts = 2;
  if (this->start_ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->start_ts(), target);
  }

  // uint64 commit_ts = 3;
  if (this->commit_ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->commit_ts(), target);
  }

  // bytes short_value = 4;
  if (this->short_value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->short_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.MvccWrite)
  return target;
}

size_t MvccWrite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.MvccWrite)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes short_value = 4;
  if (this->short_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->short_value());
  }

  // uint64 start_ts = 2;
  if (this->start_ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_ts());
  }

  // uint64 commit_ts = 3;
  if (this->commit_ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->commit_ts());
  }

  // .kvrpcpb.Op type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MvccWrite::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.MvccWrite)
  GOOGLE_DCHECK_NE(&from, this);
  const MvccWrite* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MvccWrite>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.MvccWrite)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.MvccWrite)
    MergeFrom(*source);
  }
}

void MvccWrite::MergeFrom(const MvccWrite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.MvccWrite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.short_value().size() > 0) {

    short_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short_value_);
  }
  if (from.start_ts() != 0) {
    set_start_ts(from.start_ts());
  }
  if (from.commit_ts() != 0) {
    set_commit_ts(from.commit_ts());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void MvccWrite::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.MvccWrite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MvccWrite::CopyFrom(const MvccWrite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.MvccWrite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MvccWrite::IsInitialized() const {
  return true;
}

void MvccWrite::Swap(MvccWrite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MvccWrite::InternalSwap(MvccWrite* other) {
  using std::swap;
  short_value_.Swap(&other->short_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(start_ts_, other->start_ts_);
  swap(commit_ts_, other->commit_ts_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MvccWrite::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MvccValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MvccValue::kStartTsFieldNumber;
const int MvccValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MvccValue::MvccValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_MvccValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.MvccValue)
}
MvccValue::MvccValue(const MvccValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  start_ts_ = from.start_ts_;
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.MvccValue)
}

void MvccValue::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_ts_ = GOOGLE_ULONGLONG(0);
}

MvccValue::~MvccValue() {
  // @@protoc_insertion_point(destructor:kvrpcpb.MvccValue)
  SharedDtor();
}

void MvccValue::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MvccValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MvccValue::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MvccValue& MvccValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_MvccValue.base);
  return *internal_default_instance();
}


void MvccValue::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.MvccValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_ts_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool MvccValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.MvccValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 start_ts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.MvccValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.MvccValue)
  return false;
#undef DO_
}

void MvccValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.MvccValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 start_ts = 1;
  if (this->start_ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->start_ts(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.MvccValue)
}

::google::protobuf::uint8* MvccValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.MvccValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 start_ts = 1;
  if (this->start_ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->start_ts(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.MvccValue)
  return target;
}

size_t MvccValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.MvccValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // uint64 start_ts = 1;
  if (this->start_ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_ts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MvccValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.MvccValue)
  GOOGLE_DCHECK_NE(&from, this);
  const MvccValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MvccValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.MvccValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.MvccValue)
    MergeFrom(*source);
  }
}

void MvccValue::MergeFrom(const MvccValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.MvccValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.start_ts() != 0) {
    set_start_ts(from.start_ts());
  }
}

void MvccValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.MvccValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MvccValue::CopyFrom(const MvccValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.MvccValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MvccValue::IsInitialized() const {
  return true;
}

void MvccValue::Swap(MvccValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MvccValue::InternalSwap(MvccValue* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(start_ts_, other->start_ts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MvccValue::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MvccLock::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MvccLock::kTypeFieldNumber;
const int MvccLock::kStartTsFieldNumber;
const int MvccLock::kPrimaryFieldNumber;
const int MvccLock::kShortValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MvccLock::MvccLock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_MvccLock.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.MvccLock)
}
MvccLock::MvccLock(const MvccLock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  primary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.primary().size() > 0) {
    primary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primary_);
  }
  short_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.short_value().size() > 0) {
    short_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short_value_);
  }
  ::memcpy(&start_ts_, &from.start_ts_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&start_ts_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.MvccLock)
}

void MvccLock::SharedCtor() {
  primary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&start_ts_)) + sizeof(type_));
}

MvccLock::~MvccLock() {
  // @@protoc_insertion_point(destructor:kvrpcpb.MvccLock)
  SharedDtor();
}

void MvccLock::SharedDtor() {
  primary_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MvccLock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MvccLock::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MvccLock& MvccLock::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_MvccLock.base);
  return *internal_default_instance();
}


void MvccLock::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.MvccLock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  primary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&start_ts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&start_ts_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool MvccLock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.MvccLock)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Op type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::kvrpcpb::Op >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 start_ts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes primary = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_primary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes short_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_short_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.MvccLock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.MvccLock)
  return false;
#undef DO_
}

void MvccLock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.MvccLock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Op type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // uint64 start_ts = 2;
  if (this->start_ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->start_ts(), output);
  }

  // bytes primary = 3;
  if (this->primary().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->primary(), output);
  }

  // bytes short_value = 4;
  if (this->short_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->short_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.MvccLock)
}

::google::protobuf::uint8* MvccLock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.MvccLock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Op type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // uint64 start_ts = 2;
  if (this->start_ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->start_ts(), target);
  }

  // bytes primary = 3;
  if (this->primary().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->primary(), target);
  }

  // bytes short_value = 4;
  if (this->short_value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->short_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.MvccLock)
  return target;
}

size_t MvccLock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.MvccLock)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes primary = 3;
  if (this->primary().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->primary());
  }

  // bytes short_value = 4;
  if (this->short_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->short_value());
  }

  // uint64 start_ts = 2;
  if (this->start_ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_ts());
  }

  // .kvrpcpb.Op type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MvccLock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.MvccLock)
  GOOGLE_DCHECK_NE(&from, this);
  const MvccLock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MvccLock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.MvccLock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.MvccLock)
    MergeFrom(*source);
  }
}

void MvccLock::MergeFrom(const MvccLock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.MvccLock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.primary().size() > 0) {

    primary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primary_);
  }
  if (from.short_value().size() > 0) {

    short_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short_value_);
  }
  if (from.start_ts() != 0) {
    set_start_ts(from.start_ts());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void MvccLock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.MvccLock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MvccLock::CopyFrom(const MvccLock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.MvccLock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MvccLock::IsInitialized() const {
  return true;
}

void MvccLock::Swap(MvccLock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MvccLock::InternalSwap(MvccLock* other) {
  using std::swap;
  primary_.Swap(&other->primary_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  short_value_.Swap(&other->short_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(start_ts_, other->start_ts_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MvccLock::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MvccInfo::InitAsDefaultInstance() {
  ::kvrpcpb::_MvccInfo_default_instance_._instance.get_mutable()->lock_ = const_cast< ::kvrpcpb::MvccLock*>(
      ::kvrpcpb::MvccLock::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MvccInfo::kLockFieldNumber;
const int MvccInfo::kWritesFieldNumber;
const int MvccInfo::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MvccInfo::MvccInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_MvccInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.MvccInfo)
}
MvccInfo::MvccInfo(const MvccInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      writes_(from.writes_),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lock()) {
    lock_ = new ::kvrpcpb::MvccLock(*from.lock_);
  } else {
    lock_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.MvccInfo)
}

void MvccInfo::SharedCtor() {
  lock_ = NULL;
}

MvccInfo::~MvccInfo() {
  // @@protoc_insertion_point(destructor:kvrpcpb.MvccInfo)
  SharedDtor();
}

void MvccInfo::SharedDtor() {
  if (this != internal_default_instance()) delete lock_;
}

void MvccInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MvccInfo::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MvccInfo& MvccInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_MvccInfo.base);
  return *internal_default_instance();
}


void MvccInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.MvccInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  writes_.Clear();
  values_.Clear();
  if (GetArenaNoVirtual() == NULL && lock_ != NULL) {
    delete lock_;
  }
  lock_ = NULL;
  _internal_metadata_.Clear();
}

bool MvccInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.MvccInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.MvccLock lock = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lock()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .kvrpcpb.MvccWrite writes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_writes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .kvrpcpb.MvccValue values = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_values()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.MvccInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.MvccInfo)
  return false;
#undef DO_
}

void MvccInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.MvccInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.MvccLock lock = 1;
  if (this->has_lock()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_lock(), output);
  }

  // repeated .kvrpcpb.MvccWrite writes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->writes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->writes(static_cast<int>(i)),
      output);
  }

  // repeated .kvrpcpb.MvccValue values = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->values(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.MvccInfo)
}

::google::protobuf::uint8* MvccInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.MvccInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.MvccLock lock = 1;
  if (this->has_lock()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_lock(), deterministic, target);
  }

  // repeated .kvrpcpb.MvccWrite writes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->writes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->writes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .kvrpcpb.MvccValue values = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->values_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->values(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.MvccInfo)
  return target;
}

size_t MvccInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.MvccInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .kvrpcpb.MvccWrite writes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->writes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->writes(static_cast<int>(i)));
    }
  }

  // repeated .kvrpcpb.MvccValue values = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->values_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->values(static_cast<int>(i)));
    }
  }

  // .kvrpcpb.MvccLock lock = 1;
  if (this->has_lock()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lock_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MvccInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.MvccInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MvccInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MvccInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.MvccInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.MvccInfo)
    MergeFrom(*source);
  }
}

void MvccInfo::MergeFrom(const MvccInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.MvccInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  writes_.MergeFrom(from.writes_);
  values_.MergeFrom(from.values_);
  if (from.has_lock()) {
    mutable_lock()->::kvrpcpb::MvccLock::MergeFrom(from.lock());
  }
}

void MvccInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.MvccInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MvccInfo::CopyFrom(const MvccInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.MvccInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MvccInfo::IsInitialized() const {
  return true;
}

void MvccInfo::Swap(MvccInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MvccInfo::InternalSwap(MvccInfo* other) {
  using std::swap;
  CastToBase(&writes_)->InternalSwap(CastToBase(&other->writes_));
  CastToBase(&values_)->InternalSwap(CastToBase(&other->values_));
  swap(lock_, other->lock_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MvccInfo::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MvccGetByKeyRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_MvccGetByKeyRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MvccGetByKeyRequest::kContextFieldNumber;
const int MvccGetByKeyRequest::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MvccGetByKeyRequest::MvccGetByKeyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_MvccGetByKeyRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.MvccGetByKeyRequest)
}
MvccGetByKeyRequest::MvccGetByKeyRequest(const MvccGetByKeyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.MvccGetByKeyRequest)
}

void MvccGetByKeyRequest::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_ = NULL;
}

MvccGetByKeyRequest::~MvccGetByKeyRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.MvccGetByKeyRequest)
  SharedDtor();
}

void MvccGetByKeyRequest::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void MvccGetByKeyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MvccGetByKeyRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MvccGetByKeyRequest& MvccGetByKeyRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_MvccGetByKeyRequest.base);
  return *internal_default_instance();
}


void MvccGetByKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.MvccGetByKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  _internal_metadata_.Clear();
}

bool MvccGetByKeyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.MvccGetByKeyRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.MvccGetByKeyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.MvccGetByKeyRequest)
  return false;
#undef DO_
}

void MvccGetByKeyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.MvccGetByKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.MvccGetByKeyRequest)
}

::google::protobuf::uint8* MvccGetByKeyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.MvccGetByKeyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // bytes key = 2;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.MvccGetByKeyRequest)
  return target;
}

size_t MvccGetByKeyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.MvccGetByKeyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MvccGetByKeyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.MvccGetByKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MvccGetByKeyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MvccGetByKeyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.MvccGetByKeyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.MvccGetByKeyRequest)
    MergeFrom(*source);
  }
}

void MvccGetByKeyRequest::MergeFrom(const MvccGetByKeyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.MvccGetByKeyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
}

void MvccGetByKeyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.MvccGetByKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MvccGetByKeyRequest::CopyFrom(const MvccGetByKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.MvccGetByKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MvccGetByKeyRequest::IsInitialized() const {
  return true;
}

void MvccGetByKeyRequest::Swap(MvccGetByKeyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MvccGetByKeyRequest::InternalSwap(MvccGetByKeyRequest* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MvccGetByKeyRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MvccGetByKeyResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_MvccGetByKeyResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
  ::kvrpcpb::_MvccGetByKeyResponse_default_instance_._instance.get_mutable()->info_ = const_cast< ::kvrpcpb::MvccInfo*>(
      ::kvrpcpb::MvccInfo::internal_default_instance());
}
void MvccGetByKeyResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MvccGetByKeyResponse::kRegionErrorFieldNumber;
const int MvccGetByKeyResponse::kErrorFieldNumber;
const int MvccGetByKeyResponse::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MvccGetByKeyResponse::MvccGetByKeyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_MvccGetByKeyResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.MvccGetByKeyResponse)
}
MvccGetByKeyResponse::MvccGetByKeyResponse(const MvccGetByKeyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  if (from.has_info()) {
    info_ = new ::kvrpcpb::MvccInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.MvccGetByKeyResponse)
}

void MvccGetByKeyResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&region_error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&info_) -
      reinterpret_cast<char*>(&region_error_)) + sizeof(info_));
}

MvccGetByKeyResponse::~MvccGetByKeyResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.MvccGetByKeyResponse)
  SharedDtor();
}

void MvccGetByKeyResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete region_error_;
  if (this != internal_default_instance()) delete info_;
}

void MvccGetByKeyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MvccGetByKeyResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MvccGetByKeyResponse& MvccGetByKeyResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_MvccGetByKeyResponse.base);
  return *internal_default_instance();
}


void MvccGetByKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.MvccGetByKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  _internal_metadata_.Clear();
}

bool MvccGetByKeyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.MvccGetByKeyResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.MvccGetByKeyResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvrpcpb.MvccInfo info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.MvccGetByKeyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.MvccGetByKeyResponse)
  return false;
#undef DO_
}

void MvccGetByKeyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.MvccGetByKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.MvccGetByKeyResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // .kvrpcpb.MvccInfo info = 3;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.MvccGetByKeyResponse)
}

::google::protobuf::uint8* MvccGetByKeyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.MvccGetByKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.MvccGetByKeyResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // .kvrpcpb.MvccInfo info = 3;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.MvccGetByKeyResponse)
  return target;
}

size_t MvccGetByKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.MvccGetByKeyResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  // .kvrpcpb.MvccInfo info = 3;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MvccGetByKeyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.MvccGetByKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MvccGetByKeyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MvccGetByKeyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.MvccGetByKeyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.MvccGetByKeyResponse)
    MergeFrom(*source);
  }
}

void MvccGetByKeyResponse::MergeFrom(const MvccGetByKeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.MvccGetByKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
  if (from.has_info()) {
    mutable_info()->::kvrpcpb::MvccInfo::MergeFrom(from.info());
  }
}

void MvccGetByKeyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.MvccGetByKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MvccGetByKeyResponse::CopyFrom(const MvccGetByKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.MvccGetByKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MvccGetByKeyResponse::IsInitialized() const {
  return true;
}

void MvccGetByKeyResponse::Swap(MvccGetByKeyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MvccGetByKeyResponse::InternalSwap(MvccGetByKeyResponse* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(region_error_, other->region_error_);
  swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MvccGetByKeyResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MvccGetByStartTsRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_MvccGetByStartTsRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MvccGetByStartTsRequest::kContextFieldNumber;
const int MvccGetByStartTsRequest::kStartTsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MvccGetByStartTsRequest::MvccGetByStartTsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_MvccGetByStartTsRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.MvccGetByStartTsRequest)
}
MvccGetByStartTsRequest::MvccGetByStartTsRequest(const MvccGetByStartTsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  start_ts_ = from.start_ts_;
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.MvccGetByStartTsRequest)
}

void MvccGetByStartTsRequest::SharedCtor() {
  ::memset(&context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_ts_) -
      reinterpret_cast<char*>(&context_)) + sizeof(start_ts_));
}

MvccGetByStartTsRequest::~MvccGetByStartTsRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.MvccGetByStartTsRequest)
  SharedDtor();
}

void MvccGetByStartTsRequest::SharedDtor() {
  if (this != internal_default_instance()) delete context_;
}

void MvccGetByStartTsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MvccGetByStartTsRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MvccGetByStartTsRequest& MvccGetByStartTsRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_MvccGetByStartTsRequest.base);
  return *internal_default_instance();
}


void MvccGetByStartTsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.MvccGetByStartTsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  start_ts_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool MvccGetByStartTsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.MvccGetByStartTsRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 start_ts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.MvccGetByStartTsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.MvccGetByStartTsRequest)
  return false;
#undef DO_
}

void MvccGetByStartTsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.MvccGetByStartTsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // uint64 start_ts = 2;
  if (this->start_ts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->start_ts(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.MvccGetByStartTsRequest)
}

::google::protobuf::uint8* MvccGetByStartTsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.MvccGetByStartTsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // uint64 start_ts = 2;
  if (this->start_ts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->start_ts(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.MvccGetByStartTsRequest)
  return target;
}

size_t MvccGetByStartTsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.MvccGetByStartTsRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // uint64 start_ts = 2;
  if (this->start_ts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_ts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MvccGetByStartTsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.MvccGetByStartTsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MvccGetByStartTsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MvccGetByStartTsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.MvccGetByStartTsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.MvccGetByStartTsRequest)
    MergeFrom(*source);
  }
}

void MvccGetByStartTsRequest::MergeFrom(const MvccGetByStartTsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.MvccGetByStartTsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
  if (from.start_ts() != 0) {
    set_start_ts(from.start_ts());
  }
}

void MvccGetByStartTsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.MvccGetByStartTsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MvccGetByStartTsRequest::CopyFrom(const MvccGetByStartTsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.MvccGetByStartTsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MvccGetByStartTsRequest::IsInitialized() const {
  return true;
}

void MvccGetByStartTsRequest::Swap(MvccGetByStartTsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MvccGetByStartTsRequest::InternalSwap(MvccGetByStartTsRequest* other) {
  using std::swap;
  swap(context_, other->context_);
  swap(start_ts_, other->start_ts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MvccGetByStartTsRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MvccGetByStartTsResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_MvccGetByStartTsResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
  ::kvrpcpb::_MvccGetByStartTsResponse_default_instance_._instance.get_mutable()->info_ = const_cast< ::kvrpcpb::MvccInfo*>(
      ::kvrpcpb::MvccInfo::internal_default_instance());
}
void MvccGetByStartTsResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MvccGetByStartTsResponse::kRegionErrorFieldNumber;
const int MvccGetByStartTsResponse::kErrorFieldNumber;
const int MvccGetByStartTsResponse::kKeyFieldNumber;
const int MvccGetByStartTsResponse::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MvccGetByStartTsResponse::MvccGetByStartTsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_MvccGetByStartTsResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.MvccGetByStartTsResponse)
}
MvccGetByStartTsResponse::MvccGetByStartTsResponse(const MvccGetByStartTsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  if (from.has_info()) {
    info_ = new ::kvrpcpb::MvccInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.MvccGetByStartTsResponse)
}

void MvccGetByStartTsResponse::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&region_error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&info_) -
      reinterpret_cast<char*>(&region_error_)) + sizeof(info_));
}

MvccGetByStartTsResponse::~MvccGetByStartTsResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.MvccGetByStartTsResponse)
  SharedDtor();
}

void MvccGetByStartTsResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete region_error_;
  if (this != internal_default_instance()) delete info_;
}

void MvccGetByStartTsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MvccGetByStartTsResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MvccGetByStartTsResponse& MvccGetByStartTsResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_MvccGetByStartTsResponse.base);
  return *internal_default_instance();
}


void MvccGetByStartTsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.MvccGetByStartTsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  _internal_metadata_.Clear();
}

bool MvccGetByStartTsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.MvccGetByStartTsResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "kvrpcpb.MvccGetByStartTsResponse.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .kvrpcpb.MvccInfo info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.MvccGetByStartTsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.MvccGetByStartTsResponse)
  return false;
#undef DO_
}

void MvccGetByStartTsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.MvccGetByStartTsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.MvccGetByStartTsResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // bytes key = 3;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->key(), output);
  }

  // .kvrpcpb.MvccInfo info = 4;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.MvccGetByStartTsResponse)
}

::google::protobuf::uint8* MvccGetByStartTsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.MvccGetByStartTsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "kvrpcpb.MvccGetByStartTsResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // bytes key = 3;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->key(), target);
  }

  // .kvrpcpb.MvccInfo info = 4;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.MvccGetByStartTsResponse)
  return target;
}

size_t MvccGetByStartTsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.MvccGetByStartTsResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // bytes key = 3;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  // .kvrpcpb.MvccInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MvccGetByStartTsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.MvccGetByStartTsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MvccGetByStartTsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MvccGetByStartTsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.MvccGetByStartTsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.MvccGetByStartTsResponse)
    MergeFrom(*source);
  }
}

void MvccGetByStartTsResponse::MergeFrom(const MvccGetByStartTsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.MvccGetByStartTsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
  if (from.has_info()) {
    mutable_info()->::kvrpcpb::MvccInfo::MergeFrom(from.info());
  }
}

void MvccGetByStartTsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.MvccGetByStartTsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MvccGetByStartTsResponse::CopyFrom(const MvccGetByStartTsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.MvccGetByStartTsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MvccGetByStartTsResponse::IsInitialized() const {
  return true;
}

void MvccGetByStartTsResponse::Swap(MvccGetByStartTsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MvccGetByStartTsResponse::InternalSwap(MvccGetByStartTsResponse* other) {
  using std::swap;
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(region_error_, other->region_error_);
  swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MvccGetByStartTsResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SplitRegionRequest::InitAsDefaultInstance() {
  ::kvrpcpb::_SplitRegionRequest_default_instance_._instance.get_mutable()->context_ = const_cast< ::kvrpcpb::Context*>(
      ::kvrpcpb::Context::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SplitRegionRequest::kContextFieldNumber;
const int SplitRegionRequest::kSplitKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SplitRegionRequest::SplitRegionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_SplitRegionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.SplitRegionRequest)
}
SplitRegionRequest::SplitRegionRequest(const SplitRegionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  split_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.split_key().size() > 0) {
    split_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.split_key_);
  }
  if (from.has_context()) {
    context_ = new ::kvrpcpb::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.SplitRegionRequest)
}

void SplitRegionRequest::SharedCtor() {
  split_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  context_ = NULL;
}

SplitRegionRequest::~SplitRegionRequest() {
  // @@protoc_insertion_point(destructor:kvrpcpb.SplitRegionRequest)
  SharedDtor();
}

void SplitRegionRequest::SharedDtor() {
  split_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete context_;
}

void SplitRegionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SplitRegionRequest::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SplitRegionRequest& SplitRegionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_SplitRegionRequest.base);
  return *internal_default_instance();
}


void SplitRegionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.SplitRegionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  split_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  _internal_metadata_.Clear();
}

bool SplitRegionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.SplitRegionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .kvrpcpb.Context context = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes split_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_split_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.SplitRegionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.SplitRegionRequest)
  return false;
#undef DO_
}

void SplitRegionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.SplitRegionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_context(), output);
  }

  // bytes split_key = 2;
  if (this->split_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->split_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.SplitRegionRequest)
}

::google::protobuf::uint8* SplitRegionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.SplitRegionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_context(), deterministic, target);
  }

  // bytes split_key = 2;
  if (this->split_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->split_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.SplitRegionRequest)
  return target;
}

size_t SplitRegionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.SplitRegionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes split_key = 2;
  if (this->split_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->split_key());
  }

  // .kvrpcpb.Context context = 1;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SplitRegionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.SplitRegionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SplitRegionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SplitRegionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.SplitRegionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.SplitRegionRequest)
    MergeFrom(*source);
  }
}

void SplitRegionRequest::MergeFrom(const SplitRegionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.SplitRegionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.split_key().size() > 0) {

    split_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.split_key_);
  }
  if (from.has_context()) {
    mutable_context()->::kvrpcpb::Context::MergeFrom(from.context());
  }
}

void SplitRegionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.SplitRegionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SplitRegionRequest::CopyFrom(const SplitRegionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.SplitRegionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SplitRegionRequest::IsInitialized() const {
  return true;
}

void SplitRegionRequest::Swap(SplitRegionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SplitRegionRequest::InternalSwap(SplitRegionRequest* other) {
  using std::swap;
  split_key_.Swap(&other->split_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(context_, other->context_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SplitRegionRequest::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SplitRegionResponse::InitAsDefaultInstance() {
  ::kvrpcpb::_SplitRegionResponse_default_instance_._instance.get_mutable()->region_error_ = const_cast< ::errorpb::Error*>(
      ::errorpb::Error::internal_default_instance());
  ::kvrpcpb::_SplitRegionResponse_default_instance_._instance.get_mutable()->left_ = const_cast< ::metapb::Region*>(
      ::metapb::Region::internal_default_instance());
  ::kvrpcpb::_SplitRegionResponse_default_instance_._instance.get_mutable()->right_ = const_cast< ::metapb::Region*>(
      ::metapb::Region::internal_default_instance());
}
void SplitRegionResponse::clear_region_error() {
  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
}
void SplitRegionResponse::clear_left() {
  if (GetArenaNoVirtual() == NULL && left_ != NULL) {
    delete left_;
  }
  left_ = NULL;
}
void SplitRegionResponse::clear_right() {
  if (GetArenaNoVirtual() == NULL && right_ != NULL) {
    delete right_;
  }
  right_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SplitRegionResponse::kRegionErrorFieldNumber;
const int SplitRegionResponse::kLeftFieldNumber;
const int SplitRegionResponse::kRightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SplitRegionResponse::SplitRegionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_kvrpcpb_2eproto::scc_info_SplitRegionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvrpcpb.SplitRegionResponse)
}
SplitRegionResponse::SplitRegionResponse(const SplitRegionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_region_error()) {
    region_error_ = new ::errorpb::Error(*from.region_error_);
  } else {
    region_error_ = NULL;
  }
  if (from.has_left()) {
    left_ = new ::metapb::Region(*from.left_);
  } else {
    left_ = NULL;
  }
  if (from.has_right()) {
    right_ = new ::metapb::Region(*from.right_);
  } else {
    right_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:kvrpcpb.SplitRegionResponse)
}

void SplitRegionResponse::SharedCtor() {
  ::memset(&region_error_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_) -
      reinterpret_cast<char*>(&region_error_)) + sizeof(right_));
}

SplitRegionResponse::~SplitRegionResponse() {
  // @@protoc_insertion_point(destructor:kvrpcpb.SplitRegionResponse)
  SharedDtor();
}

void SplitRegionResponse::SharedDtor() {
  if (this != internal_default_instance()) delete region_error_;
  if (this != internal_default_instance()) delete left_;
  if (this != internal_default_instance()) delete right_;
}

void SplitRegionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SplitRegionResponse::descriptor() {
  ::protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SplitRegionResponse& SplitRegionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_kvrpcpb_2eproto::scc_info_SplitRegionResponse.base);
  return *internal_default_instance();
}


void SplitRegionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:kvrpcpb.SplitRegionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && region_error_ != NULL) {
    delete region_error_;
  }
  region_error_ = NULL;
  if (GetArenaNoVirtual() == NULL && left_ != NULL) {
    delete left_;
  }
  left_ = NULL;
  if (GetArenaNoVirtual() == NULL && right_ != NULL) {
    delete right_;
  }
  right_ = NULL;
  _internal_metadata_.Clear();
}

bool SplitRegionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvrpcpb.SplitRegionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .errorpb.Error region_error = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metapb.Region left = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .metapb.Region right = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_right()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvrpcpb.SplitRegionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvrpcpb.SplitRegionResponse)
  return false;
#undef DO_
}

void SplitRegionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvrpcpb.SplitRegionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_region_error(), output);
  }

  // .metapb.Region left = 2;
  if (this->has_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_left(), output);
  }

  // .metapb.Region right = 3;
  if (this->has_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_right(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:kvrpcpb.SplitRegionResponse)
}

::google::protobuf::uint8* SplitRegionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:kvrpcpb.SplitRegionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_region_error(), deterministic, target);
  }

  // .metapb.Region left = 2;
  if (this->has_left()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_left(), deterministic, target);
  }

  // .metapb.Region right = 3;
  if (this->has_right()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_right(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvrpcpb.SplitRegionResponse)
  return target;
}

size_t SplitRegionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:kvrpcpb.SplitRegionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .errorpb.Error region_error = 1;
  if (this->has_region_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_error_);
  }

  // .metapb.Region left = 2;
  if (this->has_left()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *left_);
  }

  // .metapb.Region right = 3;
  if (this->has_right()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *right_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SplitRegionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:kvrpcpb.SplitRegionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SplitRegionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SplitRegionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:kvrpcpb.SplitRegionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:kvrpcpb.SplitRegionResponse)
    MergeFrom(*source);
  }
}

void SplitRegionResponse::MergeFrom(const SplitRegionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:kvrpcpb.SplitRegionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_region_error()) {
    mutable_region_error()->::errorpb::Error::MergeFrom(from.region_error());
  }
  if (from.has_left()) {
    mutable_left()->::metapb::Region::MergeFrom(from.left());
  }
  if (from.has_right()) {
    mutable_right()->::metapb::Region::MergeFrom(from.right());
  }
}

void SplitRegionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:kvrpcpb.SplitRegionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SplitRegionResponse::CopyFrom(const SplitRegionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:kvrpcpb.SplitRegionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SplitRegionResponse::IsInitialized() const {
  return true;
}

void SplitRegionResponse::Swap(SplitRegionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SplitRegionResponse::InternalSwap(SplitRegionResponse* other) {
  using std::swap;
  swap(region_error_, other->region_error_);
  swap(left_, other->left_);
  swap(right_, other->right_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SplitRegionResponse::GetMetadata() const {
  protobuf_kvrpcpb_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_kvrpcpb_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace kvrpcpb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::LockInfo* Arena::CreateMaybeMessage< ::kvrpcpb::LockInfo >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::LockInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::KeyError* Arena::CreateMaybeMessage< ::kvrpcpb::KeyError >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::KeyError >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::WriteConflict* Arena::CreateMaybeMessage< ::kvrpcpb::WriteConflict >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::WriteConflict >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::Context* Arena::CreateMaybeMessage< ::kvrpcpb::Context >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::Context >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::HandleTime* Arena::CreateMaybeMessage< ::kvrpcpb::HandleTime >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::HandleTime >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::ScanInfo* Arena::CreateMaybeMessage< ::kvrpcpb::ScanInfo >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::ScanInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::ScanDetail* Arena::CreateMaybeMessage< ::kvrpcpb::ScanDetail >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::ScanDetail >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::ExecDetails* Arena::CreateMaybeMessage< ::kvrpcpb::ExecDetails >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::ExecDetails >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::GetRequest* Arena::CreateMaybeMessage< ::kvrpcpb::GetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::GetRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::GetResponse* Arena::CreateMaybeMessage< ::kvrpcpb::GetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::GetResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::ScanRequest* Arena::CreateMaybeMessage< ::kvrpcpb::ScanRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::ScanRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::KvPair* Arena::CreateMaybeMessage< ::kvrpcpb::KvPair >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::KvPair >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::ScanResponse* Arena::CreateMaybeMessage< ::kvrpcpb::ScanResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::ScanResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::Mutation* Arena::CreateMaybeMessage< ::kvrpcpb::Mutation >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::Mutation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::PrewriteRequest* Arena::CreateMaybeMessage< ::kvrpcpb::PrewriteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::PrewriteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::PrewriteResponse* Arena::CreateMaybeMessage< ::kvrpcpb::PrewriteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::PrewriteResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::CommitRequest* Arena::CreateMaybeMessage< ::kvrpcpb::CommitRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::CommitRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::CommitResponse* Arena::CreateMaybeMessage< ::kvrpcpb::CommitResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::CommitResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::ImportRequest* Arena::CreateMaybeMessage< ::kvrpcpb::ImportRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::ImportRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::ImportResponse* Arena::CreateMaybeMessage< ::kvrpcpb::ImportResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::ImportResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::BatchRollbackRequest* Arena::CreateMaybeMessage< ::kvrpcpb::BatchRollbackRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::BatchRollbackRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::BatchRollbackResponse* Arena::CreateMaybeMessage< ::kvrpcpb::BatchRollbackResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::BatchRollbackResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::CleanupRequest* Arena::CreateMaybeMessage< ::kvrpcpb::CleanupRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::CleanupRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::CleanupResponse* Arena::CreateMaybeMessage< ::kvrpcpb::CleanupResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::CleanupResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::BatchGetRequest* Arena::CreateMaybeMessage< ::kvrpcpb::BatchGetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::BatchGetRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::BatchGetResponse* Arena::CreateMaybeMessage< ::kvrpcpb::BatchGetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::BatchGetResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::ScanLockRequest* Arena::CreateMaybeMessage< ::kvrpcpb::ScanLockRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::ScanLockRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::ScanLockResponse* Arena::CreateMaybeMessage< ::kvrpcpb::ScanLockResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::ScanLockResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::TxnInfo* Arena::CreateMaybeMessage< ::kvrpcpb::TxnInfo >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::TxnInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::ResolveLockRequest* Arena::CreateMaybeMessage< ::kvrpcpb::ResolveLockRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::ResolveLockRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::ResolveLockResponse* Arena::CreateMaybeMessage< ::kvrpcpb::ResolveLockResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::ResolveLockResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::GCRequest* Arena::CreateMaybeMessage< ::kvrpcpb::GCRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::GCRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::GCResponse* Arena::CreateMaybeMessage< ::kvrpcpb::GCResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::GCResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::RawGetRequest* Arena::CreateMaybeMessage< ::kvrpcpb::RawGetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::RawGetRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::RawGetResponse* Arena::CreateMaybeMessage< ::kvrpcpb::RawGetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::RawGetResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::RawPutRequest* Arena::CreateMaybeMessage< ::kvrpcpb::RawPutRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::RawPutRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::RawPutResponse* Arena::CreateMaybeMessage< ::kvrpcpb::RawPutResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::RawPutResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::RawBatchPutRequest* Arena::CreateMaybeMessage< ::kvrpcpb::RawBatchPutRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::RawBatchPutRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::RawBatchPutResponse* Arena::CreateMaybeMessage< ::kvrpcpb::RawBatchPutResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::RawBatchPutResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::RawBatchGetRequest* Arena::CreateMaybeMessage< ::kvrpcpb::RawBatchGetRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::RawBatchGetRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::RawBatchGetResponse* Arena::CreateMaybeMessage< ::kvrpcpb::RawBatchGetResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::RawBatchGetResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::RawDeleteRequest* Arena::CreateMaybeMessage< ::kvrpcpb::RawDeleteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::RawDeleteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::RawDeleteResponse* Arena::CreateMaybeMessage< ::kvrpcpb::RawDeleteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::RawDeleteResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::RawBatchDeleteRequest* Arena::CreateMaybeMessage< ::kvrpcpb::RawBatchDeleteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::RawBatchDeleteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::RawBatchDeleteResponse* Arena::CreateMaybeMessage< ::kvrpcpb::RawBatchDeleteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::RawBatchDeleteResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::DeleteRangeRequest* Arena::CreateMaybeMessage< ::kvrpcpb::DeleteRangeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::DeleteRangeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::DeleteRangeResponse* Arena::CreateMaybeMessage< ::kvrpcpb::DeleteRangeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::DeleteRangeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::RawDeleteRangeRequest* Arena::CreateMaybeMessage< ::kvrpcpb::RawDeleteRangeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::RawDeleteRangeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::RawDeleteRangeResponse* Arena::CreateMaybeMessage< ::kvrpcpb::RawDeleteRangeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::RawDeleteRangeResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::RawScanRequest* Arena::CreateMaybeMessage< ::kvrpcpb::RawScanRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::RawScanRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::RawScanResponse* Arena::CreateMaybeMessage< ::kvrpcpb::RawScanResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::RawScanResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::KeyRange* Arena::CreateMaybeMessage< ::kvrpcpb::KeyRange >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::KeyRange >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::RawBatchScanRequest* Arena::CreateMaybeMessage< ::kvrpcpb::RawBatchScanRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::RawBatchScanRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::RawBatchScanResponse* Arena::CreateMaybeMessage< ::kvrpcpb::RawBatchScanResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::RawBatchScanResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::MvccWrite* Arena::CreateMaybeMessage< ::kvrpcpb::MvccWrite >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::MvccWrite >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::MvccValue* Arena::CreateMaybeMessage< ::kvrpcpb::MvccValue >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::MvccValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::MvccLock* Arena::CreateMaybeMessage< ::kvrpcpb::MvccLock >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::MvccLock >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::MvccInfo* Arena::CreateMaybeMessage< ::kvrpcpb::MvccInfo >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::MvccInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::MvccGetByKeyRequest* Arena::CreateMaybeMessage< ::kvrpcpb::MvccGetByKeyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::MvccGetByKeyRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::MvccGetByKeyResponse* Arena::CreateMaybeMessage< ::kvrpcpb::MvccGetByKeyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::MvccGetByKeyResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::MvccGetByStartTsRequest* Arena::CreateMaybeMessage< ::kvrpcpb::MvccGetByStartTsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::MvccGetByStartTsRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::MvccGetByStartTsResponse* Arena::CreateMaybeMessage< ::kvrpcpb::MvccGetByStartTsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::MvccGetByStartTsResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::SplitRegionRequest* Arena::CreateMaybeMessage< ::kvrpcpb::SplitRegionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::SplitRegionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::kvrpcpb::SplitRegionResponse* Arena::CreateMaybeMessage< ::kvrpcpb::SplitRegionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::kvrpcpb::SplitRegionResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
